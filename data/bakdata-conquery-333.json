{
    "error_id": "333",
    "information": {
        "errors": [
            {
                "line": "99",
                "severity": "warning",
                "message": "trailing whitespaces",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
            }
        ]
    },
    "source_code": "\t\n\t@Override\n\tpublic void serialize(JsonGenerator gen, SerializerProvider serializers) throws IOException {\t\t\n\t\tByteArrayOutputStream baos = new ByteArrayOutputStream();\n\t\t\n\t\ttry (SmallOut output = new SmallOut(baos)){",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/333/Bucket.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/333/Bucket.java\nindex 9b76701ce7..9a919af038 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/333/Bucket.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/333/Bucket.java\n@@ -47,18 +47,18 @@ public abstract class Bucket extends IdentifiableImpl<BucketId> implements Itera\n \t@NotNull @Setter\n \t@ToString.Exclude\n \tprotected BitStore nullBits;\n-\t\n+\n \tpublic Bucket(int bucket, Import imp, int[] offsets) {\n \t\tthis.bucket = bucket;\n \t\tthis.imp = imp;\n \t\tthis.offsets = offsets;\n \t}\n-\t\n+\n \t@Override\n \tpublic BucketId createId() {\n \t\treturn new BucketId(imp.getId(), bucket);\n \t}\n-\t\n+\n \t@Override\n \tpublic PrimitiveIterator.OfInt iterator() {\n \t\treturn IntStream\n@@ -69,23 +69,23 @@ public abstract class Bucket extends IdentifiableImpl<BucketId> implements Itera\n \t}\n \n \tpublic abstract void initFields(int numberOfEntities);\n-\t\n+\n \tpublic int toLocal(int entity) {\n \t\treturn entity - getBucketSize()*bucket;\n \t}\n-\t\n+\n \tpublic int toGlobal(int entity) {\n \t\treturn entity + getBucketSize()*bucket;\n \t}\n-\t\n+\n \tpublic boolean containsLocalEntity(int localEntity) {\n \t\treturn offsets[localEntity]!=-1;\n \t}\n-\t\n+\n \tpublic int getFirstEventOfLocal(int localEntity) {\n \t\treturn offsets[localEntity];\n \t}\n-\t\n+\n \tpublic int getLastEventOfLocal(int localEntity) {\n \t\tfor(localEntity++;localEntity < offsets.length;localEntity++) {\n \t\t\tif(offsets[localEntity]!=-1) {\n@@ -94,11 +94,11 @@ public abstract class Bucket extends IdentifiableImpl<BucketId> implements Itera\n \t\t}\n \t\treturn numberOfEvents;\n \t}\n-\t\n+\n \t@Override\n-\tpublic void serialize(JsonGenerator gen, SerializerProvider serializers) throws IOException {\t\t\n+\tpublic void serialize(JsonGenerator gen, SerializerProvider serializers) throws IOException {\n \t\tByteArrayOutputStream baos = new ByteArrayOutputStream();\n-\t\t\n+\n \t\ttry (SmallOut output = new SmallOut(baos)){\n \t\t\twriteContent(output);\n \t\t}\n@@ -112,7 +112,7 @@ public abstract class Bucket extends IdentifiableImpl<BucketId> implements Itera\n \t\tgen.writeBinaryField(\"content\", content);\n \t\tgen.writeEndObject();\n \t}\n-\t\n+\n \tpublic Iterable<BucketEntry> entries() {\n \t\treturn ()->IntStream\n \t\t\t.range(0,getBucketSize())\n@@ -126,7 +126,7 @@ public abstract class Bucket extends IdentifiableImpl<BucketId> implements Itera\n \t}\n \n \tpublic abstract int getBucketSize();\n-\t\n+\n \tpublic boolean has(int event, Column column) {\n \t\treturn has(event, column.getPosition());\n \t}\n@@ -157,7 +157,7 @@ public abstract class Bucket extends IdentifiableImpl<BucketId> implements Itera\n \tpublic void serializeWithType(JsonGenerator gen, SerializerProvider serializers, TypeSerializer typeSer) throws IOException {\n \t\tthis.serialize(gen, serializers);\n \t}\n-\t\n+\n \tpublic abstract Map<String, Object> calculateMap(int event, Import imp);\n \tpublic abstract void writeContent(SmallOut output) throws IOException;\n \n",
            "diff_size": 14
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "145",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "151",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "153",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "157",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "158",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "159",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "161",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "163",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "164",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "165",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "167",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "169",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "171",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "173",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "175",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "176",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "177",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "178",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "180",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "182",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "184",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/333/Bucket.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/333/Bucket.java\nindex 9b76701ce7..1d98c4921e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/333/Bucket.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/333/Bucket.java\n@@ -33,133 +33,153 @@ import lombok.ToString;\n import lombok.experimental.FieldNameConstants;\n \n @FieldNameConstants\n-@Getter @Setter @ToString @JsonDeserialize(using = BucketDeserializer.class)\n+@Getter\n+@Setter\n+@ToString\n+@JsonDeserialize(using = BucketDeserializer.class)\n public abstract class Bucket extends IdentifiableImpl<BucketId> implements Iterable<Integer>, JsonSerializable {\n \n-\t@Min(0)\n-\tprivate int bucket;\n-\t@NotNull @NsIdRef\n-\tprivate Import imp;\n-\t@Min(0)\n-\tprivate int numberOfEvents;\n-\t@ToString.Exclude\n-\tprivate int[] offsets;\n-\t@NotNull @Setter\n-\t@ToString.Exclude\n-\tprotected BitStore nullBits;\n-\t\n-\tpublic Bucket(int bucket, Import imp, int[] offsets) {\n-\t\tthis.bucket = bucket;\n-\t\tthis.imp = imp;\n-\t\tthis.offsets = offsets;\n-\t}\n-\t\n-\t@Override\n-\tpublic BucketId createId() {\n-\t\treturn new BucketId(imp.getId(), bucket);\n-\t}\n-\t\n-\t@Override\n-\tpublic PrimitiveIterator.OfInt iterator() {\n-\t\treturn IntStream\n-\t\t\t.range(0,getBucketSize())\n-\t\t\t.filter(this::containsLocalEntity)\n-\t\t\t.map(this::toGlobal)\n-\t\t\t.iterator();\n-\t}\n-\n-\tpublic abstract void initFields(int numberOfEntities);\n-\t\n-\tpublic int toLocal(int entity) {\n-\t\treturn entity - getBucketSize()*bucket;\n-\t}\n-\t\n-\tpublic int toGlobal(int entity) {\n-\t\treturn entity + getBucketSize()*bucket;\n-\t}\n-\t\n-\tpublic boolean containsLocalEntity(int localEntity) {\n-\t\treturn offsets[localEntity]!=-1;\n-\t}\n-\t\n-\tpublic int getFirstEventOfLocal(int localEntity) {\n-\t\treturn offsets[localEntity];\n-\t}\n-\t\n-\tpublic int getLastEventOfLocal(int localEntity) {\n-\t\tfor(localEntity++;localEntity < offsets.length;localEntity++) {\n-\t\t\tif(offsets[localEntity]!=-1) {\n-\t\t\t\treturn offsets[localEntity];\n-\t\t\t}\n-\t\t}\n-\t\treturn numberOfEvents;\n-\t}\n-\t\n-\t@Override\n-\tpublic void serialize(JsonGenerator gen, SerializerProvider serializers) throws IOException {\t\t\n-\t\tByteArrayOutputStream baos = new ByteArrayOutputStream();\n-\t\t\n-\t\ttry (SmallOut output = new SmallOut(baos)){\n-\t\t\twriteContent(output);\n-\t\t}\n-\t\tbyte[] content = baos.toByteArray();\n-\t\tgen.writeStartObject();\n-\t\tgen.writeNumberField(Fields.bucket, bucket);\n-\t\tgen.writeStringField(Fields.imp, imp.getId().toString());\n-\t\tgen.writeNumberField(Fields.numberOfEvents, numberOfEvents);\n-\t\tgen.writeFieldName(Fields.offsets);\n-\t\tgen.writeArray(offsets, 0, offsets.length);\n-\t\tgen.writeBinaryField(\"content\", content);\n-\t\tgen.writeEndObject();\n-\t}\n-\t\n-\tpublic Iterable<BucketEntry> entries() {\n-\t\treturn ()->IntStream\n-\t\t\t.range(0,getBucketSize())\n-\t\t\t.filter(this::containsLocalEntity)\n-\t\t\t.boxed()\n-\t\t\t.flatMap(le -> IntStream\n-\t\t\t\t.range(getFirstEventOfLocal(le), getLastEventOfLocal(le))\n-\t\t\t\t.mapToObj(e->new BucketEntry(le,e))\n-\t\t\t)\n-\t\t\t.iterator();\n-\t}\n-\n-\tpublic abstract int getBucketSize();\n-\t\n-\tpublic boolean has(int event, Column column) {\n-\t\treturn has(event, column.getPosition());\n-\t}\n-\tpublic abstract boolean has(int event, int columnPosition);\n-\n-\tpublic abstract int getString(int event, Column column);\n-\tpublic abstract long getInteger(int event, Column column);\n-\tpublic abstract boolean getBoolean(int event, Column column);\n-\tpublic abstract double getReal(int event, Column column);\n-\tpublic abstract BigDecimal getDecimal(int event, Column column);\n-\tpublic abstract long getMoney(int event, Column column);\n-\tpublic abstract int getDate(int event, Column column);\n-\tpublic abstract CDateRange getDateRange(int event, Column column);\n-\tpublic Object getRaw(int event, Column column) {\n-\t\treturn getRaw(event, column.getPosition());\n-\t}\n-\tpublic abstract Object getRaw(int event, int columnPosition);\n-\tpublic Object getAsObject(int event, Column column) {\n-\t\treturn getAsObject(event, column.getPosition());\n-\t}\n-\tpublic abstract Object getAsObject(int event, int columnPosition);\n-\n-\tpublic abstract boolean eventIsContainedIn(int event, Column column, CDateRange dateRange);\n-\tpublic abstract boolean eventIsContainedIn(int event, Column column, CDateSet dateRanges);\n-\tpublic abstract CDateRange getAsDateRange(int event, Column currentColumn);\n-\n-\t@Override\n-\tpublic void serializeWithType(JsonGenerator gen, SerializerProvider serializers, TypeSerializer typeSer) throws IOException {\n-\t\tthis.serialize(gen, serializers);\n-\t}\n-\t\n-\tpublic abstract Map<String, Object> calculateMap(int event, Import imp);\n-\tpublic abstract void writeContent(SmallOut output) throws IOException;\n-\n-\tpublic abstract void read(SmallIn input) throws IOException;\n+    @Min(0)\n+    private int bucket;\n+    @NotNull\n+    @NsIdRef\n+    private Import imp;\n+    @Min(0)\n+    private int numberOfEvents;\n+    @ToString.Exclude\n+    private int[] offsets;\n+    @NotNull\n+    @Setter\n+    @ToString.Exclude\n+    protected BitStore nullBits;\n+\n+    public Bucket(int bucket, Import imp, int[] offsets) {\n+        this.bucket = bucket;\n+        this.imp = imp;\n+        this.offsets = offsets;\n+    }\n+\n+    @Override\n+    public BucketId createId() {\n+        return new BucketId(imp.getId(), bucket);\n+    }\n+\n+    @Override\n+    public PrimitiveIterator.OfInt iterator() {\n+        return IntStream\n+            .range(0, getBucketSize())\n+            .filter(this::containsLocalEntity)\n+            .map(this::toGlobal)\n+            .iterator();\n+    }\n+\n+    public abstract void initFields(int numberOfEntities);\n+\n+    public int toLocal(int entity) {\n+        return entity - getBucketSize() * bucket;\n+    }\n+\n+    public int toGlobal(int entity) {\n+        return entity + getBucketSize() * bucket;\n+    }\n+\n+    public boolean containsLocalEntity(int localEntity) {\n+        return offsets[localEntity] != -1;\n+    }\n+\n+    public int getFirstEventOfLocal(int localEntity) {\n+        return offsets[localEntity];\n+    }\n+\n+    public int getLastEventOfLocal(int localEntity) {\n+        for (localEntity++; localEntity < offsets.length; localEntity++) {\n+            if (offsets[localEntity] != -1) {\n+                return offsets[localEntity];\n+            }\n+        }\n+        return numberOfEvents;\n+    }\n+\n+    @Override\n+    public void serialize(JsonGenerator gen, SerializerProvider serializers) throws IOException {\n+        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+\n+        try (SmallOut output = new SmallOut(baos)) {\n+            writeContent(output);\n+        }\n+        byte[] content = baos.toByteArray();\n+        gen.writeStartObject();\n+        gen.writeNumberField(Fields.bucket, bucket);\n+        gen.writeStringField(Fields.imp, imp.getId().toString());\n+        gen.writeNumberField(Fields.numberOfEvents, numberOfEvents);\n+        gen.writeFieldName(Fields.offsets);\n+        gen.writeArray(offsets, 0, offsets.length);\n+        gen.writeBinaryField(\"content\", content);\n+        gen.writeEndObject();\n+    }\n+\n+    public Iterable<BucketEntry> entries() {\n+        return () -> IntStream\n+            .range(0, getBucketSize())\n+            .filter(this::containsLocalEntity)\n+            .boxed()\n+            .flatMap(le -> IntStream\n+                .range(getFirstEventOfLocal(le), getLastEventOfLocal(le))\n+                .mapToObj(e -> new BucketEntry(le, e))\n+            )\n+            .iterator();\n+    }\n+\n+    public abstract int getBucketSize();\n+\n+    public boolean has(int event, Column column) {\n+        return has(event, column.getPosition());\n+    }\n+\n+    public abstract boolean has(int event, int columnPosition);\n+\n+    public abstract int getString(int event, Column column);\n+\n+    public abstract long getInteger(int event, Column column);\n+\n+    public abstract boolean getBoolean(int event, Column column);\n+\n+    public abstract double getReal(int event, Column column);\n+\n+    public abstract BigDecimal getDecimal(int event, Column column);\n+\n+    public abstract long getMoney(int event, Column column);\n+\n+    public abstract int getDate(int event, Column column);\n+\n+    public abstract CDateRange getDateRange(int event, Column column);\n+\n+    public Object getRaw(int event, Column column) {\n+        return getRaw(event, column.getPosition());\n+    }\n+\n+    public abstract Object getRaw(int event, int columnPosition);\n+\n+    public Object getAsObject(int event, Column column) {\n+        return getAsObject(event, column.getPosition());\n+    }\n+\n+    public abstract Object getAsObject(int event, int columnPosition);\n+\n+    public abstract boolean eventIsContainedIn(int event, Column column, CDateRange dateRange);\n+\n+    public abstract boolean eventIsContainedIn(int event, Column column, CDateSet dateRanges);\n+\n+    public abstract CDateRange getAsDateRange(int event, Column currentColumn);\n+\n+    @Override\n+    public void serializeWithType(JsonGenerator gen, SerializerProvider serializers, TypeSerializer typeSer) throws IOException {\n+        this.serialize(gen, serializers);\n+    }\n+\n+    public abstract Map<String, Object> calculateMap(int event, Import imp);\n+\n+    public abstract void writeContent(SmallOut output) throws IOException;\n+\n+    public abstract void read(SmallIn input) throws IOException;\n }\n",
            "diff_size": 147
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "100",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/333/Bucket.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/333/Bucket.java\nindex 9b76701ce7..eea0cf2f74 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/333/Bucket.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/333/Bucket.java\n@@ -87,7 +87,7 @@ public abstract class Bucket extends IdentifiableImpl<BucketId> implements Itera\n \t}\n \t\n \tpublic int getLastEventOfLocal(int localEntity) {\n-\t\tfor(localEntity++;localEntity < offsets.length;localEntity++) {\n+\t\tfor(localEntity++; localEntity < offsets.length;localEntity++) {\n \t\t\tif(offsets[localEntity]!=-1) {\n \t\t\t\treturn offsets[localEntity];\n \t\t\t}\n@@ -96,12 +96,13 @@ public abstract class Bucket extends IdentifiableImpl<BucketId> implements Itera\n \t}\n \t\n \t@Override\n-\tpublic void serialize(JsonGenerator gen, SerializerProvider serializers) throws IOException {\t\t\n-\t\tByteArrayOutputStream baos = new ByteArrayOutputStream();\n+\tpublic void serialize(JsonGenerator gen, SerializerProvider serializers) throws IOException {\n+\tByteArrayOutputStream baos = new ByteArrayOutputStream();\n \t\t\n-\t\ttry (SmallOut output = new SmallOut(baos)){\n-\t\t\twriteContent(output);\n+\t\ttry (SmallOut output = new SmallOut(baos)) {\n+\twriteContent(output);\n \t\t}\n+\n \t\tbyte[] content = baos.toByteArray();\n \t\tgen.writeStartObject();\n \t\tgen.writeNumberField(Fields.bucket, bucket);\n@@ -114,8 +115,7 @@ public abstract class Bucket extends IdentifiableImpl<BucketId> implements Itera\n \t}\n \t\n \tpublic Iterable<BucketEntry> entries() {\n-\t\treturn ()->IntStream\n-\t\t\t.range(0,getBucketSize())\n+\t\treturn ()->IntStream.range(0,getBucketSize())\n \t\t\t.filter(this::containsLocalEntity)\n \t\t\t.boxed()\n \t\t\t.flatMap(le -> IntStream\n@@ -162,4 +162,4 @@ public abstract class Bucket extends IdentifiableImpl<BucketId> implements Itera\n \tpublic abstract void writeContent(SmallOut output) throws IOException;\n \n \tpublic abstract void read(SmallIn input) throws IOException;\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "140",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "142",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "145",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "148",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "150",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "151",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "154",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "156",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "158",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "160",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "161",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "162",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "163",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "164",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "166",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "168",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "170",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/333/Bucket.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/333/Bucket.java\nindex 9b76701ce7..ecfcc55d97 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/333/Bucket.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/333/Bucket.java\n@@ -6,10 +6,8 @@ import java.math.BigDecimal;\n import java.util.Map;\n import java.util.PrimitiveIterator;\n import java.util.stream.IntStream;\n-\n import javax.validation.constraints.Min;\n import javax.validation.constraints.NotNull;\n-\n import com.bakdata.conquery.io.jackson.serializer.BucketDeserializer;\n import com.bakdata.conquery.io.jackson.serializer.NsIdRef;\n import com.bakdata.conquery.models.common.CDateSet;\n@@ -26,140 +24,148 @@ import com.fasterxml.jackson.databind.SerializerProvider;\n import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n import com.fasterxml.jackson.databind.jsontype.TypeSerializer;\n import com.tomgibara.bits.BitStore;\n-\n import lombok.Getter;\n import lombok.Setter;\n import lombok.ToString;\n import lombok.experimental.FieldNameConstants;\n \n @FieldNameConstants\n-@Getter @Setter @ToString @JsonDeserialize(using = BucketDeserializer.class)\n+@Getter\n+@Setter\n+@ToString\n+@JsonDeserialize(using= BucketDeserializer.class)\n public abstract class Bucket extends IdentifiableImpl<BucketId> implements Iterable<Integer>, JsonSerializable {\n \n-\t@Min(0)\n-\tprivate int bucket;\n-\t@NotNull @NsIdRef\n-\tprivate Import imp;\n-\t@Min(0)\n-\tprivate int numberOfEvents;\n-\t@ToString.Exclude\n-\tprivate int[] offsets;\n-\t@NotNull @Setter\n-\t@ToString.Exclude\n-\tprotected BitStore nullBits;\n-\t\n-\tpublic Bucket(int bucket, Import imp, int[] offsets) {\n-\t\tthis.bucket = bucket;\n-\t\tthis.imp = imp;\n-\t\tthis.offsets = offsets;\n-\t}\n-\t\n-\t@Override\n-\tpublic BucketId createId() {\n-\t\treturn new BucketId(imp.getId(), bucket);\n-\t}\n-\t\n-\t@Override\n-\tpublic PrimitiveIterator.OfInt iterator() {\n-\t\treturn IntStream\n-\t\t\t.range(0,getBucketSize())\n-\t\t\t.filter(this::containsLocalEntity)\n-\t\t\t.map(this::toGlobal)\n-\t\t\t.iterator();\n-\t}\n-\n-\tpublic abstract void initFields(int numberOfEntities);\n-\t\n-\tpublic int toLocal(int entity) {\n-\t\treturn entity - getBucketSize()*bucket;\n-\t}\n-\t\n-\tpublic int toGlobal(int entity) {\n-\t\treturn entity + getBucketSize()*bucket;\n-\t}\n-\t\n-\tpublic boolean containsLocalEntity(int localEntity) {\n-\t\treturn offsets[localEntity]!=-1;\n-\t}\n-\t\n-\tpublic int getFirstEventOfLocal(int localEntity) {\n-\t\treturn offsets[localEntity];\n-\t}\n-\t\n-\tpublic int getLastEventOfLocal(int localEntity) {\n-\t\tfor(localEntity++;localEntity < offsets.length;localEntity++) {\n-\t\t\tif(offsets[localEntity]!=-1) {\n-\t\t\t\treturn offsets[localEntity];\n-\t\t\t}\n-\t\t}\n-\t\treturn numberOfEvents;\n-\t}\n-\t\n-\t@Override\n-\tpublic void serialize(JsonGenerator gen, SerializerProvider serializers) throws IOException {\t\t\n-\t\tByteArrayOutputStream baos = new ByteArrayOutputStream();\n-\t\t\n-\t\ttry (SmallOut output = new SmallOut(baos)){\n-\t\t\twriteContent(output);\n-\t\t}\n-\t\tbyte[] content = baos.toByteArray();\n-\t\tgen.writeStartObject();\n-\t\tgen.writeNumberField(Fields.bucket, bucket);\n-\t\tgen.writeStringField(Fields.imp, imp.getId().toString());\n-\t\tgen.writeNumberField(Fields.numberOfEvents, numberOfEvents);\n-\t\tgen.writeFieldName(Fields.offsets);\n-\t\tgen.writeArray(offsets, 0, offsets.length);\n-\t\tgen.writeBinaryField(\"content\", content);\n-\t\tgen.writeEndObject();\n-\t}\n-\t\n-\tpublic Iterable<BucketEntry> entries() {\n-\t\treturn ()->IntStream\n-\t\t\t.range(0,getBucketSize())\n-\t\t\t.filter(this::containsLocalEntity)\n-\t\t\t.boxed()\n-\t\t\t.flatMap(le -> IntStream\n-\t\t\t\t.range(getFirstEventOfLocal(le), getLastEventOfLocal(le))\n-\t\t\t\t.mapToObj(e->new BucketEntry(le,e))\n-\t\t\t)\n-\t\t\t.iterator();\n-\t}\n-\n-\tpublic abstract int getBucketSize();\n-\t\n-\tpublic boolean has(int event, Column column) {\n-\t\treturn has(event, column.getPosition());\n-\t}\n-\tpublic abstract boolean has(int event, int columnPosition);\n-\n-\tpublic abstract int getString(int event, Column column);\n-\tpublic abstract long getInteger(int event, Column column);\n-\tpublic abstract boolean getBoolean(int event, Column column);\n-\tpublic abstract double getReal(int event, Column column);\n-\tpublic abstract BigDecimal getDecimal(int event, Column column);\n-\tpublic abstract long getMoney(int event, Column column);\n-\tpublic abstract int getDate(int event, Column column);\n-\tpublic abstract CDateRange getDateRange(int event, Column column);\n-\tpublic Object getRaw(int event, Column column) {\n-\t\treturn getRaw(event, column.getPosition());\n-\t}\n-\tpublic abstract Object getRaw(int event, int columnPosition);\n-\tpublic Object getAsObject(int event, Column column) {\n-\t\treturn getAsObject(event, column.getPosition());\n-\t}\n-\tpublic abstract Object getAsObject(int event, int columnPosition);\n-\n-\tpublic abstract boolean eventIsContainedIn(int event, Column column, CDateRange dateRange);\n-\tpublic abstract boolean eventIsContainedIn(int event, Column column, CDateSet dateRanges);\n-\tpublic abstract CDateRange getAsDateRange(int event, Column currentColumn);\n-\n-\t@Override\n-\tpublic void serializeWithType(JsonGenerator gen, SerializerProvider serializers, TypeSerializer typeSer) throws IOException {\n-\t\tthis.serialize(gen, serializers);\n-\t}\n-\t\n-\tpublic abstract Map<String, Object> calculateMap(int event, Import imp);\n-\tpublic abstract void writeContent(SmallOut output) throws IOException;\n-\n-\tpublic abstract void read(SmallIn input) throws IOException;\n-}\n+    @Min(0)\n+    private int bucket;\n+    @NotNull @NsIdRef\n+    private Import imp;\n+    @Min(0)\n+    private int numberOfEvents;\n+    @ToString.Exclude\n+    private int[] offsets;\n+    @NotNull @Setter @ToString.Exclude\n+    protected BitStore nullBits;\n+\n+    public Bucket(int bucket, Import imp, int[] offsets) {\n+        this.bucket = bucket;\n+        this.imp = imp;\n+        this.offsets = offsets;\n+    }\n+\n+    @Override\n+    public BucketId createId() {\n+        return new BucketId(imp.getId(), bucket);\n+    }\n+\n+    @Override\n+    public PrimitiveIterator.OfInt iterator() {\n+        return IntStream.range(0, getBucketSize()).filter(this::containsLocalEntity)\n+                                                  .map(this::toGlobal)\n+                                                  .iterator();\n+    }\n+\n+    public abstract void initFields(int numberOfEntities);\n+\n+    public int toLocal(int entity) {\n+        return entity - getBucketSize() * bucket;\n+    }\n+\n+    public int toGlobal(int entity) {\n+        return entity+getBucketSize() * bucket;\n+    }\n+\n+    public boolean containsLocalEntity(int localEntity) {\n+        return offsets[localEntity] != -1;\n+    }\n+\n+    public int getFirstEventOfLocal(int localEntity) {\n+        return offsets[localEntity];\n+    }\n+\n+    public int getLastEventOfLocal(int localEntity) {\n+        for(localEntity++;localEntity<offsets.length; localEntity++) {\n+            if(offsets[localEntity] != -1) {\n+                return offsets[localEntity];\n+            }\n+        }\n+        return numberOfEvents;\n+    }\n+\n+    @Override\n+    public void serialize(JsonGenerator gen, SerializerProvider serializers) throws IOException {\n+        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+        try(SmallOut output = new SmallOut(baos)) {\n+            writeContent(output);\n+        }\n+\n+        byte[] content = baos.toByteArray();\n+        gen.writeStartObject();\n+        gen.writeNumberField(Fields.bucket, bucket);\n+        gen.writeStringField(Fields.imp, imp.getId().toString());\n+        gen.writeNumberField(Fields.numberOfEvents, numberOfEvents);\n+        gen.writeFieldName(Fields.offsets);\n+        gen.writeArray(offsets, 0, offsets.length);\n+        gen.writeBinaryField(\"content\", content);\n+        gen.writeEndObject();\n+    }\n+\n+    public Iterable<BucketEntry> entries() {\n+        return ()->IntStream.range(0, getBucketSize()).filter(this::containsLocalEntity)\n+                                                      .boxed()\n+                                                      .flatMap(le->IntStream.range(getFirstEventOfLocal(le), getLastEventOfLocal(le)).mapToObj(e-> new BucketEntry(le, e)))\n+                                                      .iterator();\n+    }\n+\n+    public abstract int getBucketSize();\n+\n+    public boolean has(int event, Column column) {\n+        return has(event, column.getPosition());\n+    }\n+\n+    public abstract boolean has(int event, int columnPosition);\n+\n+    public abstract int getString(int event, Column column);\n+\n+    public abstract long getInteger(int event, Column column);\n+\n+    public abstract boolean getBoolean(int event, Column column);\n+\n+    public abstract double getReal(int event, Column column);\n+\n+    public abstract BigDecimal getDecimal(int event, Column column);\n+\n+    public abstract long getMoney(int event, Column column);\n+\n+    public abstract int getDate(int event, Column column);\n+\n+    public abstract CDateRange getDateRange(int event, Column column);\n+\n+    public Object getRaw(int event, Column column) {\n+        return getRaw(event, column.getPosition());\n+    }\n+\n+    public abstract Object getRaw(int event, int columnPosition);\n+\n+    public Object getAsObject(int event, Column column) {\n+        return getAsObject(event, column.getPosition());\n+    }\n+\n+    public abstract Object getAsObject(int event, int columnPosition);\n+\n+    public abstract boolean eventIsContainedIn(int event, Column column, CDateRange dateRange);\n+\n+    public abstract boolean eventIsContainedIn(int event, Column column, CDateSet dateRanges);\n+\n+    public abstract CDateRange getAsDateRange(int event, Column currentColumn);\n+    @Override\n+    public void serializeWithType(JsonGenerator gen, SerializerProvider serializers, TypeSerializer typeSer) throws IOException {\n+        this.serialize(gen, serializers);\n+    }\n+\n+    public abstract Map<String, Object> calculateMap(int event, Import imp);\n+\n+    public abstract void writeContent(SmallOut output) throws IOException;\n+\n+    public abstract void read(SmallIn input) throws IOException;\n+}\n\\ No newline at end of file\n",
            "diff_size": 140
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/333/Bucket.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/333/Bucket.java\nindex 9b76701ce7..9a919af038 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/333/Bucket.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/333/Bucket.java\n@@ -47,18 +47,18 @@ public abstract class Bucket extends IdentifiableImpl<BucketId> implements Itera\n \t@NotNull @Setter\n \t@ToString.Exclude\n \tprotected BitStore nullBits;\n-\t\n+\n \tpublic Bucket(int bucket, Import imp, int[] offsets) {\n \t\tthis.bucket = bucket;\n \t\tthis.imp = imp;\n \t\tthis.offsets = offsets;\n \t}\n-\t\n+\n \t@Override\n \tpublic BucketId createId() {\n \t\treturn new BucketId(imp.getId(), bucket);\n \t}\n-\t\n+\n \t@Override\n \tpublic PrimitiveIterator.OfInt iterator() {\n \t\treturn IntStream\n@@ -69,23 +69,23 @@ public abstract class Bucket extends IdentifiableImpl<BucketId> implements Itera\n \t}\n \n \tpublic abstract void initFields(int numberOfEntities);\n-\t\n+\n \tpublic int toLocal(int entity) {\n \t\treturn entity - getBucketSize()*bucket;\n \t}\n-\t\n+\n \tpublic int toGlobal(int entity) {\n \t\treturn entity + getBucketSize()*bucket;\n \t}\n-\t\n+\n \tpublic boolean containsLocalEntity(int localEntity) {\n \t\treturn offsets[localEntity]!=-1;\n \t}\n-\t\n+\n \tpublic int getFirstEventOfLocal(int localEntity) {\n \t\treturn offsets[localEntity];\n \t}\n-\t\n+\n \tpublic int getLastEventOfLocal(int localEntity) {\n \t\tfor(localEntity++;localEntity < offsets.length;localEntity++) {\n \t\t\tif(offsets[localEntity]!=-1) {\n@@ -94,11 +94,11 @@ public abstract class Bucket extends IdentifiableImpl<BucketId> implements Itera\n \t\t}\n \t\treturn numberOfEvents;\n \t}\n-\t\n+\n \t@Override\n-\tpublic void serialize(JsonGenerator gen, SerializerProvider serializers) throws IOException {\t\t\n+\tpublic void serialize(JsonGenerator gen, SerializerProvider serializers) throws IOException {\n \t\tByteArrayOutputStream baos = new ByteArrayOutputStream();\n-\t\t\n+\n \t\ttry (SmallOut output = new SmallOut(baos)){\n \t\t\twriteContent(output);\n \t\t}\n@@ -112,7 +112,7 @@ public abstract class Bucket extends IdentifiableImpl<BucketId> implements Itera\n \t\tgen.writeBinaryField(\"content\", content);\n \t\tgen.writeEndObject();\n \t}\n-\t\n+\n \tpublic Iterable<BucketEntry> entries() {\n \t\treturn ()->IntStream\n \t\t\t.range(0,getBucketSize())\n@@ -126,7 +126,7 @@ public abstract class Bucket extends IdentifiableImpl<BucketId> implements Itera\n \t}\n \n \tpublic abstract int getBucketSize();\n-\t\n+\n \tpublic boolean has(int event, Column column) {\n \t\treturn has(event, column.getPosition());\n \t}\n@@ -157,7 +157,7 @@ public abstract class Bucket extends IdentifiableImpl<BucketId> implements Itera\n \tpublic void serializeWithType(JsonGenerator gen, SerializerProvider serializers, TypeSerializer typeSer) throws IOException {\n \t\tthis.serialize(gen, serializers);\n \t}\n-\t\n+\n \tpublic abstract Map<String, Object> calculateMap(int event, Import imp);\n \tpublic abstract void writeContent(SmallOut output) throws IOException;\n \n",
            "diff_size": 14
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/333/Bucket.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/333/Bucket.java\nindex 9b76701ce7..9a919af038 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/333/Bucket.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/333/Bucket.java\n@@ -47,18 +47,18 @@ public abstract class Bucket extends IdentifiableImpl<BucketId> implements Itera\n \t@NotNull @Setter\n \t@ToString.Exclude\n \tprotected BitStore nullBits;\n-\t\n+\n \tpublic Bucket(int bucket, Import imp, int[] offsets) {\n \t\tthis.bucket = bucket;\n \t\tthis.imp = imp;\n \t\tthis.offsets = offsets;\n \t}\n-\t\n+\n \t@Override\n \tpublic BucketId createId() {\n \t\treturn new BucketId(imp.getId(), bucket);\n \t}\n-\t\n+\n \t@Override\n \tpublic PrimitiveIterator.OfInt iterator() {\n \t\treturn IntStream\n@@ -69,23 +69,23 @@ public abstract class Bucket extends IdentifiableImpl<BucketId> implements Itera\n \t}\n \n \tpublic abstract void initFields(int numberOfEntities);\n-\t\n+\n \tpublic int toLocal(int entity) {\n \t\treturn entity - getBucketSize()*bucket;\n \t}\n-\t\n+\n \tpublic int toGlobal(int entity) {\n \t\treturn entity + getBucketSize()*bucket;\n \t}\n-\t\n+\n \tpublic boolean containsLocalEntity(int localEntity) {\n \t\treturn offsets[localEntity]!=-1;\n \t}\n-\t\n+\n \tpublic int getFirstEventOfLocal(int localEntity) {\n \t\treturn offsets[localEntity];\n \t}\n-\t\n+\n \tpublic int getLastEventOfLocal(int localEntity) {\n \t\tfor(localEntity++;localEntity < offsets.length;localEntity++) {\n \t\t\tif(offsets[localEntity]!=-1) {\n@@ -94,11 +94,11 @@ public abstract class Bucket extends IdentifiableImpl<BucketId> implements Itera\n \t\t}\n \t\treturn numberOfEvents;\n \t}\n-\t\n+\n \t@Override\n-\tpublic void serialize(JsonGenerator gen, SerializerProvider serializers) throws IOException {\t\t\n+\tpublic void serialize(JsonGenerator gen, SerializerProvider serializers) throws IOException {\n \t\tByteArrayOutputStream baos = new ByteArrayOutputStream();\n-\t\t\n+\n \t\ttry (SmallOut output = new SmallOut(baos)){\n \t\t\twriteContent(output);\n \t\t}\n@@ -112,7 +112,7 @@ public abstract class Bucket extends IdentifiableImpl<BucketId> implements Itera\n \t\tgen.writeBinaryField(\"content\", content);\n \t\tgen.writeEndObject();\n \t}\n-\t\n+\n \tpublic Iterable<BucketEntry> entries() {\n \t\treturn ()->IntStream\n \t\t\t.range(0,getBucketSize())\n@@ -126,7 +126,7 @@ public abstract class Bucket extends IdentifiableImpl<BucketId> implements Itera\n \t}\n \n \tpublic abstract int getBucketSize();\n-\t\n+\n \tpublic boolean has(int event, Column column) {\n \t\treturn has(event, column.getPosition());\n \t}\n@@ -157,7 +157,7 @@ public abstract class Bucket extends IdentifiableImpl<BucketId> implements Itera\n \tpublic void serializeWithType(JsonGenerator gen, SerializerProvider serializers, TypeSerializer typeSer) throws IOException {\n \t\tthis.serialize(gen, serializers);\n \t}\n-\t\n+\n \tpublic abstract Map<String, Object> calculateMap(int event, Import imp);\n \tpublic abstract void writeContent(SmallOut output) throws IOException;\n \n",
            "diff_size": 14
        }
    ]
}