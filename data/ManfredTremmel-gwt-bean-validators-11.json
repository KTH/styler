{
    "error_id": "11",
    "information": {
        "errors": [
            {
                "line": "82",
                "column": "51",
                "severity": "warning",
                "message": "'}' at column 51 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "\n  @Override\n  public void initialize(final Email annotation) {}\n\n  @Override\n  public boolean isValid(final CharSequence value, final ConstraintValidatorContext context) {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/11/EmailValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/styler/11/EmailValidator.java\nindex d87654bfdc..d5e89e3570 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/11/EmailValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/styler/11/EmailValidator.java\n@@ -37,9 +37,9 @@ import javax.validation.ConstraintValidatorContext;\n  */\n @SuppressWarnings({\"checkstyle:avoidEscapedUnicodeCharacters\", \"deprecation\"})\n public class EmailValidator implements ConstraintValidator<Email, CharSequence> {\n-  private static final String LOCAL_PART_ATOM = \"[a-z0-9!#$%&'*+/=?^_`{|}~\\u0080-\\uFFFF-]\";\n+  private static final String LOCAL_PART_ATOM = \"[a-z0-9!#$%&'*+/=?^_`{|}~\u0080-\uffff-]\";\n   private static final String LOCAL_PART_INSIDE_QUOTES_ATOM =\n-      \"([a-z0-9!#$%&'*.(),<>\\\\[\\\\]:;  @+/=?^_`{|}~\\u0080-\\uFFFF-]|\\\\\\\\\\\\\\\\|\\\\\\\\\\\\\\\")\";\n+      \"([a-z0-9!#$%&'*.(),<>\\\\[\\\\]:;  @+/=?^_`{|}~\u0080-\uffff-]|\\\\\\\\\\\\\\\\|\\\\\\\\\\\\\\\")\";\n   private static final String DOMAIN_LABEL = \"[a-z0-9!#$%&'*+/=?^_`{|}~-]\";\n   private static final String DOMAIN = DOMAIN_LABEL + \"+(\\\\.\" + DOMAIN_LABEL + \"+)*\";\n   private static final String IP_DOMAIN = \"\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\]\";\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/11/EmailValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/intellij/11/EmailValidator.java\nindex d87654bfdc..650d70984d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/11/EmailValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/intellij/11/EmailValidator.java\n@@ -79,7 +79,8 @@ public class EmailValidator implements ConstraintValidator<Email, CharSequence>\n           CASE_INSENSITIVE);\n \n   @Override\n-  public void initialize(final Email annotation) {}\n+  public void initialize(final Email annotation) {\n+  }\n \n   @Override\n   public boolean isValid(final CharSequence value, final ConstraintValidatorContext context) {\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "column": "51",
                    "severity": "warning",
                    "message": "'}' at column 51 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/11/EmailValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/naturalize/11/EmailValidator.java\nindex d87654bfdc..75fb43e047 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/11/EmailValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/naturalize/11/EmailValidator.java\n@@ -54,7 +54,8 @@ public class EmailValidator implements ConstraintValidator<Email, CharSequence>\n           + \"%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\"\n           + \"\\\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|\"\n           + \"(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\";\n-  private static final String CASE_INSENSITIVE = \"i\";\n+\n+private static final String CASE_INSENSITIVE = \"i\";\n   private static final int MAX_LOCAL_PART_LENGTH = 64;\n   /**\n    * This is the maximum length of a domain name. But be aware that each label (parts separated by a\n@@ -78,7 +79,7 @@ public class EmailValidator implements ConstraintValidator<Email, CharSequence>\n       RegExp.compile(\"^(\" + DOMAIN + \"|\" + IP_DOMAIN + \"|\" + \"\\\\[IPv6:\" + IP_V6_DOMAIN + \"\\\\])$\",\n           CASE_INSENSITIVE);\n \n-  @Override\n+@Override\n   public void initialize(final Email annotation) {}\n \n   @Override\n@@ -137,4 +138,4 @@ public class EmailValidator implements ConstraintValidator<Email, CharSequence>\n     return matcher != null;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 746).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 251).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "100",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "102",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "107",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "110",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "114",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "123",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "128",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/11/EmailValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/codebuff/11/EmailValidator.java\nindex d87654bfdc..1a9d852636 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/11/EmailValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/codebuff/11/EmailValidator.java\n@@ -9,11 +9,8 @@ package org.hibernate.validator.internal.constraintvalidators.hv;\n \n import com.google.gwt.regexp.shared.MatchResult;\n import com.google.gwt.regexp.shared.RegExp;\n-\n import org.hibernate.validator.constraints.Email;\n-\n import java.net.IDN;\n-\n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n \n@@ -35,106 +32,98 @@ import javax.validation.ConstraintValidatorContext;\n  * @author Guillaume Smet\n  * @author Manfred Tremmel - GWT port\n  */\n+\n+\n @SuppressWarnings({\"checkstyle:avoidEscapedUnicodeCharacters\", \"deprecation\"})\n public class EmailValidator implements ConstraintValidator<Email, CharSequence> {\n-  private static final String LOCAL_PART_ATOM = \"[a-z0-9!#$%&'*+/=?^_`{|}~\\u0080-\\uFFFF-]\";\n-  private static final String LOCAL_PART_INSIDE_QUOTES_ATOM =\n-      \"([a-z0-9!#$%&'*.(),<>\\\\[\\\\]:;  @+/=?^_`{|}~\\u0080-\\uFFFF-]|\\\\\\\\\\\\\\\\|\\\\\\\\\\\\\\\")\";\n-  private static final String DOMAIN_LABEL = \"[a-z0-9!#$%&'*+/=?^_`{|}~-]\";\n-  private static final String DOMAIN = DOMAIN_LABEL + \"+(\\\\.\" + DOMAIN_LABEL + \"+)*\";\n-  private static final String IP_DOMAIN = \"\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\]\";\n+    private static final String LOCAL_PART_ATOM = \"[a-z0-9!#$%&'*+/=?^_`{|}~\\u0080-\\uFFFF-]\";\n+    private static final String LOCAL_PART_INSIDE_QUOTES_ATOM = \"([a-z0-9!#$%&'*.(),<>\\\\[\\\\]:;  @+/=?^_`{|}~\\u0080-\\uFFFF-]|\\\\\\\\\\\\\\\\|\\\\\\\\\\\\\\\")\";\n+    private static final String DOMAIN_LABEL = \"[a-z0-9!#$%&'*+/=?^_`{|}~-]\";\n+    private static final String DOMAIN = DOMAIN_LABEL + \"+(\\\\.\" + DOMAIN_LABEL + \"+)*\";\n+    private static final String IP_DOMAIN = \"\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\]\";\n   // IP v6 regex taken from\n   // http://stackoverflow.com/questions/53497/regular-expression-that-matches-valid-ipv6-addresses\n-  private static final String IP_V6_DOMAIN =\n-      \"(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}\"\n-          + \":[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}\"\n-          + \":){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|\"\n-          + \"([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:\"\n-          + \"[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}\"\n-          + \"%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\"\n-          + \"\\\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|\"\n-          + \"(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\";\n-  private static final String CASE_INSENSITIVE = \"i\";\n-  private static final int MAX_LOCAL_PART_LENGTH = 64;\n+    private static final String IP_V6_DOMAIN = \"(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}\" + \":[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}\" + \":){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|\" + \"([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:\" + \"[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}\" + \"%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\" + \"\\\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|\" + \"(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\";\n+    private static final String CASE_INSENSITIVE = \"i\";\n+    private static final int MAX_LOCAL_PART_LENGTH = 64;\n   /**\n    * This is the maximum length of a domain name. But be aware that each label (parts separated by a\n    * dot) of the domain name must be at most 63 characters long. This is verified by\n    * {@link IDN#toASCII(String)}.\n    */\n-  private static final int MAX_DOMAIN_PART_LENGTH = 255;\n+    private static final int MAX_DOMAIN_PART_LENGTH = 255;\n \n   /**\n    * Regular expression for the local part of an email address (everything before '@').\n    */\n-  private static final RegExp LOCAL_PART_PATTERN = RegExp.compile(\n-      \"^(\" + LOCAL_PART_ATOM + \"+|\\\"\" + LOCAL_PART_INSIDE_QUOTES_ATOM + \"+\\\")\" + \"(\\\\.\" + \"(\"\n-          + LOCAL_PART_ATOM + \"+|\\\"\" + LOCAL_PART_INSIDE_QUOTES_ATOM + \"+\\\")\" + \")*$\",\n-      CASE_INSENSITIVE);\n+    private static final RegExp LOCAL_PART_PATTERN = RegExp.compile(\"^(\" + LOCAL_PART_ATOM + \"+|\\\"\" + LOCAL_PART_INSIDE_QUOTES_ATOM + \"+\\\")\" + \"(\\\\.\" + \"(\" + LOCAL_PART_ATOM + \"+|\\\"\" + LOCAL_PART_INSIDE_QUOTES_ATOM + \"+\\\")\" + \")*$\", CASE_INSENSITIVE);\n \n   /**\n    * Regular expression for the domain part of an email address (everything after '@').\n    */\n-  private static final RegExp DOMAIN_PATTERN =\n-      RegExp.compile(\"^(\" + DOMAIN + \"|\" + IP_DOMAIN + \"|\" + \"\\\\[IPv6:\" + IP_V6_DOMAIN + \"\\\\])$\",\n-          CASE_INSENSITIVE);\n+    private static final RegExp DOMAIN_PATTERN = RegExp.compile(\"^(\" + DOMAIN + \"|\" + IP_DOMAIN + \"|\" + \"\\\\[IPv6:\" + IP_V6_DOMAIN + \"\\\\])$\",\n+                                                 CASE_INSENSITIVE);\n+\n \n-  @Override\n-  public void initialize(final Email annotation) {}\n+    @Override\n+    public void initialize(final Email annotation) {\n \n-  @Override\n-  public boolean isValid(final CharSequence value, final ConstraintValidatorContext context) {\n+    }\n+\n+    @Override\n+    public boolean isValid(final CharSequence value,\n+        final ConstraintValidatorContext context) {\n     if (value == null || value.length() == 0) {\n-      return true;\n+        return true;\n     }\n \n     // cannot split email string at @ as it can be a part of quoted local part of email.\n     // so we need to split at a position of last @ present in the string:\n+\n     final String stringValue = value.toString();\n     final int splitPosition = stringValue.lastIndexOf('@');\n \n     // need to check if\n     if (splitPosition < 0) {\n-      return false;\n+        return false;\n     }\n \n     final String localPart = stringValue.substring(0, splitPosition);\n     final String domainPart = stringValue.substring(splitPosition + 1);\n-\n     if (!this.matchLocalPart(localPart)) {\n-      return false;\n+        return false;\n     }\n-\n     return this.matchDomain(domainPart);\n-  }\n+    }\n+\n \n-  private boolean matchLocalPart(final String localPart) {\n+    private boolean matchLocalPart(final String localPart) {\n     if (localPart.length() > MAX_LOCAL_PART_LENGTH) {\n-      return false;\n+        return false;\n     }\n+\n     final MatchResult matcher = LOCAL_PART_PATTERN.exec(localPart);\n     return matcher != null;\n-  }\n+    }\n+\n \n-  private boolean matchDomain(final String domain) {\n+    private boolean matchDomain(final String domain) {\n     // if we have a trailing dot the domain part we have an invalid email address.\n     // the regular expression match would take care of this, but IDN.toASCII drops the trailing '.'\n     if (domain.endsWith(\".\")) {\n-      return false;\n+        return false;\n     }\n-\n     String asciiString;\n     try {\n-      asciiString = IDN.toASCII(domain);\n+        asciiString = IDN.toASCII(domain);\n     } catch (final IllegalArgumentException e) {\n       return false;\n     }\n-\n     if (asciiString.length() > MAX_DOMAIN_PART_LENGTH) {\n-      return false;\n+        return false;\n     }\n \n     final MatchResult matcher = DOMAIN_PATTERN.exec(asciiString);\n     return matcher != null;\n-  }\n-\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 59
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/11/EmailValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/styler_random/11/EmailValidator.java\nindex d87654bfdc..d5e89e3570 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/11/EmailValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/styler_random/11/EmailValidator.java\n@@ -37,9 +37,9 @@ import javax.validation.ConstraintValidatorContext;\n  */\n @SuppressWarnings({\"checkstyle:avoidEscapedUnicodeCharacters\", \"deprecation\"})\n public class EmailValidator implements ConstraintValidator<Email, CharSequence> {\n-  private static final String LOCAL_PART_ATOM = \"[a-z0-9!#$%&'*+/=?^_`{|}~\\u0080-\\uFFFF-]\";\n+  private static final String LOCAL_PART_ATOM = \"[a-z0-9!#$%&'*+/=?^_`{|}~\u0080-\uffff-]\";\n   private static final String LOCAL_PART_INSIDE_QUOTES_ATOM =\n-      \"([a-z0-9!#$%&'*.(),<>\\\\[\\\\]:;  @+/=?^_`{|}~\\u0080-\\uFFFF-]|\\\\\\\\\\\\\\\\|\\\\\\\\\\\\\\\")\";\n+      \"([a-z0-9!#$%&'*.(),<>\\\\[\\\\]:;  @+/=?^_`{|}~\u0080-\uffff-]|\\\\\\\\\\\\\\\\|\\\\\\\\\\\\\\\")\";\n   private static final String DOMAIN_LABEL = \"[a-z0-9!#$%&'*+/=?^_`{|}~-]\";\n   private static final String DOMAIN = DOMAIN_LABEL + \"+(\\\\.\" + DOMAIN_LABEL + \"+)*\";\n   private static final String IP_DOMAIN = \"\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\]\";\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/11/EmailValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/styler_three_grams/11/EmailValidator.java\nindex d87654bfdc..94b19620cc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/11/EmailValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/styler_three_grams/11/EmailValidator.java\n@@ -37,9 +37,9 @@ import javax.validation.ConstraintValidatorContext;\n  */\n @SuppressWarnings({\"checkstyle:avoidEscapedUnicodeCharacters\", \"deprecation\"})\n public class EmailValidator implements ConstraintValidator<Email, CharSequence> {\n-  private static final String LOCAL_PART_ATOM = \"[a-z0-9!#$%&'*+/=?^_`{|}~\\u0080-\\uFFFF-]\";\n+  private static final String LOCAL_PART_ATOM = \"[a-z0-9!#$%&'*+/=?^_`{|}~\u0080-\uffff-]\";\n   private static final String LOCAL_PART_INSIDE_QUOTES_ATOM =\n-      \"([a-z0-9!#$%&'*.(),<>\\\\[\\\\]:;  @+/=?^_`{|}~\\u0080-\\uFFFF-]|\\\\\\\\\\\\\\\\|\\\\\\\\\\\\\\\")\";\n+      \"([a-z0-9!#$%&'*.(),<>\\\\[\\\\]:;  @+/=?^_`{|}~\u0080-\uffff-]|\\\\\\\\\\\\\\\\|\\\\\\\\\\\\\\\")\";\n   private static final String DOMAIN_LABEL = \"[a-z0-9!#$%&'*+/=?^_`{|}~-]\";\n   private static final String DOMAIN = DOMAIN_LABEL + \"+(\\\\.\" + DOMAIN_LABEL + \"+)*\";\n   private static final String IP_DOMAIN = \"\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\]\";\n@@ -79,9 +79,7 @@ public class EmailValidator implements ConstraintValidator<Email, CharSequence>\n           CASE_INSENSITIVE);\n \n   @Override\n-  public void initialize(final Email annotation) {}\n-\n-  @Override\n+  public void initialize(final Email annotation) { } @Override\n   public boolean isValid(final CharSequence value, final ConstraintValidatorContext context) {\n     if (value == null || value.length() == 0) {\n       return true;\n",
            "diff_size": 5
        }
    ]
}