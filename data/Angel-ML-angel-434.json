{
    "error_id": "434",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/434/TFloatMatrix.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/434/TFloatMatrix.java\nindex 012388defc..c0f4640d15 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/434/TFloatMatrix.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/434/TFloatMatrix.java\n@@ -22,59 +22,59 @@ import com.tencent.angel.ml.math.TVector;\n \n public abstract class TFloatMatrix extends TMatrix {\n \n-  /**\n-   * Create a new float matrix.\n-   *\n-   * @param row the row\n-   * @param col the col\n-   */\n-  public TFloatMatrix(int row, int col) {\n-    super(row, col);\n-  }\n+    /**\n+     * Create a new float matrix.\n+     *\n+     * @param row the row\n+     * @param col the col\n+     */\n+    public TFloatMatrix(int row, int col) {\n+        super(row, col);\n+    }\n \n-  /**\n-   * Increases specified element by value.\n-   *\n-   * @param rowId the row id\n-   * @param colId the col id\n-   * @param value the value\n-   */\n-  public abstract void inc(int rowId, int colId, float value);\n+    /**\n+     * Increases specified element by value.\n+     *\n+     * @param rowId the row id\n+     * @param colId the col id\n+     * @param value the value\n+     */\n+    public abstract void inc(int rowId, int colId, float value);\n \n-  /**\n-   * Plus by other matrix.\n-   *\n-   * @param other the other\n-   */\n-  public abstract void plusBy(TMatrix other);\n+    /**\n+     * Plus by other matrix.\n+     *\n+     * @param other the other\n+     */\n+    public abstract void plusBy(TMatrix other);\n \n-  /**\n-   * Plus by other vector\n-   *\n-   * @param other the other\n-   */\n-  public abstract void plusBy(TVector other);\n+    /**\n+     * Plus by other vector\n+     *\n+     * @param other the other\n+     */\n+    public abstract void plusBy(TVector other);\n \n-  /**\n-   * Get specified value.\n-   *\n-   * @param rowId the row id\n-   * @param colId the col id\n-   * @return the value\n-   */\n-  public abstract float get(int rowId, int colId);\n+    /**\n+     * Get specified value.\n+     *\n+     * @param rowId the row id\n+     * @param colId the col id\n+     * @return the value\n+     */\n+    public abstract float get(int rowId, int colId);\n \n-  /**\n-   * Gets specified vector.\n-   *\n-   * @param rowId the row id\n-   * @return the vector\n-   */\n-  public abstract TFloatVector getTFloatVector(int rowId);\n+    /**\n+     * Gets specified vector.\n+     *\n+     * @param rowId the row id\n+     * @return the vector\n+     */\n+    public abstract TFloatVector getTFloatVector(int rowId);\n \n-  @Override\n-  public TVector getTVector(int rowId) {\n-    return getTFloatVector(rowId);\n-  }\n+    @Override\n+    public TVector getTVector(int rowId) {\n+        return getTFloatVector(rowId);\n+    }\n \n }\n",
            "diff_size": 48
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/434/TFloatMatrix.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/434/TFloatMatrix.java\nindex 012388defc..d57ebbb495 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/434/TFloatMatrix.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/434/TFloatMatrix.java\n@@ -77,4 +77,4 @@ public abstract class TFloatMatrix extends TMatrix {\n     return getTFloatVector(rowId);\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 32.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 44.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 52.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 60.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 70.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 79.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/434/TFloatMatrix.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/434/TFloatMatrix.java\nindex 012388defc..e3ec835e05 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/434/TFloatMatrix.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/434/TFloatMatrix.java\n@@ -28,9 +28,10 @@ public abstract class TFloatMatrix extends TMatrix {\n    * @param row the row\n    * @param col the col\n    */\n-  public TFloatMatrix(int row, int col) {\n+\n+    public TFloatMatrix(int row, int col) {\n     super(row, col);\n-  }\n+    }\n \n   /**\n    * Increases specified element by value.\n@@ -39,21 +40,24 @@ public abstract class TFloatMatrix extends TMatrix {\n    * @param colId the col id\n    * @param value the value\n    */\n-  public abstract void inc(int rowId, int colId, float value);\n+\n+    public abstract void inc(int rowId, int colId, float value);\n \n   /**\n    * Plus by other matrix.\n    *\n    * @param other the other\n    */\n-  public abstract void plusBy(TMatrix other);\n+\n+    public abstract void plusBy(TMatrix other);\n \n   /**\n    * Plus by other vector\n    *\n    * @param other the other\n    */\n-  public abstract void plusBy(TVector other);\n+\n+    public abstract void plusBy(TVector other);\n \n   /**\n    * Get specified value.\n@@ -62,7 +66,8 @@ public abstract class TFloatMatrix extends TMatrix {\n    * @param colId the col id\n    * @return the value\n    */\n-  public abstract float get(int rowId, int colId);\n+\n+    public abstract float get(int rowId, int colId);\n \n   /**\n    * Gets specified vector.\n@@ -70,11 +75,12 @@ public abstract class TFloatMatrix extends TMatrix {\n    * @param rowId the row id\n    * @return the vector\n    */\n-  public abstract TFloatVector getTFloatVector(int rowId);\n \n-  @Override\n-  public TVector getTVector(int rowId) {\n+    public abstract TFloatVector getTFloatVector(int rowId);\n+\n+    @Override\n+    public TVector getTVector(int rowId) {\n     return getTFloatVector(rowId);\n-  }\n+    }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}