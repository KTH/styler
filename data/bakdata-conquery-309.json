{
    "error_id": "309",
    "information": {
        "errors": [
            {
                "line": "18",
                "column": "65",
                "severity": "warning",
                "message": "'{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "\n@Slf4j\npublic class CPSMap implements Iterable<Entry<Class<?>, String>>{\n\tprivate Multimap<Class<?>, String> class2TypeLabels = HashMultimap.create();\n\tprivate Map<String, Class<?>> typeLabel2Class;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/309/CPSMap.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/309/CPSMap.java\nindex 265ee8edf8..1d511ee43c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/309/CPSMap.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/309/CPSMap.java\n@@ -15,7 +15,7 @@ import lombok.Getter;\n import lombok.extern.slf4j.Slf4j;\n \n @Slf4j\n-public class CPSMap implements Iterable<Entry<Class<?>, String>>{\n+public class CPSMap implements Iterable<Entry<Class<?>, String>> {\n \tprivate Multimap<Class<?>, String> class2TypeLabels = HashMultimap.create();\n \tprivate Map<String, Class<?>> typeLabel2Class;\n \n@@ -26,7 +26,7 @@ public class CPSMap implements Iterable<Entry<Class<?>, String>>{\n \tpublic void calculateInverse() {\n \t\tImmutableMultimap<Class<?>, String> immutable = ImmutableMultimap.copyOf(class2TypeLabels);\n \t\tclass2TypeLabels = immutable;\n-\t\t\n+\n \t\tImmutableMultimap<String, Class<?>> rev = immutable.inverse();\n \t\tint failed = 0;\n \t\tfor(Entry<String, Collection<Class<?>>> e:rev.asMap().entrySet()) {\n@@ -40,7 +40,7 @@ public class CPSMap implements Iterable<Entry<Class<?>, String>>{\n \t\t}\n \t\ttypeLabel2Class = rev.entries().stream().collect(Collectors.toMap(Entry::getKey, Entry::getValue));\n \t}\n-\t\n+\n \tpublic void merge(CPSMap other) {\n \t\tclass2TypeLabels.putAll(other.class2TypeLabels);\n \t}\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "19",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "column": "13",
                    "severity": "warning",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/309/CPSMap.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/309/CPSMap.java\nindex 265ee8edf8..862f7a33fe 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/309/CPSMap.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/309/CPSMap.java\n@@ -15,74 +15,73 @@ import lombok.Getter;\n import lombok.extern.slf4j.Slf4j;\n \n @Slf4j\n-public class CPSMap implements Iterable<Entry<Class<?>, String>>{\n-\tprivate Multimap<Class<?>, String> class2TypeLabels = HashMultimap.create();\n-\tprivate Map<String, Class<?>> typeLabel2Class;\n+public class CPSMap implements Iterable<Entry<Class<?>, String>> {\n+    private Multimap<Class<?>, String> class2TypeLabels = HashMultimap.create();\n+    private Map<String, Class<?>> typeLabel2Class;\n \n-\tpublic void add(String id, Class<?> type) {\n-\t\tclass2TypeLabels.put(type, id);\n-\t}\n+    public void add(String id, Class<?> type) {\n+        class2TypeLabels.put(type, id);\n+    }\n \n-\tpublic void calculateInverse() {\n-\t\tImmutableMultimap<Class<?>, String> immutable = ImmutableMultimap.copyOf(class2TypeLabels);\n-\t\tclass2TypeLabels = immutable;\n-\t\t\n-\t\tImmutableMultimap<String, Class<?>> rev = immutable.inverse();\n-\t\tint failed = 0;\n-\t\tfor(Entry<String, Collection<Class<?>>> e:rev.asMap().entrySet()) {\n-\t\t\tif(e.getValue().size()>1) {\n-\t\t\t\tlog.error(\"There are multiple objects with the type id {}: {}\", e.getKey(), e.getValue());\n-\t\t\t\tfailed++;\n-\t\t\t}\n-\t\t}\n-\t\tif(failed > 0) {\n-\t\t\tthrow new IllegalStateException(failed+\" errors (see above)\");\n-\t\t}\n-\t\ttypeLabel2Class = rev.entries().stream().collect(Collectors.toMap(Entry::getKey, Entry::getValue));\n-\t}\n-\t\n-\tpublic void merge(CPSMap other) {\n-\t\tclass2TypeLabels.putAll(other.class2TypeLabels);\n-\t}\n+    public void calculateInverse() {\n+        ImmutableMultimap<Class<?>, String> immutable = ImmutableMultimap.copyOf(class2TypeLabels);\n+        class2TypeLabels = immutable;\n \n-\t@Override\n-\tpublic Iterator<Entry<Class<?>, String>> iterator() {\n-\t\treturn class2TypeLabels.entries().iterator();\n-\t}\n+        ImmutableMultimap<String, Class<?>> rev = immutable.inverse();\n+        int failed = 0;\n+        for (Entry<String, Collection<Class<?>>> e : rev.asMap().entrySet()) {\n+            if (e.getValue().size() > 1) {\n+                log.error(\"There are multiple objects with the type id {}: {}\", e.getKey(), e.getValue());\n+                failed++;\n+            }\n+        }\n+        if (failed > 0) {\n+            throw new IllegalStateException(failed + \" errors (see above)\");\n+        }\n+        typeLabel2Class = rev.entries().stream().collect(Collectors.toMap(Entry::getKey, Entry::getValue));\n+    }\n \n-\tpublic Class<?> getClassFromId(String id) {\n-\t\treturn typeLabel2Class.get(id);\n-\t}\n+    public void merge(CPSMap other) {\n+        class2TypeLabels.putAll(other.class2TypeLabels);\n+    }\n \n-\tpublic Set<Class<?>> getClasses() {\n-\t\treturn class2TypeLabels.keySet();\n-\t}\n+    @Override\n+    public Iterator<Entry<Class<?>, String>> iterator() {\n+        return class2TypeLabels.entries().iterator();\n+    }\n \n-\tpublic String getTypeIdForClass(Class<?> suggestedType) {\n-\t\tCollection<String> ids = class2TypeLabels.get(suggestedType);\n-\t\tif(ids.isEmpty()) {\n-\t\t\t//check if other base\n-\t\t\tCPSType anno = suggestedType.getAnnotation(CPSType.class);\n-\t\t\tif(anno == null) {\n-\t\t\t\tthrow new IllegalStateException(\"There is no id for the class \"+suggestedType+\" for.\");\n-\t\t\t}\n-\t\t\telse {\n-\t\t\t\treturn anno.id();\n-\t\t\t}\n-\t\t}\n-\t\telse {\n-\t\t\treturn ids.iterator().next();\n-\t\t}\n-\t}\n+    public Class<?> getClassFromId(String id) {\n+        return typeLabel2Class.get(id);\n+    }\n \n-\tpublic Collection<String> getTypeIds() {\n-\t\treturn class2TypeLabels.values();\n-\t}\n+    public Set<Class<?>> getClasses() {\n+        return class2TypeLabels.keySet();\n+    }\n \n-\t@Getter\n-\tprivate static final CPSMap EMPTY;\n-\tstatic {\n-\t\tEMPTY = new CPSMap();\n-\t\tEMPTY.calculateInverse();\n-\t}\n+    public String getTypeIdForClass(Class<?> suggestedType) {\n+        Collection<String> ids = class2TypeLabels.get(suggestedType);\n+        if (ids.isEmpty()) {\n+            //check if other base\n+            CPSType anno = suggestedType.getAnnotation(CPSType.class);\n+            if (anno == null) {\n+                throw new IllegalStateException(\"There is no id for the class \" + suggestedType + \" for.\");\n+            } else {\n+                return anno.id();\n+            }\n+        } else {\n+            return ids.iterator().next();\n+        }\n+    }\n+\n+    public Collection<String> getTypeIds() {\n+        return class2TypeLabels.values();\n+    }\n+\n+    @Getter\n+    private static final CPSMap EMPTY;\n+\n+    static {\n+        EMPTY = new CPSMap();\n+        EMPTY.calculateInverse();\n+    }\n }\n",
            "diff_size": 92
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/309/CPSMap.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/309/CPSMap.java\nindex 265ee8edf8..7975b35a3b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/309/CPSMap.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/309/CPSMap.java\n@@ -15,7 +15,7 @@ import lombok.Getter;\n import lombok.extern.slf4j.Slf4j;\n \n @Slf4j\n-public class CPSMap implements Iterable<Entry<Class<?>, String>>{\n+public class CPSMap implements Iterable<Entry<Class<?>, String>> {\n \tprivate Multimap<Class<?>, String> class2TypeLabels = HashMultimap.create();\n \tprivate Map<String, Class<?>> typeLabel2Class;\n \n@@ -85,4 +85,4 @@ public class CPSMap implements Iterable<Entry<Class<?>, String>>{\n \t\tEMPTY = new CPSMap();\n \t\tEMPTY.calculateInverse();\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "19",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/309/CPSMap.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/309/CPSMap.java\nindex 265ee8edf8..30c0f50909 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/309/CPSMap.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/309/CPSMap.java\n@@ -6,83 +6,87 @@ import java.util.Map;\n import java.util.Map.Entry;\n import java.util.Set;\n import java.util.stream.Collectors;\n-\n import com.google.common.collect.HashMultimap;\n import com.google.common.collect.ImmutableMultimap;\n import com.google.common.collect.Multimap;\n-\n import lombok.Getter;\n import lombok.extern.slf4j.Slf4j;\n \n @Slf4j\n-public class CPSMap implements Iterable<Entry<Class<?>, String>>{\n-\tprivate Multimap<Class<?>, String> class2TypeLabels = HashMultimap.create();\n-\tprivate Map<String, Class<?>> typeLabel2Class;\n+public class CPSMap implements Iterable<Entry<Class<?>, String>> {\n+\n+    private Multimap<Class<?>, String> class2TypeLabels = HashMultimap.create();\n+    private Map<String, Class<?>> typeLabel2Class;\n+\n+    public void add(String id, Class<?> type) {\n+        class2TypeLabels.put(type, id);\n+    }\n+\n+    public void calculateInverse() {\n+        ImmutableMultimap<Class<?>, String> immutable = ImmutableMultimap.copyOf(class2TypeLabels);\n+        class2TypeLabels = immutable;\n+        ImmutableMultimap<String, Class<?>> rev = immutable.inverse();\n+        int failed = 0;\n+        for(Entry<String, Collection<Class<?>>> e : rev.asMap().entrySet()) {\n+            if(e.getValue().size() > 1) {\n+                log.error(\"There are multiple objects with the type id {}: {}\",\n+                          e.getKey(),\n+                          e.getValue()\n+                );\n+                failed++;\n+            }\n+        }\n+\n+        if(failed > 0) {\n+            throw new IllegalStateException(failed+\" errors (see above)\");\n+        }\n+        typeLabel2Class = rev.entries().stream()\n+                                       .collect(Collectors.toMap(Entry::getKey, Entry::getValue));\n+    }\n \n-\tpublic void add(String id, Class<?> type) {\n-\t\tclass2TypeLabels.put(type, id);\n-\t}\n+    public void merge(CPSMap other) {\n+        class2TypeLabels.putAll(other.class2TypeLabels);\n+    }\n \n-\tpublic void calculateInverse() {\n-\t\tImmutableMultimap<Class<?>, String> immutable = ImmutableMultimap.copyOf(class2TypeLabels);\n-\t\tclass2TypeLabels = immutable;\n-\t\t\n-\t\tImmutableMultimap<String, Class<?>> rev = immutable.inverse();\n-\t\tint failed = 0;\n-\t\tfor(Entry<String, Collection<Class<?>>> e:rev.asMap().entrySet()) {\n-\t\t\tif(e.getValue().size()>1) {\n-\t\t\t\tlog.error(\"There are multiple objects with the type id {}: {}\", e.getKey(), e.getValue());\n-\t\t\t\tfailed++;\n-\t\t\t}\n-\t\t}\n-\t\tif(failed > 0) {\n-\t\t\tthrow new IllegalStateException(failed+\" errors (see above)\");\n-\t\t}\n-\t\ttypeLabel2Class = rev.entries().stream().collect(Collectors.toMap(Entry::getKey, Entry::getValue));\n-\t}\n-\t\n-\tpublic void merge(CPSMap other) {\n-\t\tclass2TypeLabels.putAll(other.class2TypeLabels);\n-\t}\n+    @Override\n+    public Iterator<Entry<Class<?>, String>> iterator() {\n+        return class2TypeLabels.entries().iterator();\n+    }\n \n-\t@Override\n-\tpublic Iterator<Entry<Class<?>, String>> iterator() {\n-\t\treturn class2TypeLabels.entries().iterator();\n-\t}\n+    public Class<?> getClassFromId(String id) {\n+        return typeLabel2Class.get(id);\n+    }\n \n-\tpublic Class<?> getClassFromId(String id) {\n-\t\treturn typeLabel2Class.get(id);\n-\t}\n+    public Set<Class<?>> getClasses() {\n+        return class2TypeLabels.keySet();\n+    }\n \n-\tpublic Set<Class<?>> getClasses() {\n-\t\treturn class2TypeLabels.keySet();\n-\t}\n+    public String getTypeIdForClass(Class<?> suggestedType) {\n+        Collection<String> ids = class2TypeLabels.get(suggestedType);\n+        if(ids.isEmpty()) {\n+            //check if other base\n+            CPSType anno = suggestedType.getAnnotation(CPSType.class);\n+            if(anno == null) {\n+                throw new IllegalStateException(\"There is no id for the class \"+suggestedType +\" for.\");\n+            }\n+            else {\n+                return anno.id();\n+            }\n+        }\n+        else {\n+            return ids.iterator().next();\n+        }\n+    }\n \n-\tpublic String getTypeIdForClass(Class<?> suggestedType) {\n-\t\tCollection<String> ids = class2TypeLabels.get(suggestedType);\n-\t\tif(ids.isEmpty()) {\n-\t\t\t//check if other base\n-\t\t\tCPSType anno = suggestedType.getAnnotation(CPSType.class);\n-\t\t\tif(anno == null) {\n-\t\t\t\tthrow new IllegalStateException(\"There is no id for the class \"+suggestedType+\" for.\");\n-\t\t\t}\n-\t\t\telse {\n-\t\t\t\treturn anno.id();\n-\t\t\t}\n-\t\t}\n-\t\telse {\n-\t\t\treturn ids.iterator().next();\n-\t\t}\n-\t}\n+    public Collection<String> getTypeIds() {\n+        return class2TypeLabels.values();\n+    }\n \n-\tpublic Collection<String> getTypeIds() {\n-\t\treturn class2TypeLabels.values();\n-\t}\n+    @Getter\n+    private static final CPSMap EMPTY;\n \n-\t@Getter\n-\tprivate static final CPSMap EMPTY;\n-\tstatic {\n-\t\tEMPTY = new CPSMap();\n-\t\tEMPTY.calculateInverse();\n-\t}\n-}\n+    static {\n+        EMPTY = new CPSMap();\n+        EMPTY.calculateInverse();\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 105
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/309/CPSMap.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/309/CPSMap.java\nindex 265ee8edf8..1d511ee43c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/309/CPSMap.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/309/CPSMap.java\n@@ -15,7 +15,7 @@ import lombok.Getter;\n import lombok.extern.slf4j.Slf4j;\n \n @Slf4j\n-public class CPSMap implements Iterable<Entry<Class<?>, String>>{\n+public class CPSMap implements Iterable<Entry<Class<?>, String>> {\n \tprivate Multimap<Class<?>, String> class2TypeLabels = HashMultimap.create();\n \tprivate Map<String, Class<?>> typeLabel2Class;\n \n@@ -26,7 +26,7 @@ public class CPSMap implements Iterable<Entry<Class<?>, String>>{\n \tpublic void calculateInverse() {\n \t\tImmutableMultimap<Class<?>, String> immutable = ImmutableMultimap.copyOf(class2TypeLabels);\n \t\tclass2TypeLabels = immutable;\n-\t\t\n+\n \t\tImmutableMultimap<String, Class<?>> rev = immutable.inverse();\n \t\tint failed = 0;\n \t\tfor(Entry<String, Collection<Class<?>>> e:rev.asMap().entrySet()) {\n@@ -40,7 +40,7 @@ public class CPSMap implements Iterable<Entry<Class<?>, String>>{\n \t\t}\n \t\ttypeLabel2Class = rev.entries().stream().collect(Collectors.toMap(Entry::getKey, Entry::getValue));\n \t}\n-\t\n+\n \tpublic void merge(CPSMap other) {\n \t\tclass2TypeLabels.putAll(other.class2TypeLabels);\n \t}\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/309/CPSMap.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/309/CPSMap.java\nindex 265ee8edf8..1d511ee43c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/309/CPSMap.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/309/CPSMap.java\n@@ -15,7 +15,7 @@ import lombok.Getter;\n import lombok.extern.slf4j.Slf4j;\n \n @Slf4j\n-public class CPSMap implements Iterable<Entry<Class<?>, String>>{\n+public class CPSMap implements Iterable<Entry<Class<?>, String>> {\n \tprivate Multimap<Class<?>, String> class2TypeLabels = HashMultimap.create();\n \tprivate Map<String, Class<?>> typeLabel2Class;\n \n@@ -26,7 +26,7 @@ public class CPSMap implements Iterable<Entry<Class<?>, String>>{\n \tpublic void calculateInverse() {\n \t\tImmutableMultimap<Class<?>, String> immutable = ImmutableMultimap.copyOf(class2TypeLabels);\n \t\tclass2TypeLabels = immutable;\n-\t\t\n+\n \t\tImmutableMultimap<String, Class<?>> rev = immutable.inverse();\n \t\tint failed = 0;\n \t\tfor(Entry<String, Collection<Class<?>>> e:rev.asMap().entrySet()) {\n@@ -40,7 +40,7 @@ public class CPSMap implements Iterable<Entry<Class<?>, String>>{\n \t\t}\n \t\ttypeLabel2Class = rev.entries().stream().collect(Collectors.toMap(Entry::getKey, Entry::getValue));\n \t}\n-\t\n+\n \tpublic void merge(CPSMap other) {\n \t\tclass2TypeLabels.putAll(other.class2TypeLabels);\n \t}\n",
            "diff_size": 3
        }
    ]
}