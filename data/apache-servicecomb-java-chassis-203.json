{
    "error_id": "203",
    "information": {
        "errors": [
            {
                "line": "187",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 142).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  /**\n   * Get property names from {@link EnumerablePropertySource}, and get property value from {@link ConfigurableEnvironment#getProperty(String)}\n   */\n  private void getProperties(ConfigurableEnvironment environment, PropertySource<?> propertySource,\n      Map<String, Object> configFromSpringBoot) {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "187",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "189",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/203/ConfigurationSpringInitializer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/203/ConfigurationSpringInitializer.java\nindex 00a62c59d3..28b82f441b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/203/ConfigurationSpringInitializer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/203/ConfigurationSpringInitializer.java\n@@ -46,19 +46,19 @@ import com.netflix.config.ConfigurationManager;\n import com.netflix.config.DynamicPropertyFactory;\n \n /**\n- *  Adapt spring PropertySource and Archaius Configuration\n- *  spring     vs      archaius\n- *        (add)     |      dynamic(configcenter)\n- *  system property           |      system property\n- *  environment               |      environment\n- *  *properties/*.yml        |       (add)\n- *       (add)                |      microservice.yaml\n- *\n- *  add dynamic configuration, microserive.yaml to spring, add *properties/*.yml to archaius\n- *\n- *  NOTICE: we are not duplicate spring system property and environment property source, this will cause some problem\n- *  related to precedence of a KEY-VAlUE. That is cse.test in dynamic config may not override servicecomb.test in yml.\n- *  Users need to use the same key as what is in config file to override.\n+ * Adapt spring PropertySource and Archaius Configuration\n+ * spring     vs      archaius\n+ * (add)     |      dynamic(configcenter)\n+ * system property           |      system property\n+ * environment               |      environment\n+ * *properties/*.yml        |       (add)\n+ * (add)                |      microservice.yaml\n+ * <p>\n+ * add dynamic configuration, microserive.yaml to spring, add *properties/*.yml to archaius\n+ * <p>\n+ * NOTICE: we are not duplicate spring system property and environment property source, this will cause some problem\n+ * related to precedence of a KEY-VAlUE. That is cse.test in dynamic config may not override servicecomb.test in yml.\n+ * Users need to use the same key as what is in config file to override.\n  */\n public class ConfigurationSpringInitializer extends PropertyPlaceholderConfigurer implements EnvironmentAware {\n   private static final Logger LOGGER = LoggerFactory.getLogger(ConfigurationSpringInitializer.class);\n@@ -72,6 +72,7 @@ public class ConfigurationSpringInitializer extends PropertyPlaceholderConfigure\n \n   /**\n    * Get configurations from Spring, merge them into the configurations of ServiceComb.\n+   *\n    * @param environment From which to get the extra config.\n    */\n   @Override\n@@ -149,6 +150,7 @@ public class ConfigurationSpringInitializer extends PropertyPlaceholderConfigure\n \n   /**\n    * Try to get a name for identifying the environment.\n+   *\n    * @param environment the target that the name is generated for.\n    * @return The generated name for the environment.\n    */\n@@ -187,7 +189,7 @@ public class ConfigurationSpringInitializer extends PropertyPlaceholderConfigure\n    * Get property names from {@link EnumerablePropertySource}, and get property value from {@link ConfigurableEnvironment#getProperty(String)}\n    */\n   private void getProperties(ConfigurableEnvironment environment, PropertySource<?> propertySource,\n-      Map<String, Object> configFromSpringBoot) {\n+                             Map<String, Object> configFromSpringBoot) {\n     if (propertySource instanceof CompositePropertySource) {\n       // recursively get EnumerablePropertySource\n       CompositePropertySource compositePropertySource = (CompositePropertySource) propertySource;\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "187",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/203/ConfigurationSpringInitializer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/203/ConfigurationSpringInitializer.java\nindex 00a62c59d3..afaae95491 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/203/ConfigurationSpringInitializer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/203/ConfigurationSpringInitializer.java\n@@ -204,4 +204,4 @@ public class ConfigurationSpringInitializer extends PropertyPlaceholderConfigure\n \n     LOGGER.debug(\"a none EnumerablePropertySource is ignored, propertySourceName = [{}]\", propertySource.getName());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "187",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/203/ConfigurationSpringInitializer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/203/ConfigurationSpringInitializer.java\nindex 00a62c59d3..96249cc381 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/203/ConfigurationSpringInitializer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/203/ConfigurationSpringInitializer.java\n@@ -185,8 +185,7 @@ public class ConfigurationSpringInitializer extends PropertyPlaceholderConfigure\n \n   /**\n    * Get property names from {@link EnumerablePropertySource}, and get property value from {@link ConfigurableEnvironment#getProperty(String)}\n-   */\n-  private void getProperties(ConfigurableEnvironment environment, PropertySource<?> propertySource,\n+   */private void getProperties(ConfigurableEnvironment environment, PropertySource<?> propertySource,\n       Map<String, Object> configFromSpringBoot) {\n     if (propertySource instanceof CompositePropertySource) {\n       // recursively get EnumerablePropertySource\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "187",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}