{
    "error_id": "8",
    "information": {
        "errors": [
            {
                "line": "58",
                "column": "51",
                "severity": "warning",
                "message": "',' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
            }
        ]
    },
    "source_code": "    Map<String, String> form = material.getForm();\n    if (material.getForm() != null) {\n      multipartEntityBuilder.addPart(\"description\",\n        new StringBody(WxGsonBuilder.create().toJson(form), ContentType.create(\"text/plain\", Consts.UTF_8)));\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "58",
                    "column": "51",
                    "severity": "warning",
                    "message": "',' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "58",
                    "column": "51",
                    "severity": "warning",
                    "message": "',' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/8/ApacheMaterialUploadRequestExecutor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/intellij/8/ApacheMaterialUploadRequestExecutor.java\nindex 9ddd61f9a9..8a671210cf 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/8/ApacheMaterialUploadRequestExecutor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/intellij/8/ApacheMaterialUploadRequestExecutor.java\n@@ -51,12 +51,12 @@ public class ApacheMaterialUploadRequestExecutor extends MaterialUploadRequestEx\n \n     MultipartEntityBuilder multipartEntityBuilder = MultipartEntityBuilder.create();\n     multipartEntityBuilder\n-      .addBinaryBody(\"media\", file)\n-      .setMode(HttpMultipartMode.RFC6532);\n+        .addBinaryBody(\"media\", file)\n+        .setMode(HttpMultipartMode.RFC6532);\n     Map<String, String> form = material.getForm();\n     if (material.getForm() != null) {\n       multipartEntityBuilder.addPart(\"description\",\n-        new StringBody(WxGsonBuilder.create().toJson(form), ContentType.create(\"text/plain\", Consts.UTF_8)));\n+          new StringBody(WxGsonBuilder.create().toJson(form), ContentType.create(\"text/plain\", Consts.UTF_8)));\n     }\n \n     httpPost.setEntity(multipartEntityBuilder.build());\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 153).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/8/ApacheMaterialUploadRequestExecutor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/naturalize/8/ApacheMaterialUploadRequestExecutor.java\nindex 9ddd61f9a9..2a689be5f9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/8/ApacheMaterialUploadRequestExecutor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/naturalize/8/ApacheMaterialUploadRequestExecutor.java\n@@ -50,13 +50,12 @@ public class ApacheMaterialUploadRequestExecutor extends MaterialUploadRequestEx\n     }\n \n     MultipartEntityBuilder multipartEntityBuilder = MultipartEntityBuilder.create();\n-    multipartEntityBuilder\n-      .addBinaryBody(\"media\", file)\n+    multipartEntityBuilder.addBinaryBody(\"media\", file)\n       .setMode(HttpMultipartMode.RFC6532);\n-    Map<String, String> form = material.getForm();\n+\n+Map<String, String> form = material.getForm();\n     if (material.getForm() != null) {\n-      multipartEntityBuilder.addPart(\"description\",\n-        new StringBody(WxGsonBuilder.create().toJson(form), ContentType.create(\"text/plain\", Consts.UTF_8)));\n+      multipartEntityBuilder.addPart(\"description\", new StringBody(WxGsonBuilder.create().toJson(form), ContentType.create(\"text/plain\", Consts.UTF_8)));\n     }\n \n     httpPost.setEntity(multipartEntityBuilder.build());\n@@ -74,4 +73,4 @@ public class ApacheMaterialUploadRequestExecutor extends MaterialUploadRequestEx\n       httpPost.releaseConnection();\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 155).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/8/ApacheMaterialUploadRequestExecutor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/codebuff/8/ApacheMaterialUploadRequestExecutor.java\nindex 9ddd61f9a9..314c6a61ea 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/8/ApacheMaterialUploadRequestExecutor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/codebuff/8/ApacheMaterialUploadRequestExecutor.java\n@@ -18,7 +18,6 @@ import org.apache.http.entity.mime.HttpMultipartMode;\n import org.apache.http.entity.mime.MultipartEntityBuilder;\n import org.apache.http.entity.mime.content.StringBody;\n import org.apache.http.impl.client.CloseableHttpClient;\n-\n import java.io.File;\n import java.io.FileNotFoundException;\n import java.io.IOException;\n@@ -27,51 +26,49 @@ import java.util.Map;\n /**\n  * Created by ecoolper on 2017/5/5.\n  */\n+\n+\n public class ApacheMaterialUploadRequestExecutor extends MaterialUploadRequestExecutor<CloseableHttpClient, HttpHost> {\n-  public ApacheMaterialUploadRequestExecutor(RequestHttp requestHttp) {\n+\n+    public ApacheMaterialUploadRequestExecutor(RequestHttp requestHttp) {\n     super(requestHttp);\n-  }\n+    }\n \n-  @Override\n-  public WxMpMaterialUploadResult execute(String uri, WxMpMaterial material) throws WxErrorException, IOException {\n+    @Override\n+    public WxMpMaterialUploadResult execute(String uri, WxMpMaterial material) throws WxErrorException, IOException {\n     HttpPost httpPost = new HttpPost(uri);\n     if (requestHttp.getRequestHttpProxy() != null) {\n-      RequestConfig response = RequestConfig.custom().setProxy(requestHttp.getRequestHttpProxy()).build();\n-      httpPost.setConfig(response);\n+        RequestConfig response = RequestConfig.custom().setProxy(requestHttp.getRequestHttpProxy()).build();\n+        httpPost.setConfig(response);\n     }\n \n     if (material == null) {\n-      throw new WxErrorException(WxError.builder().errorCode(-1).errorMsg(\"\u975e\u6cd5\u8bf7\u6c42\uff0cmaterial\u53c2\u6570\u4e3a\u7a7a\").build());\n+        throw new WxErrorException(WxError.builder().errorCode(-1).errorMsg(\"\u975e\u6cd5\u8bf7\u6c42\uff0cmaterial\u53c2\u6570\u4e3a\u7a7a\").build());\n     }\n \n     File file = material.getFile();\n     if (file == null || !file.exists()) {\n-      throw new FileNotFoundException();\n+        throw new FileNotFoundException();\n     }\n \n     MultipartEntityBuilder multipartEntityBuilder = MultipartEntityBuilder.create();\n-    multipartEntityBuilder\n-      .addBinaryBody(\"media\", file)\n-      .setMode(HttpMultipartMode.RFC6532);\n+    multipartEntityBuilder.addBinaryBody(\"media\", file).setMode(HttpMultipartMode.RFC6532);\n     Map<String, String> form = material.getForm();\n     if (material.getForm() != null) {\n-      multipartEntityBuilder.addPart(\"description\",\n-        new StringBody(WxGsonBuilder.create().toJson(form), ContentType.create(\"text/plain\", Consts.UTF_8)));\n+        multipartEntityBuilder.addPart(\"description\", new StringBody(WxGsonBuilder.create().toJson(form), ContentType.create(\"text/plain\", Consts.UTF_8)));\n     }\n-\n     httpPost.setEntity(multipartEntityBuilder.build());\n     httpPost.setHeader(\"Content-Type\", ContentType.MULTIPART_FORM_DATA.toString());\n-\n     try (CloseableHttpResponse response = requestHttp.getRequestHttpClient().execute(httpPost)) {\n-      String responseContent = Utf8ResponseHandler.INSTANCE.handleResponse(response);\n-      WxError error = WxError.fromJson(responseContent);\n-      if (error.getErrorCode() != 0) {\n+        String responseContent = Utf8ResponseHandler.INSTANCE.handleResponse(response);\n+        WxError error = WxError.fromJson(responseContent);\n+        if (error.getErrorCode() != 0) {\n         throw new WxErrorException(error);\n-      } else {\n-        return WxMpMaterialUploadResult.fromJson(responseContent);\n-      }\n+        } else {\n+          return WxMpMaterialUploadResult.fromJson(responseContent);\n+        }\n     } finally {\n       httpPost.releaseConnection();\n     }\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 27
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "58",
                    "column": "51",
                    "severity": "warning",
                    "message": "',' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/8/ApacheMaterialUploadRequestExecutor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/styler_random/8/ApacheMaterialUploadRequestExecutor.java\nindex 9ddd61f9a9..bd5e013081 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/8/ApacheMaterialUploadRequestExecutor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/styler_random/8/ApacheMaterialUploadRequestExecutor.java\n@@ -56,7 +56,7 @@ public class ApacheMaterialUploadRequestExecutor extends MaterialUploadRequestEx\n     Map<String, String> form = material.getForm();\n     if (material.getForm() != null) {\n       multipartEntityBuilder.addPart(\"description\",\n-        new StringBody(WxGsonBuilder.create().toJson(form), ContentType.create(\"text/plain\", Consts.UTF_8)));\n+    new StringBody(WxGsonBuilder.create().toJson(form), ContentType.create(\"text/plain\", Consts.UTF_8)));\n     }\n \n     httpPost.setEntity(multipartEntityBuilder.build());\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "58",
                    "column": "51",
                    "severity": "warning",
                    "message": "',' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}