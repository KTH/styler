{
    "error_id": "138",
    "information": {
        "errors": [
            {
                "line": "26",
                "column": "61",
                "severity": "error",
                "message": "'}' at column 61 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "   */\n  @Override\n  public void initialize(UniqueValue constraintAnnotation) {}\n\n  /*\n   * (non-Javadoc)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "26",
                    "column": "61",
                    "severity": "error",
                    "message": "'}' at column 61 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/138/UniqueValueValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler/138/UniqueValueValidator.java\nindex 340d1564cd..7004b1c81c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/138/UniqueValueValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler/138/UniqueValueValidator.java\n@@ -36,9 +36,9 @@ public class UniqueValueValidator\n     if (validResponses == null) {\n       return true;\n     }\n-    \n+\n     HashSet<String> classes = new HashSet<>();\n-    \n+\n     for (ValidResponse validResponse : validResponses) {\n       if (validResponse.getValue() != null) {\n         if (classes.contains(validResponse.getValue())) {\n@@ -48,7 +48,7 @@ public class UniqueValueValidator\n         classes.add(validResponse.getValue());\n       }\n     }\n-    \n+\n     return true;\n   }\n }\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/138/UniqueValueValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/138/UniqueValueValidator.java\nindex 340d1564cd..cf9a5c1f92 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/138/UniqueValueValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/138/UniqueValueValidator.java\n@@ -11,7 +11,7 @@ import lombok.extern.slf4j.Slf4j;\n \n /**\n  * Ensure that value.valueClass is unique within the variable.\n- * \n+ *\n  * @author Ren\u00e9 Reitmann\n  */\n @Slf4j\n@@ -19,15 +19,16 @@ public class UniqueValueValidator\n     implements ConstraintValidator<UniqueValue, List<ValidResponse>> {\n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(UniqueValue constraintAnnotation) {}\n+  public void initialize(UniqueValue constraintAnnotation) {\n+  }\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n@@ -36,9 +37,9 @@ public class UniqueValueValidator\n     if (validResponses == null) {\n       return true;\n     }\n-    \n+\n     HashSet<String> classes = new HashSet<>();\n-    \n+\n     for (ValidResponse validResponse : validResponses) {\n       if (validResponse.getValue() != null) {\n         if (classes.contains(validResponse.getValue())) {\n@@ -48,7 +49,7 @@ public class UniqueValueValidator\n         classes.add(validResponse.getValue());\n       }\n     }\n-    \n+\n     return true;\n   }\n }\n",
            "diff_size": 8
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "27",
                    "column": "61",
                    "severity": "error",
                    "message": "'}' at column 61 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/138/UniqueValueValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/138/UniqueValueValidator.java\nindex 340d1564cd..e3712e1582 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/138/UniqueValueValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/138/UniqueValueValidator.java\n@@ -17,6 +17,7 @@ import lombok.extern.slf4j.Slf4j;\n @Slf4j\n public class UniqueValueValidator\n     implements ConstraintValidator<UniqueValue, List<ValidResponse>> {\n+\n   /*\n    * (non-Javadoc)\n    * \n@@ -51,4 +52,4 @@ public class UniqueValueValidator\n     \n     return true;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "25",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 59, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 50, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 50, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 59, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 59, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/138/UniqueValueValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/138/UniqueValueValidator.java\nindex 340d1564cd..35d9c3b2a7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/138/UniqueValueValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/138/UniqueValueValidator.java\n@@ -2,10 +2,8 @@ package eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.validation;\n \n import java.util.HashSet;\n import java.util.List;\n-\n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-\n import eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.ValidResponse;\n import lombok.extern.slf4j.Slf4j;\n \n@@ -14,16 +12,20 @@ import lombok.extern.slf4j.Slf4j;\n  * \n  * @author Ren\u00e9 Reitmann\n  */\n+\n+\n @Slf4j\n-public class UniqueValueValidator\n-    implements ConstraintValidator<UniqueValue, List<ValidResponse>> {\n+public class UniqueValueValidator implements ConstraintValidator<UniqueValue, List<ValidResponse>> {\n   /*\n    * (non-Javadoc)\n    * \n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n-  @Override\n-  public void initialize(UniqueValue constraintAnnotation) {}\n+\n+    @Override\n+    public void initialize(UniqueValue constraintAnnotation) {\n+\n+    }\n \n   /*\n    * (non-Javadoc)\n@@ -31,24 +33,27 @@ public class UniqueValueValidator\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n-  @Override\n-  public boolean isValid(List<ValidResponse> validResponses, ConstraintValidatorContext context) {\n+\n+\n+    @Override\n+    public boolean isValid(List<ValidResponse> validResponses,\n+        ConstraintValidatorContext context) {\n     if (validResponses == null) {\n-      return true;\n+        return true;\n     }\n-    \n     HashSet<String> classes = new HashSet<>();\n-    \n+\n     for (ValidResponse validResponse : validResponses) {\n-      if (validResponse.getValue() != null) {\n-        if (classes.contains(validResponse.getValue())) {\n-          log.debug(\"Duplicate validResponse.value found: \" + validResponse.getValue());\n-          return false;\n+        if (validResponse.getValue() != null) {\n+                                                           if (classes.contains(validResponse.getValue())) {\n+                                                  log.debug(\"Duplicate validResponse.value found: \"\n+                                                                + validResponse.getValue());\n+                                                  return false;\n+                                                           }\n+                                                           classes.add(validResponse.getValue());\n         }\n-        classes.add(validResponse.getValue());\n-      }\n     }\n-    \n+\n     return true;\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 31
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "26",
                    "column": "61",
                    "severity": "error",
                    "message": "'}' at column 61 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/138/UniqueValueValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_random/138/UniqueValueValidator.java\nindex 340d1564cd..7004b1c81c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/138/UniqueValueValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_random/138/UniqueValueValidator.java\n@@ -36,9 +36,9 @@ public class UniqueValueValidator\n     if (validResponses == null) {\n       return true;\n     }\n-    \n+\n     HashSet<String> classes = new HashSet<>();\n-    \n+\n     for (ValidResponse validResponse : validResponses) {\n       if (validResponse.getValue() != null) {\n         if (classes.contains(validResponse.getValue())) {\n@@ -48,7 +48,7 @@ public class UniqueValueValidator\n         classes.add(validResponse.getValue());\n       }\n     }\n-    \n+\n     return true;\n   }\n }\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "26",
                    "column": "62",
                    "severity": "error",
                    "message": "'}' at column 62 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/138/UniqueValueValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_three_grams/138/UniqueValueValidator.java\nindex 340d1564cd..44de7c5ed5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/138/UniqueValueValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_three_grams/138/UniqueValueValidator.java\n@@ -23,9 +23,7 @@ public class UniqueValueValidator\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(UniqueValue constraintAnnotation) {}\n-\n-  /*\n+  public void initialize(UniqueValue constraintAnnotation) { } /*\n    * (non-Javadoc)\n    * \n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n@@ -36,9 +34,9 @@ public class UniqueValueValidator\n     if (validResponses == null) {\n       return true;\n     }\n-    \n+\n     HashSet<String> classes = new HashSet<>();\n-    \n+\n     for (ValidResponse validResponse : validResponses) {\n       if (validResponse.getValue() != null) {\n         if (classes.contains(validResponse.getValue())) {\n@@ -48,7 +46,7 @@ public class UniqueValueValidator\n         classes.add(validResponse.getValue());\n       }\n     }\n-    \n+\n     return true;\n   }\n }\n",
            "diff_size": 6
        }
    ]
}