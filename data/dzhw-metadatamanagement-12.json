{
    "error_id": "12",
    "information": {
        "errors": [
            {
                "line": "25",
                "column": "66",
                "severity": "error",
                "message": "'}' at column 66 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "   */\n  @Override\n  public void initialize(InstrumentExists constraintAnnotation) {}\n\n  /*\n   * (non-Javadoc)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "25",
                    "column": "66",
                    "severity": "error",
                    "message": "'}' at column 66 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/12/InstrumentExistsValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler/12/InstrumentExistsValidator.java\nindex 3d1cdd619c..ea02b88356 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/12/InstrumentExistsValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler/12/InstrumentExistsValidator.java\n@@ -15,7 +15,7 @@ import lombok.RequiredArgsConstructor;\n public class InstrumentExistsValidator implements ConstraintValidator<InstrumentExists, String> {\n \n   private final InstrumentRepository instrumentRepository;\n-  \n+\n   /*\n    * (non-Javadoc)\n    * \n@@ -31,7 +31,7 @@ public class InstrumentExistsValidator implements ConstraintValidator<Instrument\n    * javax.validation.ConstraintValidatorContext)\n    */\n   @Override\n-  public boolean isValid(String instrumentId, ConstraintValidatorContext context) {   \n+  public boolean isValid(String instrumentId, ConstraintValidatorContext context) {\n     return instrumentRepository.existsById(instrumentId);\n   }\n }\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/12/InstrumentExistsValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/12/InstrumentExistsValidator.java\nindex 3d1cdd619c..c8997e4ebb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/12/InstrumentExistsValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/12/InstrumentExistsValidator.java\n@@ -8,30 +8,31 @@ import lombok.RequiredArgsConstructor;\n \n /**\n  * Validator which ensures that there is an instrument with the given id.\n- * \n+ *\n  * @author Ren\u00e9 Reitmann\n  */\n @RequiredArgsConstructor\n public class InstrumentExistsValidator implements ConstraintValidator<InstrumentExists, String> {\n \n   private final InstrumentRepository instrumentRepository;\n-  \n+\n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(InstrumentExists constraintAnnotation) {}\n+  public void initialize(InstrumentExists constraintAnnotation) {\n+  }\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n   @Override\n-  public boolean isValid(String instrumentId, ConstraintValidatorContext context) {   \n+  public boolean isValid(String instrumentId, ConstraintValidatorContext context) {\n     return instrumentRepository.existsById(instrumentId);\n   }\n }\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/12/InstrumentExistsValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/12/InstrumentExistsValidator.java\nindex 3d1cdd619c..76cd22172e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/12/InstrumentExistsValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/12/InstrumentExistsValidator.java\n@@ -2,7 +2,6 @@ package eu.dzhw.fdz.metadatamanagement.relatedpublicationmanagement.domain.valid\n \n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-\n import eu.dzhw.fdz.metadatamanagement.instrumentmanagement.repository.InstrumentRepository;\n import lombok.RequiredArgsConstructor;\n \n@@ -11,18 +10,23 @@ import lombok.RequiredArgsConstructor;\n  * \n  * @author Ren\u00e9 Reitmann\n  */\n+\n+\n @RequiredArgsConstructor\n public class InstrumentExistsValidator implements ConstraintValidator<InstrumentExists, String> {\n \n-  private final InstrumentRepository instrumentRepository;\n+    private final InstrumentRepository instrumentRepository;\n   \n   /*\n    * (non-Javadoc)\n    * \n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n-  @Override\n-  public void initialize(InstrumentExists constraintAnnotation) {}\n+\n+    @Override\n+    public void initialize(InstrumentExists constraintAnnotation) {\n+\n+    }\n \n   /*\n    * (non-Javadoc)\n@@ -30,8 +34,11 @@ public class InstrumentExistsValidator implements ConstraintValidator<Instrument\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n-  @Override\n-  public boolean isValid(String instrumentId, ConstraintValidatorContext context) {   \n+\n+\n+    @Override\n+    public boolean isValid(String instrumentId,\n+        ConstraintValidatorContext context) {\n     return instrumentRepository.existsById(instrumentId);\n-  }\n+    }\n }\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "25",
                    "column": "66",
                    "severity": "error",
                    "message": "'}' at column 66 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/12/InstrumentExistsValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_random/12/InstrumentExistsValidator.java\nindex 3d1cdd619c..ea02b88356 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/12/InstrumentExistsValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_random/12/InstrumentExistsValidator.java\n@@ -15,7 +15,7 @@ import lombok.RequiredArgsConstructor;\n public class InstrumentExistsValidator implements ConstraintValidator<InstrumentExists, String> {\n \n   private final InstrumentRepository instrumentRepository;\n-  \n+\n   /*\n    * (non-Javadoc)\n    * \n@@ -31,7 +31,7 @@ public class InstrumentExistsValidator implements ConstraintValidator<Instrument\n    * javax.validation.ConstraintValidatorContext)\n    */\n   @Override\n-  public boolean isValid(String instrumentId, ConstraintValidatorContext context) {   \n+  public boolean isValid(String instrumentId, ConstraintValidatorContext context) {\n     return instrumentRepository.existsById(instrumentId);\n   }\n }\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "25",
                    "column": "67",
                    "severity": "error",
                    "message": "'}' at column 67 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/12/InstrumentExistsValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_three_grams/12/InstrumentExistsValidator.java\nindex 3d1cdd619c..6201792aa1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/12/InstrumentExistsValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_three_grams/12/InstrumentExistsValidator.java\n@@ -15,23 +15,21 @@ import lombok.RequiredArgsConstructor;\n public class InstrumentExistsValidator implements ConstraintValidator<InstrumentExists, String> {\n \n   private final InstrumentRepository instrumentRepository;\n-  \n+\n   /*\n    * (non-Javadoc)\n    * \n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(InstrumentExists constraintAnnotation) {}\n-\n-  /*\n+  public void initialize(InstrumentExists constraintAnnotation) { }/*\n    * (non-Javadoc)\n    * \n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n   @Override\n-  public boolean isValid(String instrumentId, ConstraintValidatorContext context) {   \n+  public boolean isValid(String instrumentId, ConstraintValidatorContext context) {\n     return instrumentRepository.existsById(instrumentId);\n   }\n }\n\\ No newline at end of file\n",
            "diff_size": 5
        }
    ]
}