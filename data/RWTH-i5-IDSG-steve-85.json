{
    "error_id": "85",
    "information": {
        "errors": [
            {
                "line": "21",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 127).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n    public static void closed(String chargeBoxId, WebSocketSession session, CloseStatus closeStatus) {\n        log.warn(\"[chargeBoxId={}, sessionId={}] Connection is closed, status: {}\", chargeBoxId, session.getId(), closeStatus);\n    }\n\n    public static void sending(String chargeBoxId, WebSocketSession session, String msg) {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 221).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "20",
                    "column": "102",
                    "severity": "error",
                    "message": "'{' at column 102 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "20",
                    "column": "178",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/85/WebSocketLogger.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/styler/85/WebSocketLogger.java\nindex dda1d11979..729a14dcdc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/85/WebSocketLogger.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/styler/85/WebSocketLogger.java\n@@ -17,35 +17,34 @@ public final class WebSocketLogger {\n         log.info(\"[chargeBoxId={}, sessionId={}] Connection is established\", chargeBoxId, session.getId());\n     }\n \n-    public static void closed(String chargeBoxId, WebSocketSession session, CloseStatus closeStatus) {\n-        log.warn(\"[chargeBoxId={}, sessionId={}] Connection is closed, status: {}\", chargeBoxId, session.getId(), closeStatus);\n-    }\n+    public static void closed(String chargeBoxId, WebSocketSession session, CloseStatus closeStatus) { log.warn(\"[chargeBoxId={}, sessionId={}] Connection is closed, status: {}\",chargeBoxId, session.getId(), closeStatus);\n+}\n \n-    public static void sending(String chargeBoxId, WebSocketSession session, String msg) {\n-        log.info(\"[chargeBoxId={}, sessionId={}] Sending: {}\", chargeBoxId, session.getId(), msg);\n-    }\n+public static void sending(String chargeBoxId, WebSocketSession session, String msg) {\n+    log.info(\"[chargeBoxId={}, sessionId={}] Sending: {}\", chargeBoxId, session.getId(), msg);\n+}\n \n-    public static void sendingPing(String chargeBoxId, WebSocketSession session) {\n-        log.debug(\"[chargeBoxId={}, sessionId={}] Sending ping message\", chargeBoxId, session.getId());\n-    }\n+public static void sendingPing(String chargeBoxId, WebSocketSession session) {\n+    log.debug(\"[chargeBoxId={}, sessionId={}] Sending ping message\", chargeBoxId, session.getId());\n+}\n \n-    public static void receivedPong(String chargeBoxId, WebSocketSession session) {\n-        log.debug(\"[chargeBoxId={}, sessionId={}] Received pong message\", chargeBoxId, session.getId());\n-    }\n+public static void receivedPong(String chargeBoxId, WebSocketSession session) {\n+    log.debug(\"[chargeBoxId={}, sessionId={}] Received pong message\", chargeBoxId, session.getId());\n+}\n \n-    public static void receivedText(String chargeBoxId, WebSocketSession session, String msg) {\n-        log.info(\"[chargeBoxId={}, sessionId={}] Received: {}\", chargeBoxId, session.getId(), msg);\n-    }\n+public static void receivedText(String chargeBoxId, WebSocketSession session, String msg) {\n+    log.info(\"[chargeBoxId={}, sessionId={}] Received: {}\", chargeBoxId, session.getId(), msg);\n+}\n \n-    public static void pingError(String chargeBoxId, WebSocketSession session, Throwable t) {\n-        if (log.isErrorEnabled()) {\n-            log.error(\"[chargeBoxId=\" + chargeBoxId + \", sessionId=\" + session.getId() + \"] Ping error\", t);\n-        }\n+public static void pingError(String chargeBoxId, WebSocketSession session, Throwable t) {\n+    if (log.isErrorEnabled()) {\n+        log.error(\"[chargeBoxId=\" + chargeBoxId + \", sessionId=\" + session.getId() + \"] Ping error\", t);\n     }\n+}\n \n-    public static void transportError(String chargeBoxId, WebSocketSession session, Throwable t) {\n-        if (log.isErrorEnabled()) {\n-            log.error(\"[chargeBoxId=\" + chargeBoxId + \", sessionId=\" + session.getId() + \"] Transport error\", t);\n-        }\n+public static void transportError(String chargeBoxId, WebSocketSession session, Throwable t) {\n+    if (log.isErrorEnabled()) {\n+        log.error(\"[chargeBoxId=\" + chargeBoxId + \", sessionId=\" + session.getId() + \"] Transport error\", t);\n     }\n }\n+}\n",
            "diff_size": 25
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/85/WebSocketLogger.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/intellij/85/WebSocketLogger.java\nindex dda1d11979..2009669679 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/85/WebSocketLogger.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/intellij/85/WebSocketLogger.java\n@@ -11,14 +11,16 @@ import org.springframework.web.socket.WebSocketSession;\n @Slf4j\n public final class WebSocketLogger {\n \n-    private WebSocketLogger() { }\n+    private WebSocketLogger() {\n+    }\n \n     public static void connected(String chargeBoxId, WebSocketSession session) {\n         log.info(\"[chargeBoxId={}, sessionId={}] Connection is established\", chargeBoxId, session.getId());\n     }\n \n     public static void closed(String chargeBoxId, WebSocketSession session, CloseStatus closeStatus) {\n-        log.warn(\"[chargeBoxId={}, sessionId={}] Connection is closed, status: {}\", chargeBoxId, session.getId(), closeStatus);\n+        log.warn(\"[chargeBoxId={}, sessionId={}] Connection is closed, status: {}\", chargeBoxId, session.getId(),\n+            closeStatus);\n     }\n \n     public static void sending(String chargeBoxId, WebSocketSession session, String msg) {\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/85/WebSocketLogger.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/naturalize/85/WebSocketLogger.java\nindex dda1d11979..907fb6efe6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/85/WebSocketLogger.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/naturalize/85/WebSocketLogger.java\n@@ -48,4 +48,4 @@ public final class WebSocketLogger {\n             log.error(\"[chargeBoxId=\" + chargeBoxId + \", sessionId=\" + session.getId() + \"] Transport error\", t);\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/85/WebSocketLogger.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/codebuff/85/WebSocketLogger.java\nindex dda1d11979..ceb5495d6b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/85/WebSocketLogger.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/codebuff/85/WebSocketLogger.java\n@@ -8,9 +8,10 @@ import org.springframework.web.socket.WebSocketSession;\n  * @author Sevket Goekay <goekay@dbis.rwth-aachen.de>\n  * @since 10.05.2018\n  */\n+\n+\n @Slf4j\n public final class WebSocketLogger {\n-\n     private WebSocketLogger() { }\n \n     public static void connected(String chargeBoxId, WebSocketSession session) {\n@@ -18,7 +19,10 @@ public final class WebSocketLogger {\n     }\n \n     public static void closed(String chargeBoxId, WebSocketSession session, CloseStatus closeStatus) {\n-        log.warn(\"[chargeBoxId={}, sessionId={}] Connection is closed, status: {}\", chargeBoxId, session.getId(), closeStatus);\n+        log.warn(\"[chargeBoxId={}, sessionId={}] Connection is closed, status: {}\",\n+                 chargeBoxId,\n+                 session.getId(),\n+                 closeStatus);\n     }\n \n     public static void sending(String chargeBoxId, WebSocketSession session, String msg) {\n@@ -39,13 +43,17 @@ public final class WebSocketLogger {\n \n     public static void pingError(String chargeBoxId, WebSocketSession session, Throwable t) {\n         if (log.isErrorEnabled()) {\n-            log.error(\"[chargeBoxId=\" + chargeBoxId + \", sessionId=\" + session.getId() + \"] Ping error\", t);\n+            log.error(\"[chargeBoxId=\" + chargeBoxId\n+            + \", sessionId=\"\n+            + session.getId() + \"] Ping error\", t);\n         }\n     }\n \n     public static void transportError(String chargeBoxId, WebSocketSession session, Throwable t) {\n         if (log.isErrorEnabled()) {\n-            log.error(\"[chargeBoxId=\" + chargeBoxId + \", sessionId=\" + session.getId() + \"] Transport error\", t);\n+            log.error(\"[chargeBoxId=\" + chargeBoxId\n+            + \", sessionId=\"\n+            + session.getId() + \"] Transport error\", t);\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "21",
                    "column": "97",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "22",
                    "column": "9",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "22",
                    "column": "9",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "22",
                    "column": "22",
                    "severity": "error",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "22",
                    "column": "23",
                    "severity": "error",
                    "message": "'}' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "22",
                    "column": "23",
                    "severity": "error",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/85/WebSocketLogger.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/styler_random/85/WebSocketLogger.java\nindex dda1d11979..97a054efe0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/85/WebSocketLogger.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/styler_random/85/WebSocketLogger.java\n@@ -18,34 +18,33 @@ public final class WebSocketLogger {\n     }\n \n     public static void closed(String chargeBoxId, WebSocketSession session, CloseStatus closeStatus) {\n-        log.warn(\"[chargeBoxId={}, sessionId={}] Connection is closed, status: {}\", chargeBoxId, session.getId(), closeStatus);\n-    }\n-\n-    public static void sending(String chargeBoxId, WebSocketSession session, String msg) {\n-        log.info(\"[chargeBoxId={}, sessionId={}] Sending: {}\", chargeBoxId, session.getId(), msg);\n-    }\n+        log.warn(\"[chargeBoxId={}, sessionId={}] Connection is closed, status: {}\", chargeBoxId , session.getId()\n+        ,closeStatus);}public static void sending(String chargeBoxId, WebSocketSession session, String msg) {\n+            log.info(\"[chargeBoxId={}, sessionId={}] Sending: {}\", chargeBoxId, session.getId(), msg);\n+        }\n \n-    public static void sendingPing(String chargeBoxId, WebSocketSession session) {\n-        log.debug(\"[chargeBoxId={}, sessionId={}] Sending ping message\", chargeBoxId, session.getId());\n-    }\n+        public static void sendingPing(String chargeBoxId, WebSocketSession session) {\n+            log.debug(\"[chargeBoxId={}, sessionId={}] Sending ping message\", chargeBoxId, session.getId());\n+        }\n \n-    public static void receivedPong(String chargeBoxId, WebSocketSession session) {\n-        log.debug(\"[chargeBoxId={}, sessionId={}] Received pong message\", chargeBoxId, session.getId());\n-    }\n+        public static void receivedPong(String chargeBoxId, WebSocketSession session) {\n+            log.debug(\"[chargeBoxId={}, sessionId={}] Received pong message\", chargeBoxId, session.getId());\n+        }\n \n-    public static void receivedText(String chargeBoxId, WebSocketSession session, String msg) {\n-        log.info(\"[chargeBoxId={}, sessionId={}] Received: {}\", chargeBoxId, session.getId(), msg);\n-    }\n+        public static void receivedText(String chargeBoxId, WebSocketSession session, String msg) {\n+            log.info(\"[chargeBoxId={}, sessionId={}] Received: {}\", chargeBoxId, session.getId(), msg);\n+        }\n \n-    public static void pingError(String chargeBoxId, WebSocketSession session, Throwable t) {\n-        if (log.isErrorEnabled()) {\n-            log.error(\"[chargeBoxId=\" + chargeBoxId + \", sessionId=\" + session.getId() + \"] Ping error\", t);\n+        public static void pingError(String chargeBoxId, WebSocketSession session, Throwable t) {\n+            if (log.isErrorEnabled()) {\n+                log.error(\"[chargeBoxId=\" + chargeBoxId + \", sessionId=\" + session.getId() + \"] Ping error\", t);\n+            }\n         }\n-    }\n \n-    public static void transportError(String chargeBoxId, WebSocketSession session, Throwable t) {\n-        if (log.isErrorEnabled()) {\n-            log.error(\"[chargeBoxId=\" + chargeBoxId + \", sessionId=\" + session.getId() + \"] Transport error\", t);\n+        public static void transportError(String chargeBoxId, WebSocketSession session, Throwable t) {\n+            if (log.isErrorEnabled()) {\n+                log.error(\"[chargeBoxId=\" + chargeBoxId + \", sessionId=\" + session.getId() + \"] Transport error\", t);\n+            }\n         }\n     }\n-}\n+    \n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 221).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "20",
                    "column": "102",
                    "severity": "error",
                    "message": "'{' at column 102 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "20",
                    "column": "178",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/85/WebSocketLogger.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/styler_three_grams/85/WebSocketLogger.java\nindex dda1d11979..729a14dcdc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/85/WebSocketLogger.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/styler_three_grams/85/WebSocketLogger.java\n@@ -17,35 +17,34 @@ public final class WebSocketLogger {\n         log.info(\"[chargeBoxId={}, sessionId={}] Connection is established\", chargeBoxId, session.getId());\n     }\n \n-    public static void closed(String chargeBoxId, WebSocketSession session, CloseStatus closeStatus) {\n-        log.warn(\"[chargeBoxId={}, sessionId={}] Connection is closed, status: {}\", chargeBoxId, session.getId(), closeStatus);\n-    }\n+    public static void closed(String chargeBoxId, WebSocketSession session, CloseStatus closeStatus) { log.warn(\"[chargeBoxId={}, sessionId={}] Connection is closed, status: {}\",chargeBoxId, session.getId(), closeStatus);\n+}\n \n-    public static void sending(String chargeBoxId, WebSocketSession session, String msg) {\n-        log.info(\"[chargeBoxId={}, sessionId={}] Sending: {}\", chargeBoxId, session.getId(), msg);\n-    }\n+public static void sending(String chargeBoxId, WebSocketSession session, String msg) {\n+    log.info(\"[chargeBoxId={}, sessionId={}] Sending: {}\", chargeBoxId, session.getId(), msg);\n+}\n \n-    public static void sendingPing(String chargeBoxId, WebSocketSession session) {\n-        log.debug(\"[chargeBoxId={}, sessionId={}] Sending ping message\", chargeBoxId, session.getId());\n-    }\n+public static void sendingPing(String chargeBoxId, WebSocketSession session) {\n+    log.debug(\"[chargeBoxId={}, sessionId={}] Sending ping message\", chargeBoxId, session.getId());\n+}\n \n-    public static void receivedPong(String chargeBoxId, WebSocketSession session) {\n-        log.debug(\"[chargeBoxId={}, sessionId={}] Received pong message\", chargeBoxId, session.getId());\n-    }\n+public static void receivedPong(String chargeBoxId, WebSocketSession session) {\n+    log.debug(\"[chargeBoxId={}, sessionId={}] Received pong message\", chargeBoxId, session.getId());\n+}\n \n-    public static void receivedText(String chargeBoxId, WebSocketSession session, String msg) {\n-        log.info(\"[chargeBoxId={}, sessionId={}] Received: {}\", chargeBoxId, session.getId(), msg);\n-    }\n+public static void receivedText(String chargeBoxId, WebSocketSession session, String msg) {\n+    log.info(\"[chargeBoxId={}, sessionId={}] Received: {}\", chargeBoxId, session.getId(), msg);\n+}\n \n-    public static void pingError(String chargeBoxId, WebSocketSession session, Throwable t) {\n-        if (log.isErrorEnabled()) {\n-            log.error(\"[chargeBoxId=\" + chargeBoxId + \", sessionId=\" + session.getId() + \"] Ping error\", t);\n-        }\n+public static void pingError(String chargeBoxId, WebSocketSession session, Throwable t) {\n+    if (log.isErrorEnabled()) {\n+        log.error(\"[chargeBoxId=\" + chargeBoxId + \", sessionId=\" + session.getId() + \"] Ping error\", t);\n     }\n+}\n \n-    public static void transportError(String chargeBoxId, WebSocketSession session, Throwable t) {\n-        if (log.isErrorEnabled()) {\n-            log.error(\"[chargeBoxId=\" + chargeBoxId + \", sessionId=\" + session.getId() + \"] Transport error\", t);\n-        }\n+public static void transportError(String chargeBoxId, WebSocketSession session, Throwable t) {\n+    if (log.isErrorEnabled()) {\n+        log.error(\"[chargeBoxId=\" + chargeBoxId + \", sessionId=\" + session.getId() + \"] Transport error\", t);\n     }\n }\n+}\n",
            "diff_size": 25
        }
    ]
}