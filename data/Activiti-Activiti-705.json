{
    "error_id": "705",
    "information": {
        "errors": [
            {
                "line": "13",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.bpmn.model;\n\npublic class TextAnnotation extends Artifact {\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/705/TextAnnotation.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/705/TextAnnotation.java\nindex 82deece8d0..841ca50ba9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/705/TextAnnotation.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/705/TextAnnotation.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n public class TextAnnotation extends Artifact {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/705/TextAnnotation.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/705/TextAnnotation.java\nindex 82deece8d0..a4767d48af 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/705/TextAnnotation.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/705/TextAnnotation.java\n@@ -1,47 +1,48 @@\n /* Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n public class TextAnnotation extends Artifact {\n \n-  protected String text;\n-  protected String textFormat;\n+    protected String text;\n+    protected String textFormat;\n \n-  public String getText() {\n-    return text;\n-  }\n+    public String getText() {\n+        return text;\n+    }\n \n-  public void setText(String text) {\n-    this.text = text;\n-  }\n+    public void setText(String text) {\n+        this.text = text;\n+    }\n \n-  public String getTextFormat() {\n-    return textFormat;\n-  }\n+    public String getTextFormat() {\n+        return textFormat;\n+    }\n \n-  public void setTextFormat(String textFormat) {\n-    this.textFormat = textFormat;\n-  }\n+    public void setTextFormat(String textFormat) {\n+        this.textFormat = textFormat;\n+    }\n \n-  public TextAnnotation clone() {\n-    TextAnnotation clone = new TextAnnotation();\n-    clone.setValues(this);\n-    return clone;\n-  }\n+    public TextAnnotation clone() {\n+        TextAnnotation clone = new TextAnnotation();\n+        clone.setValues(this);\n+        return clone;\n+    }\n \n-  public void setValues(TextAnnotation otherElement) {\n-    super.setValues(otherElement);\n-    setText(otherElement.getText());\n-    setTextFormat(otherElement.getTextFormat());\n-  }\n+    public void setValues(TextAnnotation otherElement) {\n+        super.setValues(otherElement);\n+        setText(otherElement.getText());\n+        setTextFormat(otherElement.getTextFormat());\n+    }\n }\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/705/TextAnnotation.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/naturalize/705/TextAnnotation.java\nindex 82deece8d0..75a414cfee 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/705/TextAnnotation.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/naturalize/705/TextAnnotation.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n public class TextAnnotation extends Artifact {\n@@ -44,4 +45,4 @@ public class TextAnnotation extends Artifact {\n     setText(otherElement.getText());\n     setTextFormat(otherElement.getTextFormat());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "13",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/705/TextAnnotation.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/705/TextAnnotation.java\nindex 82deece8d0..91af8a4fb3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/705/TextAnnotation.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/705/TextAnnotation.java\n@@ -12,36 +12,37 @@\n  */\n package org.activiti.bpmn.model;\n \n-public class TextAnnotation extends Artifact {\n \n-  protected String text;\n-  protected String textFormat;\n+public class TextAnnotation extends Artifact {\n \n-  public String getText() {\n+    protected String text;\n+    protected String textFormat;\n+    public String getText() {\n     return text;\n-  }\n+    }\n \n-  public void setText(String text) {\n+    public void setText(String text) {\n     this.text = text;\n-  }\n+    }\n \n-  public String getTextFormat() {\n+    public String getTextFormat() {\n     return textFormat;\n-  }\n+    }\n \n-  public void setTextFormat(String textFormat) {\n+    public void setTextFormat(String textFormat) {\n     this.textFormat = textFormat;\n-  }\n+    }\n \n-  public TextAnnotation clone() {\n+    public TextAnnotation clone() {\n     TextAnnotation clone = new TextAnnotation();\n     clone.setValues(this);\n     return clone;\n-  }\n+    }\n \n-  public void setValues(TextAnnotation otherElement) {\n+    public void setValues(TextAnnotation otherElement) {\n     super.setValues(otherElement);\n     setText(otherElement.getText());\n     setTextFormat(otherElement.getTextFormat());\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/705/TextAnnotation.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/705/TextAnnotation.java\nindex 82deece8d0..841ca50ba9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/705/TextAnnotation.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/705/TextAnnotation.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n public class TextAnnotation extends Artifact {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/705/TextAnnotation.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/705/TextAnnotation.java\nindex 82deece8d0..841ca50ba9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/705/TextAnnotation.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/705/TextAnnotation.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n public class TextAnnotation extends Artifact {\n",
            "diff_size": 1
        }
    ]
}