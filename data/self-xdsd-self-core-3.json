{
    "error_id": "3",
    "information": {
        "errors": [
            {
                "line": "101",
                "column": "11",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "    public Provider provider() {\n        final Provider provider;\n        if(this.provider.equals(Provider.Names.GITHUB)) {\n            provider = new Github(new PmUser(this), this.storage);\n        } else {\n            provider = new Gitlab(new PmUser(this), this.storage);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/3/StoredProjectManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler/3/StoredProjectManager.java\nindex 9979f0dcb5..51a531f046 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/3/StoredProjectManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler/3/StoredProjectManager.java\n@@ -98,7 +98,7 @@ public final class StoredProjectManager implements ProjectManager {\n     @Override\n     public Provider provider() {\n         final Provider provider;\n-        if(this.provider.equals(Provider.Names.GITHUB)) {\n+        if (this.provider.equals(Provider.Names.GITHUB)) {\n             provider = new Github(new PmUser(this), this.storage);\n         } else {\n             provider = new Gitlab(new PmUser(this), this.storage);\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "69",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/3/StoredProjectManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/intellij/3/StoredProjectManager.java\nindex 9979f0dcb5..6834f0a874 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/3/StoredProjectManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/intellij/3/StoredProjectManager.java\n@@ -20,6 +20,7 @@\n  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n  * POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.selfxdsd.core.managers;\n \n import com.selfxdsd.api.*;\n@@ -64,11 +65,12 @@ public final class StoredProjectManager implements ProjectManager {\n \n     /**\n      * Constructor.\n-     * @param id PM's id.\n-     * @param username PM's username.\n-     * @param provider The provider's name (Gitlab, Github etc).\n+     *\n+     * @param id          PM's id.\n+     * @param username    PM's username.\n+     * @param provider    The provider's name (Gitlab, Github etc).\n      * @param accessToken API Access token.\n-     * @param storage Self's storage.\n+     * @param storage     Self's storage.\n      * @checkstyle ParameterNumber (10 lines)\n      */\n     public StoredProjectManager(\n@@ -98,7 +100,7 @@ public final class StoredProjectManager implements ProjectManager {\n     @Override\n     public Provider provider() {\n         final Provider provider;\n-        if(this.provider.equals(Provider.Names.GITHUB)) {\n+        if (this.provider.equals(Provider.Names.GITHUB)) {\n             provider = new Github(new PmUser(this), this.storage);\n         } else {\n             provider = new Gitlab(new PmUser(this), this.storage);\n@@ -118,6 +120,7 @@ public final class StoredProjectManager implements ProjectManager {\n \n     /**\n      * PM as a User.\n+     *\n      * @author Mihai Andronache (amihaiemil@gmail.com)\n      * @version $Id$\n      * @since 0.0.1\n@@ -131,6 +134,7 @@ public final class StoredProjectManager implements ProjectManager {\n \n         /**\n          * Constructor.\n+         *\n          * @param manager PM acting as a user.\n          */\n         PmUser(final ProjectManager manager) {\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "101",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/3/StoredProjectManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/naturalize/3/StoredProjectManager.java\nindex 9979f0dcb5..1d0d967c33 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/3/StoredProjectManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/naturalize/3/StoredProjectManager.java\n@@ -157,4 +157,4 @@ public final class StoredProjectManager implements ProjectManager {\n             return this.manager.projects();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "114",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 60, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 93).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 56, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "117",
                    "column": "57",
                    "severity": "error",
                    "message": "'}' at column 57 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "'else' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 9, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 5, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/3/StoredProjectManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/codebuff/3/StoredProjectManager.java\nindex 9979f0dcb5..7619c9123c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/3/StoredProjectManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/codebuff/3/StoredProjectManager.java\n@@ -35,31 +35,43 @@ import com.selfxdsd.core.Gitlab;\n  * @version $Id$\n  * @since 0.0.1\n  */\n+\n+\n public final class StoredProjectManager implements ProjectManager {\n \n     /**\n      * This PMs id.\n      */\n+\n+\n     private final int id;\n \n     /**\n      * This PM's username.\n      */\n+\n+\n     private String username;\n \n     /**\n      * Provider's name.\n      */\n+\n+\n     private final String provider;\n \n     /**\n      * This PM's access token.\n      */\n+\n+\n     private final String accessToken;\n \n     /**\n      * Self's storage.\n      */\n+\n+\n     private final Storage storage;\n \n     /**\n@@ -71,12 +83,13 @@ public final class StoredProjectManager implements ProjectManager {\n      * @param storage Self's storage.\n      * @checkstyle ParameterNumber (10 lines)\n      */\n+\n+\n     public StoredProjectManager(\n         final int id,\n         final String username,\n         final String provider,\n-        final String accessToken,\n-        final Storage storage\n+        final String accessToken, final Storage storage\n     ) {\n         this.id = id;\n         this.username = username;\n@@ -99,10 +112,14 @@ public final class StoredProjectManager implements ProjectManager {\n     public Provider provider() {\n         final Provider provider;\n         if(this.provider.equals(Provider.Names.GITHUB)) {\n-            provider = new Github(new PmUser(this), this.storage);\n-        } else {\n-            provider = new Gitlab(new PmUser(this), this.storage);\n-        }\n+                                                            provider = new Github(new PmUser(\n+                                                                                      this), this.storage);\n+                                                        }\n+\n+else {\n+         provider = new Gitlab(new PmUser(\n+                                   this), this.storage);\n+     }\n         return provider.withToken(this.accessToken);\n     }\n \n@@ -122,17 +139,22 @@ public final class StoredProjectManager implements ProjectManager {\n      * @version $Id$\n      * @since 0.0.1\n      */\n+\n     private final class PmUser implements User {\n \n         /**\n          * The PM.\n          */\n+\n+\n         private final ProjectManager manager;\n \n         /**\n          * Constructor.\n          * @param manager PM acting as a user.\n          */\n+\n+\n         PmUser(final ProjectManager manager) {\n             this.manager = manager;\n         }\n@@ -157,4 +179,4 @@ public final class StoredProjectManager implements ProjectManager {\n             return this.manager.projects();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/3/StoredProjectManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_random/3/StoredProjectManager.java\nindex 9979f0dcb5..51a531f046 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/3/StoredProjectManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_random/3/StoredProjectManager.java\n@@ -98,7 +98,7 @@ public final class StoredProjectManager implements ProjectManager {\n     @Override\n     public Provider provider() {\n         final Provider provider;\n-        if(this.provider.equals(Provider.Names.GITHUB)) {\n+        if (this.provider.equals(Provider.Names.GITHUB)) {\n             provider = new Github(new PmUser(this), this.storage);\n         } else {\n             provider = new Gitlab(new PmUser(this), this.storage);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/3/StoredProjectManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_three_grams/3/StoredProjectManager.java\nindex 9979f0dcb5..51a531f046 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/3/StoredProjectManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_three_grams/3/StoredProjectManager.java\n@@ -98,7 +98,7 @@ public final class StoredProjectManager implements ProjectManager {\n     @Override\n     public Provider provider() {\n         final Provider provider;\n-        if(this.provider.equals(Provider.Names.GITHUB)) {\n+        if (this.provider.equals(Provider.Names.GITHUB)) {\n             provider = new Github(new PmUser(this), this.storage);\n         } else {\n             provider = new Gitlab(new PmUser(this), this.storage);\n",
            "diff_size": 1
        }
    ]
}