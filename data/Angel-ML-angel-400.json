{
    "error_id": "400",
    "information": {
        "errors": [
            {
                "line": "77",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 105).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  @Override\n  public int getDimension() {\n    throw new UnsupportedOperationException(\"Unsupportted operation, you should use getLongDim instead\");\n  }\n\n  @Override",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/400/TLongDoubleVector.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler/400/TLongDoubleVector.java\nindex 24ef737fb7..29c5752f1c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/400/TLongDoubleVector.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler/400/TLongDoubleVector.java\n@@ -73,14 +73,13 @@ public abstract class TLongDoubleVector extends TDoubleVector {\n   public abstract TLongDoubleVector clone();\n \n   @Override\n-  public int getDimension() {\n-    throw new UnsupportedOperationException(\"Unsupportted operation, you should use getLongDim instead\");\n-  }\n+  public int getDimension() { throw new UnsupportedOperationException(\"Unsupportted operation, you should use getLongDim instead\");\n+}\n \n-  @Override\n-  public TVector plusBy(int index, double x) {\n-    return plusBy((long) index, x);\n-  }\n+@Override\n+public TVector plusBy(int index, double x) {\n+  return plusBy((long) index, x);\n+}\n \n-  public abstract double sum();\n+public abstract double sum();\n }\n",
            "diff_size": 8
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/400/TLongDoubleVector.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/400/TLongDoubleVector.java\nindex 24ef737fb7..40b90bddc2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/400/TLongDoubleVector.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/400/TLongDoubleVector.java\n@@ -25,62 +25,70 @@ import org.apache.commons.logging.LogFactory;\n  * Base class for long key double vector.\n  */\n public abstract class TLongDoubleVector extends TDoubleVector {\n-  private static final Log LOG = LogFactory.getLog(SparseLongKeyDoubleVector.class);\n+    private static final Log LOG = LogFactory.getLog(SparseLongKeyDoubleVector.class);\n \n-  /** Vector dimension */\n-  protected long dim;\n-  public TLongDoubleVector(long dim) {\n-    super();\n-    this.dim = dim;\n-  }\n+    /**\n+     * Vector dimension\n+     */\n+    protected long dim;\n \n-  /**\n-   * Get dimension for long key vector\n-   * @return long dimension\n-   */\n-  public long getLongDim(){\n-    return dim;\n-  }\n+    public TLongDoubleVector(long dim) {\n+        super();\n+        this.dim = dim;\n+    }\n \n-  /**\n-   * Plus a element by a update value\n-   * @param index element index\n-   * @param x update value\n-   * @return this\n-   */\n-  public abstract TVector plusBy(long index, double x);\n+    /**\n+     * Get dimension for long key vector\n+     *\n+     * @return long dimension\n+     */\n+    public long getLongDim() {\n+        return dim;\n+    }\n \n-  /**\n-   * Set a element by a new value\n-   * @param index element index\n-   * @param x new value\n-   * @return this\n-   */\n-  public abstract void set(long index, double x);\n+    /**\n+     * Plus a element by a update value\n+     *\n+     * @param index element index\n+     * @param x     update value\n+     * @return this\n+     */\n+    public abstract TVector plusBy(long index, double x);\n \n-  /**\n-   * Get a element value by value index\n-   * @param index value index\n-   * @return\n-   */\n-  public abstract double get(long index);\n+    /**\n+     * Set a element by a new value\n+     *\n+     * @param index element index\n+     * @param x     new value\n+     * @return this\n+     */\n+    public abstract void set(long index, double x);\n \n-  public abstract long[] getIndexes();\n+    /**\n+     * Get a element value by value index\n+     *\n+     * @param index value index\n+     * @return\n+     */\n+    public abstract double get(long index);\n \n-  public abstract double[] getValues();\n+    public abstract long[] getIndexes();\n \n-  @Override\n-  public abstract TLongDoubleVector clone();\n+    public abstract double[] getValues();\n \n-  @Override\n-  public int getDimension() {\n-    throw new UnsupportedOperationException(\"Unsupportted operation, you should use getLongDim instead\");\n-  }\n+    @Override\n+    public abstract TLongDoubleVector clone();\n \n-  @Override\n-  public TVector plusBy(int index, double x) {\n-    return plusBy((long) index, x);\n-  }\n+    @Override\n+    public int getDimension() {\n+        throw new UnsupportedOperationException(\n+                \"Unsupportted operation, you should use getLongDim instead\");\n+    }\n \n-  public abstract double sum();\n+    @Override\n+    public TVector plusBy(int index, double x) {\n+        return plusBy((long) index, x);\n+    }\n+\n+    public abstract double sum();\n }\n",
            "diff_size": 63
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/400/TLongDoubleVector.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/400/TLongDoubleVector.java\nindex 24ef737fb7..e874b2eb4f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/400/TLongDoubleVector.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/400/TLongDoubleVector.java\n@@ -38,7 +38,7 @@ public abstract class TLongDoubleVector extends TDoubleVector {\n    * Get dimension for long key vector\n    * @return long dimension\n    */\n-  public long getLongDim(){\n+  public long getLongDim() {\n     return dim;\n   }\n \n@@ -83,4 +83,4 @@ public abstract class TLongDoubleVector extends TDoubleVector {\n   }\n \n   public abstract double sum();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 32.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 44.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 55.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 64.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 72.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/400/TLongDoubleVector.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/400/TLongDoubleVector.java\nindex 24ef737fb7..6be61c5bed 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/400/TLongDoubleVector.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/400/TLongDoubleVector.java\n@@ -24,23 +24,26 @@ import org.apache.commons.logging.LogFactory;\n /**\n  * Base class for long key double vector.\n  */\n+\n public abstract class TLongDoubleVector extends TDoubleVector {\n-  private static final Log LOG = LogFactory.getLog(SparseLongKeyDoubleVector.class);\n+    private static final Log LOG = LogFactory.getLog(SparseLongKeyDoubleVector.class);\n \n   /** Vector dimension */\n-  protected long dim;\n-  public TLongDoubleVector(long dim) {\n+    protected long dim;\n+\n+    public TLongDoubleVector(long dim) {\n     super();\n     this.dim = dim;\n-  }\n+    }\n \n   /**\n    * Get dimension for long key vector\n    * @return long dimension\n    */\n-  public long getLongDim(){\n+\n+    public long getLongDim() {\n     return dim;\n-  }\n+    }\n \n   /**\n    * Plus a element by a update value\n@@ -48,7 +51,8 @@ public abstract class TLongDoubleVector extends TDoubleVector {\n    * @param x update value\n    * @return this\n    */\n-  public abstract TVector plusBy(long index, double x);\n+\n+    public abstract TVector plusBy(long index, double x);\n \n   /**\n    * Set a element by a new value\n@@ -56,31 +60,34 @@ public abstract class TLongDoubleVector extends TDoubleVector {\n    * @param x new value\n    * @return this\n    */\n-  public abstract void set(long index, double x);\n+\n+    public abstract void set(long index, double x);\n \n   /**\n    * Get a element value by value index\n    * @param index value index\n    * @return\n    */\n-  public abstract double get(long index);\n \n-  public abstract long[] getIndexes();\n+    public abstract double get(long index);\n+\n+    public abstract long[] getIndexes();\n \n-  public abstract double[] getValues();\n+    public abstract double[] getValues();\n \n-  @Override\n-  public abstract TLongDoubleVector clone();\n+    @Override\n+    public abstract TLongDoubleVector clone();\n \n-  @Override\n-  public int getDimension() {\n+    @Override\n+    public int getDimension() {\n     throw new UnsupportedOperationException(\"Unsupportted operation, you should use getLongDim instead\");\n-  }\n+    }\n \n-  @Override\n-  public TVector plusBy(int index, double x) {\n+    @Override\n+    public TVector plusBy(int index, double x) {\n     return plusBy((long) index, x);\n-  }\n+    }\n+\n+    public abstract double sum();\n \n-  public abstract double sum();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "No trailing whitespace allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/400/TLongDoubleVector.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_random/400/TLongDoubleVector.java\nindex 24ef737fb7..83fc4a5ca4 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/400/TLongDoubleVector.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_random/400/TLongDoubleVector.java\n@@ -74,13 +74,11 @@ public abstract class TLongDoubleVector extends TDoubleVector {\n \n   @Override\n   public int getDimension() {\n-    throw new UnsupportedOperationException(\"Unsupportted operation, you should use getLongDim instead\");\n-  }\n+    throw new UnsupportedOperationException(\"Unsupportted operation, you should use getLongDim instead\"); } @Override\n+    public TVector plusBy(int index, double x) {\n+      return plusBy((long) index, x);\n+    }\n \n-  @Override\n-  public TVector plusBy(int index, double x) {\n-    return plusBy((long) index, x);\n+    public abstract double sum();\n   }\n-\n-  public abstract double sum();\n-}\n+  \n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/400/TLongDoubleVector.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/400/TLongDoubleVector.java\nindex 24ef737fb7..29c5752f1c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/400/TLongDoubleVector.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/400/TLongDoubleVector.java\n@@ -73,14 +73,13 @@ public abstract class TLongDoubleVector extends TDoubleVector {\n   public abstract TLongDoubleVector clone();\n \n   @Override\n-  public int getDimension() {\n-    throw new UnsupportedOperationException(\"Unsupportted operation, you should use getLongDim instead\");\n-  }\n+  public int getDimension() { throw new UnsupportedOperationException(\"Unsupportted operation, you should use getLongDim instead\");\n+}\n \n-  @Override\n-  public TVector plusBy(int index, double x) {\n-    return plusBy((long) index, x);\n-  }\n+@Override\n+public TVector plusBy(int index, double x) {\n+  return plusBy((long) index, x);\n+}\n \n-  public abstract double sum();\n+public abstract double sum();\n }\n",
            "diff_size": 8
        }
    ]
}