{
    "error_id": "181",
    "information": {
        "errors": [
            {
                "line": "68",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 157).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n        if (count > 0) {\n            orgCommunitys = BeanConvertUtil.covertBeanList(orgCommunityInnerServiceSMOImpl.queryOrgCommunitys(orgCommunityDto), ApiOrgCommunityDataVo.class);\n        } else {\n            orgCommunitys = new ArrayList<>();\n        }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "67",
                    "column": "24",
                    "severity": "error",
                    "message": "'{' at column 24 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "67",
                    "column": "39",
                    "severity": "error",
                    "message": "'=' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "67",
                    "column": "39",
                    "severity": "error",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/181/ListOrgNoCommunitysListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/181/ListOrgNoCommunitysListener.java\nindex e45d51689a..c5d5ed3f78 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/181/ListOrgNoCommunitysListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/181/ListOrgNoCommunitysListener.java\n@@ -64,30 +64,29 @@ public class ListOrgNoCommunitysListener extends AbstractServiceApiListener {\n \n         List<ApiOrgCommunityDataVo> orgCommunitys = null;\n \n-        if (count > 0) {\n-            orgCommunitys = BeanConvertUtil.covertBeanList(orgCommunityInnerServiceSMOImpl.queryOrgCommunitys(orgCommunityDto), ApiOrgCommunityDataVo.class);\n-        } else {\n-            orgCommunitys = new ArrayList<>();\n-        }\n+        if (count > 0) { orgCommunitys=BeanConvertUtil.covertBeanList(orgCommunityInnerServiceSMOImpl.queryOrgCommunitys(orgCommunityDto), ApiOrgCommunityDataVo.class);\n+    } else {\n+        orgCommunitys = new ArrayList<>();\n+    }\n \n-        ApiOrgCommunityVo apiOrgVo = new ApiOrgCommunityVo();\n+    ApiOrgCommunityVo apiOrgVo = new ApiOrgCommunityVo();\n \n-        apiOrgVo.setTotal(count);\n-        apiOrgVo.setRecords((int) Math.ceil((double) count / (double) reqJson.getInteger(\"row\")));\n-        apiOrgVo.setOrgCommunitys(orgCommunitys);\n+    apiOrgVo.setTotal(count);\n+    apiOrgVo.setRecords((int) Math.ceil((double) count / (double) reqJson.getInteger(\"row\")));\n+    apiOrgVo.setOrgCommunitys(orgCommunitys);\n \n-        ResponseEntity<String> responseEntity = new ResponseEntity<String>(JSONObject.toJSONString(apiOrgVo), HttpStatus.OK);\n+    ResponseEntity<String> responseEntity = new ResponseEntity<String>(JSONObject.toJSONString(apiOrgVo), HttpStatus.OK);\n \n-        context.setResponseEntity(responseEntity);\n+    context.setResponseEntity(responseEntity);\n \n-    }\n+}\n \n \n-    public IOrgCommunityInnerServiceSMO getOrgCommunityInnerServiceSMOImpl() {\n-        return orgCommunityInnerServiceSMOImpl;\n-    }\n+public IOrgCommunityInnerServiceSMO getOrgCommunityInnerServiceSMOImpl() {\n+    return orgCommunityInnerServiceSMOImpl;\n+}\n \n-    public void setOrgCommunityInnerServiceSMOImpl(IOrgCommunityInnerServiceSMO orgCommunityInnerServiceSMOImpl) {\n-        this.orgCommunityInnerServiceSMOImpl = orgCommunityInnerServiceSMOImpl;\n-    }\n+public void setOrgCommunityInnerServiceSMOImpl(IOrgCommunityInnerServiceSMO orgCommunityInnerServiceSMOImpl) {\n+    this.orgCommunityInnerServiceSMOImpl = orgCommunityInnerServiceSMOImpl;\n+}\n }\n",
            "diff_size": 18
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/181/ListOrgNoCommunitysListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/181/ListOrgNoCommunitysListener.java\nindex e45d51689a..f257f5c948 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/181/ListOrgNoCommunitysListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/181/ListOrgNoCommunitysListener.java\n@@ -27,67 +27,67 @@ import java.util.List;\n @Java110Listener(\"listOrgCommunitysListener\")\n public class ListOrgNoCommunitysListener extends AbstractServiceApiListener {\n \n-    @Autowired\n-    private IOrgCommunityInnerServiceSMO orgCommunityInnerServiceSMOImpl;\n+  @Autowired\n+  private IOrgCommunityInnerServiceSMO orgCommunityInnerServiceSMOImpl;\n \n-    @Override\n-    public String getServiceCode() {\n-        return ServiceCodeOrgConstant.LIST_ORG_NO_COMMUNITYS;\n-    }\n+  @Override\n+  public String getServiceCode() {\n+    return ServiceCodeOrgConstant.LIST_ORG_NO_COMMUNITYS;\n+  }\n \n-    @Override\n-    public HttpMethod getHttpMethod() {\n-        return HttpMethod.GET;\n-    }\n+  @Override\n+  public HttpMethod getHttpMethod() {\n+    return HttpMethod.GET;\n+  }\n \n \n-    @Override\n-    public int getOrder() {\n-        return DEFAULT_ORDER;\n-    }\n+  @Override\n+  public int getOrder() {\n+    return DEFAULT_ORDER;\n+  }\n \n \n+  @Override\n+  protected void validate(ServiceDataFlowEvent event, JSONObject reqJson) {\n+    super.validatePageInfo(reqJson);\n+    Assert.hasKeyAndValue(reqJson, \"storeId\", \"\u5fc5\u586b\uff0c\u8bf7\u586b\u5199\u5546\u6237ID\");\n+    Assert.hasKeyAndValue(reqJson, \"orgId\", \"\u5fc5\u586b\uff0c\u8bf7\u586b\u5199\u7ec4\u7ec7ID\");\n+  }\n \n-    @Override\n-    protected void validate(ServiceDataFlowEvent event, JSONObject reqJson) {\n-        super.validatePageInfo(reqJson);\n-        Assert.hasKeyAndValue(reqJson, \"storeId\", \"\u5fc5\u586b\uff0c\u8bf7\u586b\u5199\u5546\u6237ID\");\n-        Assert.hasKeyAndValue(reqJson, \"orgId\", \"\u5fc5\u586b\uff0c\u8bf7\u586b\u5199\u7ec4\u7ec7ID\");\n-    }\n-\n-    @Override\n-    protected void doSoService(ServiceDataFlowEvent event, DataFlowContext context, JSONObject reqJson) {\n+  @Override\n+  protected void doSoService(ServiceDataFlowEvent event, DataFlowContext context, JSONObject reqJson) {\n \n-        OrgCommunityDto orgCommunityDto = BeanConvertUtil.covertBean(reqJson, OrgCommunityDto.class);\n+    OrgCommunityDto orgCommunityDto = BeanConvertUtil.covertBean(reqJson, OrgCommunityDto.class);\n \n-        int count = orgCommunityInnerServiceSMOImpl.queryOrgCommunitysCount(orgCommunityDto);\n+    int count = orgCommunityInnerServiceSMOImpl.queryOrgCommunitysCount(orgCommunityDto);\n \n-        List<ApiOrgCommunityDataVo> orgCommunitys = null;\n+    List<ApiOrgCommunityDataVo> orgCommunitys = null;\n \n-        if (count > 0) {\n-            orgCommunitys = BeanConvertUtil.covertBeanList(orgCommunityInnerServiceSMOImpl.queryOrgCommunitys(orgCommunityDto), ApiOrgCommunityDataVo.class);\n-        } else {\n-            orgCommunitys = new ArrayList<>();\n-        }\n+    if (count > 0) {\n+      orgCommunitys =\n+        BeanConvertUtil.covertBeanList(orgCommunityInnerServiceSMOImpl.queryOrgCommunitys(orgCommunityDto), ApiOrgCommunityDataVo.class);\n+    } else {\n+      orgCommunitys = new ArrayList<>();\n+    }\n \n-        ApiOrgCommunityVo apiOrgVo = new ApiOrgCommunityVo();\n+    ApiOrgCommunityVo apiOrgVo = new ApiOrgCommunityVo();\n \n-        apiOrgVo.setTotal(count);\n-        apiOrgVo.setRecords((int) Math.ceil((double) count / (double) reqJson.getInteger(\"row\")));\n-        apiOrgVo.setOrgCommunitys(orgCommunitys);\n+    apiOrgVo.setTotal(count);\n+    apiOrgVo.setRecords((int) Math.ceil((double) count / (double) reqJson.getInteger(\"row\")));\n+    apiOrgVo.setOrgCommunitys(orgCommunitys);\n \n-        ResponseEntity<String> responseEntity = new ResponseEntity<String>(JSONObject.toJSONString(apiOrgVo), HttpStatus.OK);\n+    ResponseEntity<String> responseEntity = new ResponseEntity<String>(JSONObject.toJSONString(apiOrgVo), HttpStatus.OK);\n \n-        context.setResponseEntity(responseEntity);\n+    context.setResponseEntity(responseEntity);\n \n-    }\n+  }\n \n \n-    public IOrgCommunityInnerServiceSMO getOrgCommunityInnerServiceSMOImpl() {\n-        return orgCommunityInnerServiceSMOImpl;\n-    }\n+  public IOrgCommunityInnerServiceSMO getOrgCommunityInnerServiceSMOImpl() {\n+    return orgCommunityInnerServiceSMOImpl;\n+  }\n \n-    public void setOrgCommunityInnerServiceSMOImpl(IOrgCommunityInnerServiceSMO orgCommunityInnerServiceSMOImpl) {\n-        this.orgCommunityInnerServiceSMOImpl = orgCommunityInnerServiceSMOImpl;\n-    }\n+  public void setOrgCommunityInnerServiceSMOImpl(IOrgCommunityInnerServiceSMO orgCommunityInnerServiceSMOImpl) {\n+    this.orgCommunityInnerServiceSMOImpl = orgCommunityInnerServiceSMOImpl;\n+  }\n }\n",
            "diff_size": 51
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/181/ListOrgNoCommunitysListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/181/ListOrgNoCommunitysListener.java\nindex e45d51689a..bd562332d7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/181/ListOrgNoCommunitysListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/181/ListOrgNoCommunitysListener.java\n@@ -46,9 +46,7 @@ public class ListOrgNoCommunitysListener extends AbstractServiceApiListener {\n         return DEFAULT_ORDER;\n     }\n \n-\n-\n-    @Override\n+@Override\n     protected void validate(ServiceDataFlowEvent event, JSONObject reqJson) {\n         super.validatePageInfo(reqJson);\n         Assert.hasKeyAndValue(reqJson, \"storeId\", \"\u5fc5\u586b\uff0c\u8bf7\u586b\u5199\u5546\u6237ID\");\n@@ -90,4 +88,4 @@ public class ListOrgNoCommunitysListener extends AbstractServiceApiListener {\n     public void setOrgCommunityInnerServiceSMOImpl(IOrgCommunityInnerServiceSMO orgCommunityInnerServiceSMOImpl) {\n         this.orgCommunityInnerServiceSMOImpl = orgCommunityInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/181/ListOrgNoCommunitysListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/181/ListOrgNoCommunitysListener.java\nindex e45d51689a..a6545675e6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/181/ListOrgNoCommunitysListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/181/ListOrgNoCommunitysListener.java\n@@ -16,7 +16,6 @@ import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpMethod;\n import org.springframework.http.HttpStatus;\n import org.springframework.http.ResponseEntity;\n-\n import java.util.ArrayList;\n import java.util.List;\n \n@@ -24,6 +23,8 @@ import java.util.List;\n /**\n  * \u67e5\u8be2\u5c0f\u533a\u4fa6\u542c\u7c7b\n  */\n+\n+\n @Java110Listener(\"listOrgCommunitysListener\")\n public class ListOrgNoCommunitysListener extends AbstractServiceApiListener {\n \n@@ -35,6 +36,7 @@ public class ListOrgNoCommunitysListener extends AbstractServiceApiListener {\n         return ServiceCodeOrgConstant.LIST_ORG_NO_COMMUNITYS;\n     }\n \n+\n     @Override\n     public HttpMethod getHttpMethod() {\n         return HttpMethod.GET;\n@@ -47,7 +49,6 @@ public class ListOrgNoCommunitysListener extends AbstractServiceApiListener {\n     }\n \n \n-\n     @Override\n     protected void validate(ServiceDataFlowEvent event, JSONObject reqJson) {\n         super.validatePageInfo(reqJson);\n@@ -55,15 +56,13 @@ public class ListOrgNoCommunitysListener extends AbstractServiceApiListener {\n         Assert.hasKeyAndValue(reqJson, \"orgId\", \"\u5fc5\u586b\uff0c\u8bf7\u586b\u5199\u7ec4\u7ec7ID\");\n     }\n \n-    @Override\n-    protected void doSoService(ServiceDataFlowEvent event, DataFlowContext context, JSONObject reqJson) {\n \n+    @Override\n+    protected void doSoService(ServiceDataFlowEvent event,\n+                               DataFlowContext context, JSONObject reqJson) {\n         OrgCommunityDto orgCommunityDto = BeanConvertUtil.covertBean(reqJson, OrgCommunityDto.class);\n-\n         int count = orgCommunityInnerServiceSMOImpl.queryOrgCommunitysCount(orgCommunityDto);\n-\n         List<ApiOrgCommunityDataVo> orgCommunitys = null;\n-\n         if (count > 0) {\n             orgCommunitys = BeanConvertUtil.covertBeanList(orgCommunityInnerServiceSMOImpl.queryOrgCommunitys(orgCommunityDto), ApiOrgCommunityDataVo.class);\n         } else {\n@@ -71,18 +70,14 @@ public class ListOrgNoCommunitysListener extends AbstractServiceApiListener {\n         }\n \n         ApiOrgCommunityVo apiOrgVo = new ApiOrgCommunityVo();\n-\n         apiOrgVo.setTotal(count);\n         apiOrgVo.setRecords((int) Math.ceil((double) count / (double) reqJson.getInteger(\"row\")));\n         apiOrgVo.setOrgCommunitys(orgCommunitys);\n \n         ResponseEntity<String> responseEntity = new ResponseEntity<String>(JSONObject.toJSONString(apiOrgVo), HttpStatus.OK);\n-\n         context.setResponseEntity(responseEntity);\n-\n     }\n \n-\n     public IOrgCommunityInnerServiceSMO getOrgCommunityInnerServiceSMOImpl() {\n         return orgCommunityInnerServiceSMOImpl;\n     }\n@@ -90,4 +85,4 @@ public class ListOrgNoCommunitysListener extends AbstractServiceApiListener {\n     public void setOrgCommunityInnerServiceSMOImpl(IOrgCommunityInnerServiceSMO orgCommunityInnerServiceSMOImpl) {\n         this.orgCommunityInnerServiceSMOImpl = orgCommunityInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 159).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "68",
                    "column": "158",
                    "severity": "error",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "68",
                    "column": "159",
                    "severity": "error",
                    "message": "'}' at column 159 should have line break before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "68",
                    "column": "159",
                    "severity": "error",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/181/ListOrgNoCommunitysListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/181/ListOrgNoCommunitysListener.java\nindex e45d51689a..fb2bf2b014 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/181/ListOrgNoCommunitysListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/181/ListOrgNoCommunitysListener.java\n@@ -65,29 +65,30 @@ public class ListOrgNoCommunitysListener extends AbstractServiceApiListener {\n         List<ApiOrgCommunityDataVo> orgCommunitys = null;\n \n         if (count > 0) {\n-            orgCommunitys = BeanConvertUtil.covertBeanList(orgCommunityInnerServiceSMOImpl.queryOrgCommunitys(orgCommunityDto), ApiOrgCommunityDataVo.class);\n-        } else {\n-            orgCommunitys = new ArrayList<>();\n-        }\n+            orgCommunitys = BeanConvertUtil .covertBeanList(orgCommunityInnerServiceSMOImpl.queryOrgCommunitys(orgCommunityDto), ApiOrgCommunityDataVo.class);}\n+            else {\n+                 orgCommunitys = new ArrayList<>();\n+             }\n \n-        ApiOrgCommunityVo apiOrgVo = new ApiOrgCommunityVo();\n+             ApiOrgCommunityVo apiOrgVo = new ApiOrgCommunityVo();\n \n-        apiOrgVo.setTotal(count);\n-        apiOrgVo.setRecords((int) Math.ceil((double) count / (double) reqJson.getInteger(\"row\")));\n-        apiOrgVo.setOrgCommunitys(orgCommunitys);\n+             apiOrgVo.setTotal(count);\n+             apiOrgVo.setRecords((int) Math.ceil((double) count / (double) reqJson.getInteger(\"row\")));\n+             apiOrgVo.setOrgCommunitys(orgCommunitys);\n \n-        ResponseEntity<String> responseEntity = new ResponseEntity<String>(JSONObject.toJSONString(apiOrgVo), HttpStatus.OK);\n+             ResponseEntity<String> responseEntity = new ResponseEntity<String>(JSONObject.toJSONString(apiOrgVo), HttpStatus.OK);\n \n-        context.setResponseEntity(responseEntity);\n+             context.setResponseEntity(responseEntity);\n \n-    }\n+         }\n \n \n-    public IOrgCommunityInnerServiceSMO getOrgCommunityInnerServiceSMOImpl() {\n-        return orgCommunityInnerServiceSMOImpl;\n-    }\n+         public IOrgCommunityInnerServiceSMO getOrgCommunityInnerServiceSMOImpl() {\n+             return orgCommunityInnerServiceSMOImpl;\n+         }\n \n-    public void setOrgCommunityInnerServiceSMOImpl(IOrgCommunityInnerServiceSMO orgCommunityInnerServiceSMOImpl) {\n-        this.orgCommunityInnerServiceSMOImpl = orgCommunityInnerServiceSMOImpl;\n-    }\n-}\n+         public void setOrgCommunityInnerServiceSMOImpl(IOrgCommunityInnerServiceSMO orgCommunityInnerServiceSMOImpl) {\n+             this.orgCommunityInnerServiceSMOImpl = orgCommunityInnerServiceSMOImpl;\n+         }\n+     }\n+     \n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "67",
                    "column": "24",
                    "severity": "error",
                    "message": "'{' at column 24 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "67",
                    "column": "39",
                    "severity": "error",
                    "message": "'=' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "67",
                    "column": "39",
                    "severity": "error",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/181/ListOrgNoCommunitysListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/181/ListOrgNoCommunitysListener.java\nindex e45d51689a..c5d5ed3f78 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/181/ListOrgNoCommunitysListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/181/ListOrgNoCommunitysListener.java\n@@ -64,30 +64,29 @@ public class ListOrgNoCommunitysListener extends AbstractServiceApiListener {\n \n         List<ApiOrgCommunityDataVo> orgCommunitys = null;\n \n-        if (count > 0) {\n-            orgCommunitys = BeanConvertUtil.covertBeanList(orgCommunityInnerServiceSMOImpl.queryOrgCommunitys(orgCommunityDto), ApiOrgCommunityDataVo.class);\n-        } else {\n-            orgCommunitys = new ArrayList<>();\n-        }\n+        if (count > 0) { orgCommunitys=BeanConvertUtil.covertBeanList(orgCommunityInnerServiceSMOImpl.queryOrgCommunitys(orgCommunityDto), ApiOrgCommunityDataVo.class);\n+    } else {\n+        orgCommunitys = new ArrayList<>();\n+    }\n \n-        ApiOrgCommunityVo apiOrgVo = new ApiOrgCommunityVo();\n+    ApiOrgCommunityVo apiOrgVo = new ApiOrgCommunityVo();\n \n-        apiOrgVo.setTotal(count);\n-        apiOrgVo.setRecords((int) Math.ceil((double) count / (double) reqJson.getInteger(\"row\")));\n-        apiOrgVo.setOrgCommunitys(orgCommunitys);\n+    apiOrgVo.setTotal(count);\n+    apiOrgVo.setRecords((int) Math.ceil((double) count / (double) reqJson.getInteger(\"row\")));\n+    apiOrgVo.setOrgCommunitys(orgCommunitys);\n \n-        ResponseEntity<String> responseEntity = new ResponseEntity<String>(JSONObject.toJSONString(apiOrgVo), HttpStatus.OK);\n+    ResponseEntity<String> responseEntity = new ResponseEntity<String>(JSONObject.toJSONString(apiOrgVo), HttpStatus.OK);\n \n-        context.setResponseEntity(responseEntity);\n+    context.setResponseEntity(responseEntity);\n \n-    }\n+}\n \n \n-    public IOrgCommunityInnerServiceSMO getOrgCommunityInnerServiceSMOImpl() {\n-        return orgCommunityInnerServiceSMOImpl;\n-    }\n+public IOrgCommunityInnerServiceSMO getOrgCommunityInnerServiceSMOImpl() {\n+    return orgCommunityInnerServiceSMOImpl;\n+}\n \n-    public void setOrgCommunityInnerServiceSMOImpl(IOrgCommunityInnerServiceSMO orgCommunityInnerServiceSMOImpl) {\n-        this.orgCommunityInnerServiceSMOImpl = orgCommunityInnerServiceSMOImpl;\n-    }\n+public void setOrgCommunityInnerServiceSMOImpl(IOrgCommunityInnerServiceSMO orgCommunityInnerServiceSMOImpl) {\n+    this.orgCommunityInnerServiceSMOImpl = orgCommunityInnerServiceSMOImpl;\n+}\n }\n",
            "diff_size": 18
        }
    ]
}