{
    "error_id": "63",
    "information": {
        "errors": [
            {
                "line": "38",
                "column": "57",
                "severity": "warning",
                "message": "'{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "  private DiscoveryFilter filter = null;\n\n  public AbstractDiscoveryClient(DiscoveryFilter filter){\n    this.filter = filter;\n  }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/63/AbstractDiscoveryClient.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler/63/AbstractDiscoveryClient.java\nindex f114439c75..1e5aef5d50 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/63/AbstractDiscoveryClient.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler/63/AbstractDiscoveryClient.java\n@@ -35,7 +35,7 @@ public abstract class AbstractDiscoveryClient {\n   private Map<String, DiscoveryTree> discoveryTrees = new ConcurrentHashMapEx<>();\n   private DiscoveryFilter filter = null;\n \n-  public AbstractDiscoveryClient(DiscoveryFilter filter){\n+  public AbstractDiscoveryClient(DiscoveryFilter filter) {\n     this.filter = filter;\n   }\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/63/AbstractDiscoveryClient.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/63/AbstractDiscoveryClient.java\nindex f114439c75..6f95048bb4 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/63/AbstractDiscoveryClient.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/63/AbstractDiscoveryClient.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.servicecomb.springboot.common;\n \n import java.util.ArrayList;\n@@ -35,7 +36,7 @@ public abstract class AbstractDiscoveryClient {\n   private Map<String, DiscoveryTree> discoveryTrees = new ConcurrentHashMapEx<>();\n   private DiscoveryFilter filter = null;\n \n-  public AbstractDiscoveryClient(DiscoveryFilter filter){\n+  public AbstractDiscoveryClient(DiscoveryFilter filter) {\n     this.filter = filter;\n   }\n \n@@ -44,7 +45,7 @@ public abstract class AbstractDiscoveryClient {\n     context.setInputParameters(serviceId);\n \n     DiscoveryTree discoveryTree = discoveryTrees.computeIfAbsent(serviceId, key -> {\n-      DiscoveryTree tree =  new DiscoveryTree();\n+      DiscoveryTree tree = new DiscoveryTree();\n       tree.addFilter(filter);\n       return tree;\n     });\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/63/AbstractDiscoveryClient.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/63/AbstractDiscoveryClient.java\nindex f114439c75..3b6b527ad5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/63/AbstractDiscoveryClient.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/63/AbstractDiscoveryClient.java\n@@ -35,7 +35,7 @@ public abstract class AbstractDiscoveryClient {\n   private Map<String, DiscoveryTree> discoveryTrees = new ConcurrentHashMapEx<>();\n   private DiscoveryFilter filter = null;\n \n-  public AbstractDiscoveryClient(DiscoveryFilter filter){\n+  public AbstractDiscoveryClient(DiscoveryFilter filter) {\n     this.filter = filter;\n   }\n \n@@ -44,7 +44,7 @@ public abstract class AbstractDiscoveryClient {\n     context.setInputParameters(serviceId);\n \n     DiscoveryTree discoveryTree = discoveryTrees.computeIfAbsent(serviceId, key -> {\n-      DiscoveryTree tree =  new DiscoveryTree();\n+      DiscoveryTree tree = new DiscoveryTree();\n       tree.addFilter(filter);\n       return tree;\n     });\n@@ -68,4 +68,4 @@ public abstract class AbstractDiscoveryClient {\n     }\n     return serviceIDList;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/63/AbstractDiscoveryClient.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/63/AbstractDiscoveryClient.java\nindex f114439c75..1e5aef5d50 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/63/AbstractDiscoveryClient.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/63/AbstractDiscoveryClient.java\n@@ -35,7 +35,7 @@ public abstract class AbstractDiscoveryClient {\n   private Map<String, DiscoveryTree> discoveryTrees = new ConcurrentHashMapEx<>();\n   private DiscoveryFilter filter = null;\n \n-  public AbstractDiscoveryClient(DiscoveryFilter filter){\n+  public AbstractDiscoveryClient(DiscoveryFilter filter) {\n     this.filter = filter;\n   }\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/63/AbstractDiscoveryClient.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_three_grams/63/AbstractDiscoveryClient.java\nindex f114439c75..1e5aef5d50 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/63/AbstractDiscoveryClient.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_three_grams/63/AbstractDiscoveryClient.java\n@@ -35,7 +35,7 @@ public abstract class AbstractDiscoveryClient {\n   private Map<String, DiscoveryTree> discoveryTrees = new ConcurrentHashMapEx<>();\n   private DiscoveryFilter filter = null;\n \n-  public AbstractDiscoveryClient(DiscoveryFilter filter){\n+  public AbstractDiscoveryClient(DiscoveryFilter filter) {\n     this.filter = filter;\n   }\n \n",
            "diff_size": 1
        }
    ]
}