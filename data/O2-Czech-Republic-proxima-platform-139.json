{
    "error_id": "139",
    "information": {
        "errors": [
            {
                "line": "52",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 93).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "                System.out.println(\n                    String.format(\n                        \"Writing entity %s to attribute %s with key %s and value of size %d\",\n                        data.getEntityDescriptor(),\n                        data.getAttributeDescriptor(),\n                        data.getKey(),",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/139/StdoutStorage.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler/139/StdoutStorage.java\nindex 41244227ee..7697ba8a94 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/139/StdoutStorage.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler/139/StdoutStorage.java\n@@ -49,7 +49,7 @@ public class StdoutStorage implements DataAccessorFactory {\n               public void write(StreamElement data, CommitCallback callback) {\n                 System.out.println(\n                     String.format(\n-                        \"Writing entity %s to attribute %s with key %s and value of size %d\",\n+                    \"Writing entity %s to attribute %s with key %s and value of size %d\",\n                         data.getEntityDescriptor(),\n                         data.getAttributeDescriptor(),\n                         data.getKey(),\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 93).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/139/StdoutStorage.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/139/StdoutStorage.java\nindex 41244227ee..bb8d6de15c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/139/StdoutStorage.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/139/StdoutStorage.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2020 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.direct.core;\n \n import cz.o2.proxima.annotations.Stable;\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 93).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be one of the following: 14, 16, 18.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/139/StdoutStorage.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/139/StdoutStorage.java\nindex 41244227ee..e96bc4833a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/139/StdoutStorage.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/139/StdoutStorage.java\n@@ -54,10 +54,10 @@ public class StdoutStorage implements DataAccessorFactory {\n                         data.getAttributeDescriptor(),\n                         data.getKey(),\n                         data.getValue().length));\n-                callback.commit(true, null);\n+callback.commit(true, null);\n               }\n             });\n       }\n     };\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "31",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 15, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 38, expected level should be one of the following: 19, 21, 23.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 38, expected level should be one of the following: 19, 21, 23.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "'object def rcurly' has incorrect indentation level 34, expected level should be one of the following: 15, 17, 19.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/139/StdoutStorage.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/139/StdoutStorage.java\nindex 41244227ee..c2b6fc329b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/139/StdoutStorage.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/139/StdoutStorage.java\n@@ -23,41 +23,39 @@ import java.util.Map;\n import java.util.Optional;\n \n /** Dummy storage printing data to stdout. */\n+\n+\n @Stable\n public class StdoutStorage implements DataAccessorFactory {\n \n-  private static final long serialVersionUID = 1L;\n+    private static final long serialVersionUID = 1L;\n \n-  @Override\n-  public Accept accepts(URI uri) {\n+    @Override\n+    public Accept accepts(URI uri) {\n     return uri.getScheme().equals(\"stdout\") ? Accept.ACCEPT : Accept.REJECT;\n-  }\n-\n-  @Override\n-  public DataAccessor createAccessor(\n-      DirectDataOperator op, EntityDescriptor entity, URI uri, Map<String, Object> cfg) {\n+    }\n \n+    @Override\n+    public DataAccessor createAccessor(DirectDataOperator op, EntityDescriptor entity, URI uri, Map<String, Object> cfg) {\n     return new DataAccessor() {\n \n-      private static final long serialVersionUID = 1L;\n-\n-      @Override\n-      public Optional<AttributeWriterBase> getWriter(Context context) {\n-        return Optional.of(\n-            new AbstractOnlineAttributeWriter(entity, uri) {\n-              @Override\n-              public void write(StreamElement data, CommitCallback callback) {\n-                System.out.println(\n-                    String.format(\n-                        \"Writing entity %s to attribute %s with key %s and value of size %d\",\n-                        data.getEntityDescriptor(),\n-                        data.getAttributeDescriptor(),\n-                        data.getKey(),\n-                        data.getValue().length));\n-                callback.commit(true, null);\n-              }\n-            });\n-      }\n+        private static final long serialVersionUID = 1L;\n+\n+        @Override\n+        public Optional<AttributeWriterBase> getWriter(Context context) {\n+               return Optional.of(new AbstractOnlineAttributeWriter(entity, uri) {\n+\n+                   @Override\n+                   public void write(StreamElement data, CommitCallback callback) {\n+                                      System.out.println(String.format(\"Writing entity %s to attribute %s with key %s and value of size %d\",\n+                                                                       data.getEntityDescriptor(),\n+                                                                       data.getAttributeDescriptor(),\n+                                                                       data.getKey(),\n+                                                                       data.getValue().length));\n+                                      callback.commit(true, null);\n+                   }\n+                                  });\n+        }\n     };\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 33
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/139/StdoutStorage.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_random/139/StdoutStorage.java\nindex 41244227ee..7697ba8a94 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/139/StdoutStorage.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_random/139/StdoutStorage.java\n@@ -49,7 +49,7 @@ public class StdoutStorage implements DataAccessorFactory {\n               public void write(StreamElement data, CommitCallback callback) {\n                 System.out.println(\n                     String.format(\n-                        \"Writing entity %s to attribute %s with key %s and value of size %d\",\n+                    \"Writing entity %s to attribute %s with key %s and value of size %d\",\n                         data.getEntityDescriptor(),\n                         data.getAttributeDescriptor(),\n                         data.getKey(),\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/139/StdoutStorage.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_three_grams/139/StdoutStorage.java\nindex 41244227ee..7697ba8a94 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/139/StdoutStorage.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_three_grams/139/StdoutStorage.java\n@@ -49,7 +49,7 @@ public class StdoutStorage implements DataAccessorFactory {\n               public void write(StreamElement data, CommitCallback callback) {\n                 System.out.println(\n                     String.format(\n-                        \"Writing entity %s to attribute %s with key %s and value of size %d\",\n+                    \"Writing entity %s to attribute %s with key %s and value of size %d\",\n                         data.getEntityDescriptor(),\n                         data.getAttributeDescriptor(),\n                         data.getKey(),\n",
            "diff_size": 1
        }
    ]
}