{
    "error_id": "241",
    "information": {
        "errors": [
            {
                "line": "23",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 105).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n/**\n * provides additional interfaces to make it able to be run in a thread pool concurrently within a query.\n */\npublic interface ManagedSeriesReader {\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "21",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/241/ManagedSeriesReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler/241/ManagedSeriesReader.java\nindex d6a62eeb1f..b10bd9f129 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/241/ManagedSeriesReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler/241/ManagedSeriesReader.java\n@@ -17,11 +17,10 @@\n  * under the License.\n  */\n \n-package org.apache.iotdb.db.query.reader;\n-\n-/**\n+package org.apache.iotdb.db.query.reader;/**\n  * provides additional interfaces to make it able to be run in a thread pool concurrently within a query.\n  */\n+\n public interface ManagedSeriesReader {\n \n   boolean isManagedByQueryManager();\n",
            "diff_size": 4
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "23",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "23",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/241/ManagedSeriesReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/naturalize/241/ManagedSeriesReader.java\nindex d6a62eeb1f..d4bc33f609 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/241/ManagedSeriesReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/naturalize/241/ManagedSeriesReader.java\n@@ -31,4 +31,4 @@ public interface ManagedSeriesReader {\n   boolean hasRemaining();\n \n   void setHasRemaining(boolean hasRemaining);\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "23",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/241/ManagedSeriesReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/codebuff/241/ManagedSeriesReader.java\nindex d6a62eeb1f..39b571a68e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/241/ManagedSeriesReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/codebuff/241/ManagedSeriesReader.java\n@@ -23,12 +23,8 @@ package org.apache.iotdb.db.query.reader;\n  * provides additional interfaces to make it able to be run in a thread pool concurrently within a query.\n  */\n public interface ManagedSeriesReader {\n-\n-  boolean isManagedByQueryManager();\n-\n-  void setManagedByQueryManager(boolean managedByQueryManager);\n-\n-  boolean hasRemaining();\n-\n-  void setHasRemaining(boolean hasRemaining);\n-}\n+boolean isManagedByQueryManager();\n+void setManagedByQueryManager(boolean managedByQueryManager);\n+boolean hasRemaining();\n+void setHasRemaining(boolean hasRemaining);\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "21",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/241/ManagedSeriesReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_random/241/ManagedSeriesReader.java\nindex d6a62eeb1f..b10bd9f129 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/241/ManagedSeriesReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_random/241/ManagedSeriesReader.java\n@@ -17,11 +17,10 @@\n  * under the License.\n  */\n \n-package org.apache.iotdb.db.query.reader;\n-\n-/**\n+package org.apache.iotdb.db.query.reader;/**\n  * provides additional interfaces to make it able to be run in a thread pool concurrently within a query.\n  */\n+\n public interface ManagedSeriesReader {\n \n   boolean isManagedByQueryManager();\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "21",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "23",
                    "severity": "warning",
                    "message": "'INTERFACE_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/241/ManagedSeriesReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_three_grams/241/ManagedSeriesReader.java\nindex d6a62eeb1f..1e23e096ae 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/241/ManagedSeriesReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_three_grams/241/ManagedSeriesReader.java\n@@ -17,9 +17,7 @@\n  * under the License.\n  */\n \n-package org.apache.iotdb.db.query.reader;\n-\n-/**\n+package org.apache.iotdb.db.query.reader;/**\n  * provides additional interfaces to make it able to be run in a thread pool concurrently within a query.\n  */\n public interface ManagedSeriesReader {\n",
            "diff_size": 3
        }
    ]
}