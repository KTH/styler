{
    "error_id": "122",
    "information": {
        "errors": [
            {
                "line": "19",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * under the License.\n */\npackage org.apache.iotdb.tsfile.read.query.timegenerator;\n\nimport java.io.IOException;\nimport java.util.ArrayList;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/122/TimeGeneratorImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler/122/TimeGeneratorImpl.java\nindex 496cff5626..c68b0f9b5f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/122/TimeGeneratorImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler/122/TimeGeneratorImpl.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.tsfile.read.query.timegenerator;\n \n import java.io.IOException;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/122/TimeGeneratorImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/intellij/122/TimeGeneratorImpl.java\nindex 496cff5626..ffed9ece17 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/122/TimeGeneratorImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/intellij/122/TimeGeneratorImpl.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.tsfile.read.query.timegenerator;\n \n import java.io.IOException;\n@@ -49,12 +50,12 @@ public class TimeGeneratorImpl implements TimeGenerator {\n   /**\n    * construct function for TimeGeneratorImpl.\n    *\n-   * @param iexpression -construct param\n-   * @param chunkLoader -construct param\n+   * @param iexpression     -construct param\n+   * @param chunkLoader     -construct param\n    * @param metadataQuerier -construct param\n    */\n   public TimeGeneratorImpl(IExpression iexpression, IChunkLoader chunkLoader,\n-      IMetadataQuerier metadataQuerier)\n+                           IMetadataQuerier metadataQuerier)\n       throws IOException {\n     this.chunkLoader = chunkLoader;\n     this.metadataQuerier = metadataQuerier;\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "119",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "119",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "120",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/122/TimeGeneratorImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/naturalize/122/TimeGeneratorImpl.java\nindex 496cff5626..9ad392a03d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/122/TimeGeneratorImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/naturalize/122/TimeGeneratorImpl.java\n@@ -53,8 +53,7 @@ public class TimeGeneratorImpl implements TimeGenerator {\n    * @param chunkLoader -construct param\n    * @param metadataQuerier -construct param\n    */\n-  public TimeGeneratorImpl(IExpression iexpression, IChunkLoader chunkLoader,\n-      IMetadataQuerier metadataQuerier)\n+  public TimeGeneratorImpl(IExpression iexpression, IChunkLoader chunkLoader, IMetadataQuerier metadataQuerier)\n       throws IOException {\n     this.chunkLoader = chunkLoader;\n     this.metadataQuerier = metadataQuerier;\n@@ -75,8 +74,7 @@ public class TimeGeneratorImpl implements TimeGenerator {\n \n   @Override\n   public Object getValue(Path path, long time) {\n-\n-    for (LeafNode leafNode : leafCache.get(path)) {\n+  for (LeafNode leafNode : leafCache.get(path)) {\n       if (!leafNode.currentTimeIs(time)) {\n         continue;\n       }\n@@ -90,13 +88,11 @@ public class TimeGeneratorImpl implements TimeGenerator {\n    * construct the tree that generate timestamp.\n    */\n   private Node construct(IExpression expression) throws IOException {\n-\n-    if (expression.getType() == ExpressionType.SERIES) {\n+  if (expression.getType() == ExpressionType.SERIES) {\n       SingleSeriesExpression singleSeriesExp = (SingleSeriesExpression) expression;\n       FileSeriesReader seriesReader = generateSeriesReader(singleSeriesExp);\n       Path path = singleSeriesExp.getSeriesPath();\n-\n-      if (!leafCache.containsKey(path)) {\n+if (!leafCache.containsKey(path)) {\n         leafCache.put(path, new ArrayList<>());\n       }\n \n@@ -105,13 +101,11 @@ public class TimeGeneratorImpl implements TimeGenerator {\n       leafCache.get(path).add(leafNode);\n \n       return leafNode;\n-\n-    } else if (expression.getType() == ExpressionType.OR) {\n+  } else if (expression.getType() == ExpressionType.OR) {\n       Node leftChild = construct(((IBinaryExpression) expression).getLeft());\n       Node rightChild = construct(((IBinaryExpression) expression).getRight());\n       return new OrNode(leftChild, rightChild);\n-\n-    } else if (expression.getType() == ExpressionType.AND) {\n+  } else if (expression.getType() == ExpressionType.AND) {\n       Node leftChild = construct(((IBinaryExpression) expression).getLeft());\n       Node rightChild = construct(((IBinaryExpression) expression).getRight());\n       return new AndNode(leftChild, rightChild);\n@@ -122,9 +116,7 @@ public class TimeGeneratorImpl implements TimeGenerator {\n \n   private FileSeriesReader generateSeriesReader(SingleSeriesExpression singleSeriesExp)\n       throws IOException {\n-    List<ChunkMetaData> chunkMetaDataList = metadataQuerier\n-        .getChunkMetaDataList(singleSeriesExp.getSeriesPath());\n-    return new FileSeriesReaderWithFilter(chunkLoader, chunkMetaDataList,\n-        singleSeriesExp.getFilter());\n+  List<ChunkMetaData> chunkMetaDataList = metadataQuerier.getChunkMetaDataList(singleSeriesExp.getSeriesPath());\n+return new FileSeriesReaderWithFilter(chunkLoader, chunkMetaDataList, singleSeriesExp.getFilter());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "20",
                    "severity": "warning",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "column": "32",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "52",
                    "column": "32",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 62.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "column": "30",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 56, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 114).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "69",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 58, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "column": "5",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 64, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 53, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 64, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 64, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 89.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "column": "5",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "90",
                    "column": "28",
                    "severity": "warning",
                    "message": "WhitespaceAround: '==' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 57, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "column": "92",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "98",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 6, expected is 8, indentation should be the same level as line 99.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "99",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "100",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "101",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "column": "1",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "103",
                    "column": "24",
                    "severity": "warning",
                    "message": "WhitespaceAround: '==' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "104",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 74, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 145).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "105",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 74, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 147).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "106",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 74, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "106",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "107",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "column": "25",
                    "severity": "warning",
                    "message": "WhitespaceAround: '==' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "109",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "110",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "111",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "112",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "113",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "114",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "117",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "117",
                    "column": "10",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "117",
                    "column": "10",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "118",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "119",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/122/TimeGeneratorImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/codebuff/122/TimeGeneratorImpl.java\nindex 496cff5626..06c035d4eb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/122/TimeGeneratorImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/codebuff/122/TimeGeneratorImpl.java\n@@ -17,7 +17,6 @@\n  * under the License.\n  */\n package org.apache.iotdb.tsfile.read.query.timegenerator;\n-\n import java.io.IOException;\n import java.util.ArrayList;\n import java.util.HashMap;\n@@ -40,11 +39,17 @@ import org.apache.iotdb.tsfile.read.reader.series.FileSeriesReaderWithFilter;\n \n public class TimeGeneratorImpl implements TimeGenerator {\n \n-  private IChunkLoader chunkLoader;\n-  private IMetadataQuerier metadataQuerier;\n-  private Node operatorNode;\n \n-  private HashMap<Path, List<LeafNode>> leafCache;\n+    private IChunkLoader chunkLoader;\n+\n+\n+    private IMetadataQuerier metadataQuerier;\n+\n+\n+    private Node operatorNode;\n+\n+\n+    private HashMap<Path, List < LeafNode>> leafCache;\n \n   /**\n    * construct function for TimeGeneratorImpl.\n@@ -53,78 +58,64 @@ public class TimeGeneratorImpl implements TimeGenerator {\n    * @param chunkLoader -construct param\n    * @param metadataQuerier -construct param\n    */\n-  public TimeGeneratorImpl(IExpression iexpression, IChunkLoader chunkLoader,\n-      IMetadataQuerier metadataQuerier)\n-      throws IOException {\n-    this.chunkLoader = chunkLoader;\n-    this.metadataQuerier = metadataQuerier;\n-    this.leafCache = new HashMap<>();\n-\n-    operatorNode = construct(iexpression);\n-  }\n-\n-  @Override\n-  public boolean hasNext() throws IOException {\n+\n+    public TimeGeneratorImpl(IExpression iexpression, IChunkLoader chunkLoader, IMetadataQuerier metadataQuerier) throws IOException {\n+this.chunkLoader = chunkLoader;\n+this.metadataQuerier = metadataQuerier;\n+this.leafCache = new HashMap <>();\n+operatorNode = construct(iexpression);\n+                                                        } @ Override public boolean hasNext() throws IOException {\n     return operatorNode.hasNext();\n-  }\n+                                                          }\n \n-  @Override\n-  public long next() throws IOException {\n+    @ Override public long next() throws IOException {\n     return operatorNode.next();\n-  }\n-\n-  @Override\n-  public Object getValue(Path path, long time) {\n-\n-    for (LeafNode leafNode : leafCache.get(path)) {\n-      if (!leafNode.currentTimeIs(time)) {\n-        continue;\n-      }\n-      return leafNode.currentValue(time);\n     }\n \n+    @ Override public Object getValue(Path path, long time) {\n+    for(LeafNode leafNode : leafCache.get(path)) {\n+                                                                if (!leafNode.currentTimeIs(time)) {\n+                                                     continue;\n+                                                                }\n+                                                                return leafNode.currentValue(time);\n+    }\n     return null;\n-  }\n+    }\n \n   /**\n    * construct the tree that generate timestamp.\n    */\n-  private Node construct(IExpression expression) throws IOException {\n-\n-    if (expression.getType() == ExpressionType.SERIES) {\n-      SingleSeriesExpression singleSeriesExp = (SingleSeriesExpression) expression;\n-      FileSeriesReader seriesReader = generateSeriesReader(singleSeriesExp);\n-      Path path = singleSeriesExp.getSeriesPath();\n \n-      if (!leafCache.containsKey(path)) {\n-        leafCache.put(path, new ArrayList<>());\n-      }\n+    private Node construct(IExpression expression) throws IOException {\n+    if(expression.getType()== ExpressionType.SERIES) {\n+        SingleSeriesExpression singleSeriesExp = (SingleSeriesExpression) expression;\n+        FileSeriesReader seriesReader = generateSeriesReader(singleSeriesExp);\n+        Path path = singleSeriesExp.getSeriesPath();\n+        if (!leafCache.containsKey(path)) {\n+                                                         leafCache.put(path, new ArrayList <>());\n+        }\n \n       // put the current reader to valueCache\n-      LeafNode leafNode = new LeafNode(seriesReader);\n-      leafCache.get(path).add(leafNode);\n-\n-      return leafNode;\n-\n-    } else if (expression.getType() == ExpressionType.OR) {\n-      Node leftChild = construct(((IBinaryExpression) expression).getLeft());\n-      Node rightChild = construct(((IBinaryExpression) expression).getRight());\n-      return new OrNode(leftChild, rightChild);\n+        LeafNode leafNode = new LeafNode(seriesReader);\n+        leafCache.get(path).add(leafNode);\n+        return leafNode;\n+    } else\n+if(expression.getType()== ExpressionType.OR) {\n+                                                                          Node leftChild = construct(((IBinaryExpression) expression).getLeft());\n+                                                                          Node rightChild = construct(((IBinaryExpression) expression).getRight());\n+                                                                          return new OrNode(leftChild, rightChild);\n+} else\n+if (expression.getType()== ExpressionType.AND) {\n+        Node leftChild = construct(((IBinaryExpression) expression).getLeft());\n+        Node rightChild = construct(((IBinaryExpression) expression).getRight());\n+        return new AndNode(leftChild, rightChild);\n+}\n+    throw new UnSupportedDataTypeException(\"Unsupported ExpressionType when construct OperatorNode: \" + expression.getType());\n+    }\n \n-    } else if (expression.getType() == ExpressionType.AND) {\n-      Node leftChild = construct(((IBinaryExpression) expression).getLeft());\n-      Node rightChild = construct(((IBinaryExpression) expression).getRight());\n-      return new AndNode(leftChild, rightChild);\n+    private FileSeriesReader generateSeriesReader(SingleSeriesExpression singleSeriesExp) throws IOException {\n+    List < ChunkMetaData> chunkMetaDataList = metadataQuerier.getChunkMetaDataList(singleSeriesExp.getSeriesPath());\n+    return new FileSeriesReaderWithFilter(chunkLoader, chunkMetaDataList, singleSeriesExp.getFilter());\n     }\n-    throw new UnSupportedDataTypeException(\n-        \"Unsupported ExpressionType when construct OperatorNode: \" + expression.getType());\n-  }\n-\n-  private FileSeriesReader generateSeriesReader(SingleSeriesExpression singleSeriesExp)\n-      throws IOException {\n-    List<ChunkMetaData> chunkMetaDataList = metadataQuerier\n-        .getChunkMetaDataList(singleSeriesExp.getSeriesPath());\n-    return new FileSeriesReaderWithFilter(chunkLoader, chunkMetaDataList,\n-        singleSeriesExp.getFilter());\n-  }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 93
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "package statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "20",
                    "severity": "warning",
                    "message": "'read' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/122/TimeGeneratorImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_random/122/TimeGeneratorImpl.java\nindex 496cff5626..94f17297d4 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/122/TimeGeneratorImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_random/122/TimeGeneratorImpl.java\n@@ -16,7 +16,8 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.iotdb.tsfile.read.query.timegenerator;\n+package org.apache.iotdb.tsfile.\n+read.query.timegenerator;\n \n import java.io.IOException;\n import java.util.ArrayList;\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/122/TimeGeneratorImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_three_grams/122/TimeGeneratorImpl.java\nindex 496cff5626..c68b0f9b5f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/122/TimeGeneratorImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_three_grams/122/TimeGeneratorImpl.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.tsfile.read.query.timegenerator;\n \n import java.io.IOException;\n",
            "diff_size": 1
        }
    ]
}