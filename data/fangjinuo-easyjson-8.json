{
    "error_id": "8",
    "information": {
        "errors": [
            {
                "line": "39",
                "column": "120",
                "severity": "warning",
                "message": "')' is preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
            }
        ]
    },
    "source_code": "public interface FieldSerializer {\n\n    boolean serializeField(JsonSerializerInternal serializer,  Object parent, FieldAccess fieldAccess, CharBuf builder );\n\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/8/FieldSerializer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/styler/8/FieldSerializer.java\nindex 15324e1800..590099acf2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/8/FieldSerializer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/styler/8/FieldSerializer.java\n@@ -36,6 +36,6 @@ import io.advantageous.boon.primitive.CharBuf;\n  */\n public interface FieldSerializer {\n \n-    boolean serializeField(JsonSerializerInternal serializer,  Object parent, FieldAccess fieldAccess, CharBuf builder );\n+    boolean serializeField(JsonSerializerInternal serializer,  Object parent, FieldAccess fieldAccess, CharBuf builder);\n \n }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/8/FieldSerializer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/intellij/8/FieldSerializer.java\nindex 15324e1800..7fbcf47caa 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/8/FieldSerializer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/intellij/8/FieldSerializer.java\n@@ -36,6 +36,6 @@ import io.advantageous.boon.primitive.CharBuf;\n  */\n public interface FieldSerializer {\n \n-    boolean serializeField(JsonSerializerInternal serializer,  Object parent, FieldAccess fieldAccess, CharBuf builder );\n+    boolean serializeField(JsonSerializerInternal serializer, Object parent, FieldAccess fieldAccess, CharBuf builder);\n \n }\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/8/FieldSerializer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/naturalize/8/FieldSerializer.java\nindex 15324e1800..a00fb9e1bb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/8/FieldSerializer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/naturalize/8/FieldSerializer.java\n@@ -35,7 +35,6 @@ import io.advantageous.boon.primitive.CharBuf;\n  * Created by rick on 1/1/14.\n  */\n public interface FieldSerializer {\n+    boolean serializeField(JsonSerializerInternal serializer, Object parent, FieldAccess fieldAccess, CharBuf builder);\n \n-    boolean serializeField(JsonSerializerInternal serializer,  Object parent, FieldAccess fieldAccess, CharBuf builder );\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/8/FieldSerializer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/codebuff/8/FieldSerializer.java\nindex 15324e1800..59790c8f21 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/8/FieldSerializer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/codebuff/8/FieldSerializer.java\n@@ -4,7 +4,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *  \t\thttp://www.apache.org/licenses/LICENSE-2.0\n+ *          http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -34,8 +34,9 @@ import io.advantageous.boon.primitive.CharBuf;\n /**\n  * Created by rick on 1/1/14.\n  */\n-public interface FieldSerializer {\n-\n-    boolean serializeField(JsonSerializerInternal serializer,  Object parent, FieldAccess fieldAccess, CharBuf builder );\n \n-}\n+public interface FieldSerializer {\n+    boolean serializeField(JsonSerializerInternal serializer,\n+                           Object parent,\n+                           FieldAccess fieldAccess, CharBuf builder);\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/8/FieldSerializer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/styler_random/8/FieldSerializer.java\nindex 15324e1800..590099acf2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/8/FieldSerializer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/styler_random/8/FieldSerializer.java\n@@ -36,6 +36,6 @@ import io.advantageous.boon.primitive.CharBuf;\n  */\n public interface FieldSerializer {\n \n-    boolean serializeField(JsonSerializerInternal serializer,  Object parent, FieldAccess fieldAccess, CharBuf builder );\n+    boolean serializeField(JsonSerializerInternal serializer,  Object parent, FieldAccess fieldAccess, CharBuf builder);\n \n }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/8/FieldSerializer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/styler_three_grams/8/FieldSerializer.java\nindex 15324e1800..590099acf2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/8/FieldSerializer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/styler_three_grams/8/FieldSerializer.java\n@@ -36,6 +36,6 @@ import io.advantageous.boon.primitive.CharBuf;\n  */\n public interface FieldSerializer {\n \n-    boolean serializeField(JsonSerializerInternal serializer,  Object parent, FieldAccess fieldAccess, CharBuf builder );\n+    boolean serializeField(JsonSerializerInternal serializer,  Object parent, FieldAccess fieldAccess, CharBuf builder);\n \n }\n",
            "diff_size": 1
        }
    ]
}