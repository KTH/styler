{
    "error_id": "240",
    "information": {
        "errors": [
            {
                "line": "42",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 133).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  public void testV4URL() {\n\n    // this test case depends on class loading and java property may initialized after class loading, so we make to run in all cases.\n    if (Const.REGISTRY_API.CURRENT_VERSION.equals(Const.REGISTRY_API.VERSION_V3)) {\n      Assert.assertEquals(\"/registry/v3/microservices\", Const.REGISTRY_API.MICROSERVICE_OPERATION_ALL);\n      Assert.assertEquals(\"/registry/v3/microservices/%s\", Const.REGISTRY_API.MICROSERVICE_OPERATION_ONE);",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/240/TestConst.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler/240/TestConst.java\nindex 443da848ca..d67c86b320 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/240/TestConst.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler/240/TestConst.java\n@@ -38,8 +38,7 @@ public class TestConst {\n \n   @Test\n   public void testV4URL() {\n-\n-    // this test case depends on class loading and java property may initialized after class loading, so we make to run in all cases.\n+  // this test case depends on class loading and java property may initialized after class loading, so we make to run in all cases.\n     if (Const.REGISTRY_API.CURRENT_VERSION.equals(Const.REGISTRY_API.VERSION_V3)) {\n       Assert.assertEquals(\"/registry/v3/microservices\", Const.REGISTRY_API.MICROSERVICE_OPERATION_ALL);\n       Assert.assertEquals(\"/registry/v3/microservices/%s\", Const.REGISTRY_API.MICROSERVICE_OPERATION_ONE);\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/240/TestConst.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/240/TestConst.java\nindex 443da848ca..1fea0d0f21 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/240/TestConst.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/240/TestConst.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.servicecomb.serviceregistry.api;\n \n import org.apache.servicecomb.config.ConfigUtil;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/240/TestConst.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/240/TestConst.java\nindex 443da848ca..36b4c29f36 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/240/TestConst.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/240/TestConst.java\n@@ -38,8 +38,7 @@ public class TestConst {\n \n   @Test\n   public void testV4URL() {\n-\n-    // this test case depends on class loading and java property may initialized after class loading, so we make to run in all cases.\n+  // this test case depends on class loading and java property may initialized after class loading, so we make to run in all cases.\n     if (Const.REGISTRY_API.CURRENT_VERSION.equals(Const.REGISTRY_API.VERSION_V3)) {\n       Assert.assertEquals(\"/registry/v3/microservices\", Const.REGISTRY_API.MICROSERVICE_OPERATION_ALL);\n       Assert.assertEquals(\"/registry/v3/microservices/%s\", Const.REGISTRY_API.MICROSERVICE_OPERATION_ONE);\n@@ -78,4 +77,4 @@ public class TestConst {\n           Const.REGISTRY_API.MICROSERVICE_INSTANCE_PROPERTIES);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/240/TestConst.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/240/TestConst.java\nindex 443da848ca..d67c86b320 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/240/TestConst.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/240/TestConst.java\n@@ -38,8 +38,7 @@ public class TestConst {\n \n   @Test\n   public void testV4URL() {\n-\n-    // this test case depends on class loading and java property may initialized after class loading, so we make to run in all cases.\n+  // this test case depends on class loading and java property may initialized after class loading, so we make to run in all cases.\n     if (Const.REGISTRY_API.CURRENT_VERSION.equals(Const.REGISTRY_API.VERSION_V3)) {\n       Assert.assertEquals(\"/registry/v3/microservices\", Const.REGISTRY_API.MICROSERVICE_OPERATION_ALL);\n       Assert.assertEquals(\"/registry/v3/microservices/%s\", Const.REGISTRY_API.MICROSERVICE_OPERATION_ONE);\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/240/TestConst.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_three_grams/240/TestConst.java\nindex 443da848ca..d67c86b320 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/240/TestConst.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_three_grams/240/TestConst.java\n@@ -38,8 +38,7 @@ public class TestConst {\n \n   @Test\n   public void testV4URL() {\n-\n-    // this test case depends on class loading and java property may initialized after class loading, so we make to run in all cases.\n+  // this test case depends on class loading and java property may initialized after class loading, so we make to run in all cases.\n     if (Const.REGISTRY_API.CURRENT_VERSION.equals(Const.REGISTRY_API.VERSION_V3)) {\n       Assert.assertEquals(\"/registry/v3/microservices\", Const.REGISTRY_API.MICROSERVICE_OPERATION_ALL);\n       Assert.assertEquals(\"/registry/v3/microservices/%s\", Const.REGISTRY_API.MICROSERVICE_OPERATION_ONE);\n",
            "diff_size": 2
        }
    ]
}