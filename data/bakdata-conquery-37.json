{
    "error_id": "37",
    "information": {
        "errors": [
            {
                "line": "20",
                "severity": "warning",
                "message": "trailing whitespaces",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
            }
        ]
    },
    "source_code": "\t\t\t\tsetLabel(patch.getLabel());\n\t\t\t}\n\t\t};\t\t\n\t}\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/37/Labelable.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/37/Labelable.java\nindex 5ac694aad2..16b2778556 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/37/Labelable.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/37/Labelable.java\n@@ -11,12 +11,12 @@ import com.bakdata.conquery.apiv1.MetaDataPatch;\n public interface Labelable {\n \tString getLabel();\n \tvoid setLabel(String label);\n-\t\n+\n \tdefault Consumer<Labelable> labeler() {\n \t\treturn (patch) -> {\n \t\t\tif (patch != null && patch.getLabel() != null) {\n \t\t\t\tsetLabel(patch.getLabel());\n \t\t\t}\n-\t\t};\t\t\n+\t\t};\n \t}\n }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "12",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "14",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "16",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "17",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "18",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "19",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/37/Labelable.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/37/Labelable.java\nindex 5ac694aad2..894597d494 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/37/Labelable.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/37/Labelable.java\n@@ -9,14 +9,15 @@ import com.bakdata.conquery.apiv1.MetaDataPatch;\n  * Lets the implementing class set the label if the label in the patch is not {@code null}.\n  */\n public interface Labelable {\n-\tString getLabel();\n-\tvoid setLabel(String label);\n-\t\n-\tdefault Consumer<Labelable> labeler() {\n-\t\treturn (patch) -> {\n-\t\t\tif (patch != null && patch.getLabel() != null) {\n-\t\t\t\tsetLabel(patch.getLabel());\n-\t\t\t}\n-\t\t};\t\t\n-\t}\n+    String getLabel();\n+\n+    void setLabel(String label);\n+\n+    default Consumer<Labelable> labeler() {\n+        return (patch) -> {\n+            if (patch != null && patch.getLabel() != null) {\n+                setLabel(patch.getLabel());\n+            }\n+        };\n+    }\n }\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/37/Labelable.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/37/Labelable.java\nindex 5ac694aad2..0bc88ef918 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/37/Labelable.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/37/Labelable.java\n@@ -17,6 +17,7 @@ public interface Labelable {\n \t\t\tif (patch != null && patch.getLabel() != null) {\n \t\t\t\tsetLabel(patch.getLabel());\n \t\t\t}\n-\t\t};\t\t\n+\t\t};\n+\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "13",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "14",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "16",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "17",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "18",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "19",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/37/Labelable.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/37/Labelable.java\nindex 5ac694aad2..9895349ca5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/37/Labelable.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/37/Labelable.java\n@@ -1,22 +1,23 @@\n package com.bakdata.conquery.models.execution;\n \n import java.util.function.Consumer;\n-\n import com.bakdata.conquery.apiv1.MetaDataPatch;\n \n /**\n  * Interface for classes that are able to be patched with an {@link MetaDataPatch}.\n  * Lets the implementing class set the label if the label in the patch is not {@code null}.\n  */\n+\n public interface Labelable {\n-\tString getLabel();\n-\tvoid setLabel(String label);\n-\t\n-\tdefault Consumer<Labelable> labeler() {\n-\t\treturn (patch) -> {\n-\t\t\tif (patch != null && patch.getLabel() != null) {\n-\t\t\t\tsetLabel(patch.getLabel());\n-\t\t\t}\n-\t\t};\t\t\n-\t}\n-}\n+\n+    String getLabel();\n+    void setLabel(String label);\n+\n+    default Consumer<Labelable> labeler() {\n+        return (patch) -> {\n+            if(patch != null && patch.getLabel() != null) {\n+                setLabel(patch.getLabel());\n+            }\n+        };\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/37/Labelable.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/37/Labelable.java\nindex 5ac694aad2..16b2778556 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/37/Labelable.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/37/Labelable.java\n@@ -11,12 +11,12 @@ import com.bakdata.conquery.apiv1.MetaDataPatch;\n public interface Labelable {\n \tString getLabel();\n \tvoid setLabel(String label);\n-\t\n+\n \tdefault Consumer<Labelable> labeler() {\n \t\treturn (patch) -> {\n \t\t\tif (patch != null && patch.getLabel() != null) {\n \t\t\t\tsetLabel(patch.getLabel());\n \t\t\t}\n-\t\t};\t\t\n+\t\t};\n \t}\n }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/37/Labelable.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/37/Labelable.java\nindex 5ac694aad2..16b2778556 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/37/Labelable.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/37/Labelable.java\n@@ -11,12 +11,12 @@ import com.bakdata.conquery.apiv1.MetaDataPatch;\n public interface Labelable {\n \tString getLabel();\n \tvoid setLabel(String label);\n-\t\n+\n \tdefault Consumer<Labelable> labeler() {\n \t\treturn (patch) -> {\n \t\t\tif (patch != null && patch.getLabel() != null) {\n \t\t\t\tsetLabel(patch.getLabel());\n \t\t\t}\n-\t\t};\t\t\n+\t\t};\n \t}\n }\n",
            "diff_size": 2
        }
    ]
}