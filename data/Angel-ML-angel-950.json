{
    "error_id": "950",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/950/CooLongMatrix.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/950/CooLongMatrix.java\nindex 05df3d81b2..a5153ff94e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/950/CooLongMatrix.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/950/CooLongMatrix.java\n@@ -14,287 +14,288 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.ml.math2.matrix;\n \n import com.tencent.angel.ml.math2.vector.Vector;\n \n public abstract class CooLongMatrix extends Matrix {\n \n-  protected long [] rowIndices;\n-  protected long [] colIndices;\n-  protected int [] shape;\n-\n-  public CooLongMatrix() {}\n-\n-  public abstract Vector getRow(int idx);\n-\n-  public abstract Vector getCol(int idx);\n-\n-  public long[] getRowIndices() {\n-    return rowIndices;\n-  }\n-\n-  public long[] getColIndices() {\n-    return colIndices;\n-  }\n-\n-  public int[] getShape() {\n-    return shape;\n-  }\n-\n-  @Override\n-  public int getNumRows() {\n-    return shape[0];\n-  }\n-\n-  public int getNumCols() {\n-    return shape[1];\n-  }\n-\n-  public void reshape(int rows, int cols) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Vector diag() {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Vector dot(Vector other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Vector transDot(Vector other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix iadd(int rowId, Vector other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix add(int rowId, Vector other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix isub(int rowId, Vector other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix sub(int rowId, Vector other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix imul(int rowId, Vector other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix mul(int rowId, Vector other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix idiv(int rowId, Vector other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix div(int rowId, Vector other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix iaxpy(int rowId, Vector other, double aplha) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix axpy(int rowId, Vector other, double aplha) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix iadd(Vector other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix add(Vector other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix isub(Vector other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix sub(Vector other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix imul(Vector other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix mul(Vector other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix idiv(Vector other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix div(Vector other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix iaxpy(Vector other, double aplha) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix axpy(Vector other, double aplha) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix iadd(Matrix other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix add(Matrix other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix isub(Matrix other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix sub(Matrix other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix imul(Matrix other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix mul(Matrix other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix idiv(Matrix other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix div(Matrix other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix iaxpy(Matrix other, double aplha) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix axpy(Matrix other, double aplha) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix iadd(double x) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix add(double x) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix isub(double x) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix sub(double x) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix imul(double x) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix mul(double x) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix idiv(double x) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix div(double x) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-\n-\n-  @Override\n-  public Vector min(int axis) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Vector max(int axis) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Vector sum(int axis) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Vector average(int axis) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Vector std(int axis) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Vector norm(int axis) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix copy() {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    protected long[] rowIndices;\n+    protected long[] colIndices;\n+    protected int[] shape;\n+\n+    public CooLongMatrix() {\n+    }\n+\n+    public abstract Vector getRow(int idx);\n+\n+    public abstract Vector getCol(int idx);\n+\n+    public long[] getRowIndices() {\n+        return rowIndices;\n+    }\n+\n+    public long[] getColIndices() {\n+        return colIndices;\n+    }\n+\n+    public int[] getShape() {\n+        return shape;\n+    }\n+\n+    @Override\n+    public int getNumRows() {\n+        return shape[0];\n+    }\n+\n+    public int getNumCols() {\n+        return shape[1];\n+    }\n+\n+    public void reshape(int rows, int cols) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Vector diag() {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Vector dot(Vector other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Vector transDot(Vector other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix iadd(int rowId, Vector other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix add(int rowId, Vector other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix isub(int rowId, Vector other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix sub(int rowId, Vector other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix imul(int rowId, Vector other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix mul(int rowId, Vector other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix idiv(int rowId, Vector other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix div(int rowId, Vector other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix iaxpy(int rowId, Vector other, double aplha) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix axpy(int rowId, Vector other, double aplha) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix iadd(Vector other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix add(Vector other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix isub(Vector other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix sub(Vector other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix imul(Vector other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix mul(Vector other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix idiv(Vector other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix div(Vector other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix iaxpy(Vector other, double aplha) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix axpy(Vector other, double aplha) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix iadd(Matrix other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix add(Matrix other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix isub(Matrix other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix sub(Matrix other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix imul(Matrix other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix mul(Matrix other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix idiv(Matrix other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix div(Matrix other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix iaxpy(Matrix other, double aplha) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix axpy(Matrix other, double aplha) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix iadd(double x) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix add(double x) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix isub(double x) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix sub(double x) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix imul(double x) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix mul(double x) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix idiv(double x) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix div(double x) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+\n+    @Override\n+    public Vector min(int axis) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Vector max(int axis) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Vector sum(int axis) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Vector average(int axis) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Vector std(int axis) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Vector norm(int axis) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix copy() {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n }\n \n",
            "diff_size": 277
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/950/CooLongMatrix.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/950/CooLongMatrix.java\nindex 05df3d81b2..21b4e7b926 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/950/CooLongMatrix.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/950/CooLongMatrix.java\n@@ -20,9 +20,9 @@ import com.tencent.angel.ml.math2.vector.Vector;\n \n public abstract class CooLongMatrix extends Matrix {\n \n-  protected long [] rowIndices;\n-  protected long [] colIndices;\n-  protected int [] shape;\n+  protected long[] rowIndices;\n+  protected long[] colIndices;\n+  protected int[] shape;\n \n   public CooLongMatrix() {}\n \n@@ -260,9 +260,7 @@ public abstract class CooLongMatrix extends Matrix {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n   }\n \n-\n-\n-  @Override\n+@Override\n   public Vector min(int axis) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n   }\n@@ -296,5 +294,4 @@ public abstract class CooLongMatrix extends Matrix {\n   public Matrix copy() {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/950/CooLongMatrix.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/950/CooLongMatrix.java\nindex 05df3d81b2..b3e7971037 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/950/CooLongMatrix.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/950/CooLongMatrix.java\n@@ -20,281 +20,279 @@ import com.tencent.angel.ml.math2.vector.Vector;\n \n public abstract class CooLongMatrix extends Matrix {\n \n-  protected long [] rowIndices;\n-  protected long [] colIndices;\n-  protected int [] shape;\n+    protected long[] rowIndices;\n+    protected long[] colIndices;\n+    protected int[] shape;\n \n-  public CooLongMatrix() {}\n+    public CooLongMatrix() {}\n \n-  public abstract Vector getRow(int idx);\n+    public abstract Vector getRow(int idx);\n \n-  public abstract Vector getCol(int idx);\n+    public abstract Vector getCol(int idx);\n \n-  public long[] getRowIndices() {\n+    public long[] getRowIndices() {\n     return rowIndices;\n-  }\n+    }\n \n-  public long[] getColIndices() {\n+    public long[] getColIndices() {\n     return colIndices;\n-  }\n+    }\n \n-  public int[] getShape() {\n+    public int[] getShape() {\n     return shape;\n-  }\n+    }\n \n-  @Override\n-  public int getNumRows() {\n+    @Override\n+    public int getNumRows() {\n     return shape[0];\n-  }\n+    }\n \n-  public int getNumCols() {\n+    public int getNumCols() {\n     return shape[1];\n-  }\n+    }\n \n-  public void reshape(int rows, int cols) {\n+    public void reshape(int rows, int cols) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Vector diag() {\n+    @Override\n+    public Vector diag() {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Vector dot(Vector other) {\n+    @Override\n+    public Vector dot(Vector other) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Vector transDot(Vector other) {\n+    @Override\n+    public Vector transDot(Vector other) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix iadd(int rowId, Vector other) {\n+    @Override\n+    public Matrix iadd(int rowId, Vector other) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix add(int rowId, Vector other) {\n+    @Override\n+    public Matrix add(int rowId, Vector other) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix isub(int rowId, Vector other) {\n+    @Override\n+    public Matrix isub(int rowId, Vector other) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix sub(int rowId, Vector other) {\n+    @Override\n+    public Matrix sub(int rowId, Vector other) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix imul(int rowId, Vector other) {\n+    @Override\n+    public Matrix imul(int rowId, Vector other) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix mul(int rowId, Vector other) {\n+    @Override\n+    public Matrix mul(int rowId, Vector other) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix idiv(int rowId, Vector other) {\n+    @Override\n+    public Matrix idiv(int rowId, Vector other) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix div(int rowId, Vector other) {\n+    @Override\n+    public Matrix div(int rowId, Vector other) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix iaxpy(int rowId, Vector other, double aplha) {\n+    @Override\n+    public Matrix iaxpy(int rowId, Vector other, double aplha) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix axpy(int rowId, Vector other, double aplha) {\n+    @Override\n+    public Matrix axpy(int rowId, Vector other, double aplha) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix iadd(Vector other) {\n+    @Override\n+    public Matrix iadd(Vector other) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix add(Vector other) {\n+    @Override\n+    public Matrix add(Vector other) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix isub(Vector other) {\n+    @Override\n+    public Matrix isub(Vector other) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix sub(Vector other) {\n+    @Override\n+    public Matrix sub(Vector other) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix imul(Vector other) {\n+    @Override\n+    public Matrix imul(Vector other) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix mul(Vector other) {\n+    @Override\n+    public Matrix mul(Vector other) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix idiv(Vector other) {\n+    @Override\n+    public Matrix idiv(Vector other) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix div(Vector other) {\n+    @Override\n+    public Matrix div(Vector other) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix iaxpy(Vector other, double aplha) {\n+    @Override\n+    public Matrix iaxpy(Vector other, double aplha) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix axpy(Vector other, double aplha) {\n+    @Override\n+    public Matrix axpy(Vector other, double aplha) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix iadd(Matrix other) {\n+    @Override\n+    public Matrix iadd(Matrix other) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix add(Matrix other) {\n+    @Override\n+    public Matrix add(Matrix other) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix isub(Matrix other) {\n+    @Override\n+    public Matrix isub(Matrix other) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix sub(Matrix other) {\n+    @Override\n+    public Matrix sub(Matrix other) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix imul(Matrix other) {\n+    @Override\n+    public Matrix imul(Matrix other) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix mul(Matrix other) {\n+    @Override\n+    public Matrix mul(Matrix other) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix idiv(Matrix other) {\n+    @Override\n+    public Matrix idiv(Matrix other) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix div(Matrix other) {\n+    @Override\n+    public Matrix div(Matrix other) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix iaxpy(Matrix other, double aplha) {\n+    @Override\n+    public Matrix iaxpy(Matrix other, double aplha) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix axpy(Matrix other, double aplha) {\n+    @Override\n+    public Matrix axpy(Matrix other, double aplha) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix iadd(double x) {\n+    @Override\n+    public Matrix iadd(double x) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix add(double x) {\n+    @Override\n+    public Matrix add(double x) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix isub(double x) {\n+    @Override\n+    public Matrix isub(double x) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix sub(double x) {\n+    @Override\n+    public Matrix sub(double x) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix imul(double x) {\n+    @Override\n+    public Matrix imul(double x) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix mul(double x) {\n+    @Override\n+    public Matrix mul(double x) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix idiv(double x) {\n+    @Override\n+    public Matrix idiv(double x) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix div(double x) {\n+    @Override\n+    public Matrix div(double x) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-\n-\n-  @Override\n-  public Vector min(int axis) {\n+    @Override\n+    public Vector min(int axis) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Vector max(int axis) {\n+    @Override\n+    public Vector max(int axis) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Vector sum(int axis) {\n+    @Override\n+    public Vector sum(int axis) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Vector average(int axis) {\n+    @Override\n+    public Vector average(int axis) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Vector std(int axis) {\n+    @Override\n+    public Vector std(int axis) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Vector norm(int axis) {\n+    @Override\n+    public Vector norm(int axis) {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    }\n \n-  @Override\n-  public Matrix copy() {\n+    @Override\n+    public Matrix copy() {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-}\n+    }\n \n+}\n\\ No newline at end of file\n",
            "diff_size": 167
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}